{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\Downloads\\\\customer\\\\customer-onboarding-ui\\\\src\\\\components\\\\OpenTask\\\\OpenTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OpenTask.css';\nimport tasklistApi from '../../services/tasklistApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OpenTask = () => {\n  _s();\n  const [openTasks, setOpenTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [taskVariables, setTaskVariables] = useState({});\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [assigneeName, setAssigneeName] = useState('');\n  const [savingField, setSavingField] = useState(null);\n\n  // Load open tasks from tasklist backend\n  useEffect(() => {\n    const loadOpenTasks = async () => {\n      setLoading(true);\n      try {\n        console.log('Loading tasks from tasklist backend...');\n\n        // Get open tasks from tasklist API\n        const tasks = await tasklistApi.getOpenTasks();\n        console.log('Tasks from tasklist API:', tasks);\n\n        // Transform tasks to match the expected format\n        const openTasksData = tasks.map(task => {\n          var _variables$customerNa, _variables$fullName, _variables$fullName2, _variables$customerNa2, _variables$dob, _variables$mobile, _variables$email, _variables$occupation, _variables$income_ban, _variables$pep, _variables$address, _variables$product, _variables$ids, _variables$income_ban2, _variables$pep2;\n          // Get task variables for customer data\n          const variables = task.variables || {};\n          return {\n            id: task.id,\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\n            creationDate: task.creationTime ? new Date(task.creationTime).toLocaleDateString() : new Date().toLocaleDateString(),\n            creationTime: task.creationTime,\n            completionTime: task.completionTime,\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\n            assignedTo: task.assignee || null,\n            isAssigned: !!task.assignee,\n            processInstanceKey: task.processInstanceKey,\n            processDefinitionId: task.processDefinitionId,\n            processName: task.processName,\n            taskDefinitionId: task.taskDefinitionId,\n            state: task.state || task.taskState,\n            priority: task.priority,\n            dueDate: task.dueDate,\n            followUpDate: task.followUpDate,\n            formKey: task.formKey,\n            candidateGroups: task.candidateGroups || [],\n            candidateUsers: task.candidateUsers || [],\n            sortValues: task.sortValues,\n            isFirst: task.isFirst,\n            // Customer data from task variables\n            customerName: ((_variables$customerNa = variables.customerName) === null || _variables$customerNa === void 0 ? void 0 : _variables$customerNa.value) || ((_variables$fullName = variables.fullName) === null || _variables$fullName === void 0 ? void 0 : _variables$fullName.value) || 'Unknown Customer',\n            customerData: {\n              fullName: ((_variables$fullName2 = variables.fullName) === null || _variables$fullName2 === void 0 ? void 0 : _variables$fullName2.value) || ((_variables$customerNa2 = variables.customerName) === null || _variables$customerNa2 === void 0 ? void 0 : _variables$customerNa2.value) || '',\n              dob: ((_variables$dob = variables.dob) === null || _variables$dob === void 0 ? void 0 : _variables$dob.value) || '',\n              mobile: ((_variables$mobile = variables.mobile) === null || _variables$mobile === void 0 ? void 0 : _variables$mobile.value) || '',\n              email: ((_variables$email = variables.email) === null || _variables$email === void 0 ? void 0 : _variables$email.value) || '',\n              occupation: ((_variables$occupation = variables.occupation) === null || _variables$occupation === void 0 ? void 0 : _variables$occupation.value) || '',\n              income_band: ((_variables$income_ban = variables.income_band) === null || _variables$income_ban === void 0 ? void 0 : _variables$income_ban.value) || '',\n              pep: ((_variables$pep = variables.pep) === null || _variables$pep === void 0 ? void 0 : _variables$pep.value) || false,\n              address: ((_variables$address = variables.address) === null || _variables$address === void 0 ? void 0 : _variables$address.value) || {},\n              product: ((_variables$product = variables.product) === null || _variables$product === void 0 ? void 0 : _variables$product.value) || {},\n              ids: ((_variables$ids = variables.ids) === null || _variables$ids === void 0 ? void 0 : _variables$ids.value) || {}\n            },\n            // Additional task metadata\n            completedSteps: calculateCompletedStepsFromVariables(variables),\n            submissionDate: task.creationTime ? new Date(task.creationTime).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n            incomeBand: ((_variables$income_ban2 = variables.income_band) === null || _variables$income_ban2 === void 0 ? void 0 : _variables$income_ban2.value) || 'Not specified',\n            pep: ((_variables$pep2 = variables.pep) === null || _variables$pep2 === void 0 ? void 0 : _variables$pep2.value) || false\n          };\n        });\n        setOpenTasks(openTasksData);\n        console.log('Processed open tasks:', openTasksData);\n      } catch (error) {\n        console.error('Error loading open tasks from tasklist:', error);\n        addAlert('Error loading tasks from tasklist backend', 'error');\n        setOpenTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOpenTasks();\n\n    // Set up polling to refresh tasks periodically\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get task status based on workflow and application status\n  const getTaskStatus = (workflowStatus, status) => {\n    if (workflowStatus === 'manual_review') return 'Manual Review';\n    if (status === 'pending_review') return 'Pending Review';\n    if (workflowStatus === 'in_progress') return 'In Progress';\n    if (status === 'submitted') return 'Submitted';\n    return 'Unknown';\n  };\n\n  // Calculate completed steps based on available data\n  const calculateCompletedSteps = app => {\n    var _app$customer, _app$customer2, _app$customer3, _app$address, _app$address2, _app$address3, _app$product;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_app$customer = app.customer) !== null && _app$customer !== void 0 && _app$customer.fullName && (_app$customer2 = app.customer) !== null && _app$customer2 !== void 0 && _app$customer2.email && (_app$customer3 = app.customer) !== null && _app$customer3 !== void 0 && _app$customer3.mobile) {\n      steps++;\n    }\n\n    // Check if address is complete\n    if ((_app$address = app.address) !== null && _app$address !== void 0 && _app$address.line1 && (_app$address2 = app.address) !== null && _app$address2 !== void 0 && _app$address2.city && (_app$address3 = app.address) !== null && _app$address3 !== void 0 && _app$address3.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    if (app.documents && app.documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    if ((_app$product = app.product) !== null && _app$product !== void 0 && _app$product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n\n  // Calculate completed steps from task variables\n  const calculateCompletedStepsFromVariables = variables => {\n    var _variables$fullName3, _variables$email2, _variables$mobile2, _variables$address2, _variables$documents, _variables$product2;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_variables$fullName3 = variables.fullName) !== null && _variables$fullName3 !== void 0 && _variables$fullName3.value && (_variables$email2 = variables.email) !== null && _variables$email2 !== void 0 && _variables$email2.value && (_variables$mobile2 = variables.mobile) !== null && _variables$mobile2 !== void 0 && _variables$mobile2.value) {\n      steps++;\n    }\n\n    // Check if address is complete\n    const address = ((_variables$address2 = variables.address) === null || _variables$address2 === void 0 ? void 0 : _variables$address2.value) || {};\n    if (address.line1 && address.city && address.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    const documents = ((_variables$documents = variables.documents) === null || _variables$documents === void 0 ? void 0 : _variables$documents.value) || [];\n    if (documents && documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    const product = ((_variables$product2 = variables.product) === null || _variables$product2 === void 0 ? void 0 : _variables$product2.value) || {};\n    if (product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n  const addAlert = (message, type = 'info') => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n\n  // Load task variables when a task is selected\n  const loadTaskVariables = async taskId => {\n    try {\n      console.log('Loading variables for task from backend port 5174:', taskId);\n      const variables = await tasklistApi.searchTaskVariables(taskId);\n      console.log('Task variables loaded from backend:', variables);\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: variables\n      }));\n\n      // Show success message when variables are loaded\n      addAlert('Task variables loaded successfully', 'success');\n    } catch (error) {\n      console.error('Error loading task variables from backend:', error);\n      addAlert('Failed to load task variables from backend', 'error');\n    }\n  };\n\n  // Handle task selection and load its variables\n  const handleTaskSelection = task => {\n    setSelectedTask(task);\n    if (task) {\n      // Always load fresh variables from backend when task is selected\n      console.log('Task selected, loading variables from backend port 5174...');\n      loadTaskVariables(task.id);\n    }\n  };\n\n  // Get enhanced customer data combining task data and loaded variables\n  const getEnhancedCustomerData = task => {\n    var _variables$userInfo, _variables$fullName4, _variables$customerNa3, _variables$dob2, _variables$email3, _variables$mobile3, _variables$occupation2, _variables$income_ban3, _variables$pep3, _variables$address3, _variables$address3$v, _task$customerData$ad, _variables$address4, _variables$address4$v, _task$customerData$ad2, _variables$address5, _variables$address5$v, _task$customerData$ad3, _variables$address6, _variables$address6$v, _task$customerData$ad4, _variables$address7, _variables$address7$v, _task$customerData$ad5, _variables$address8, _variables$address8$v, _task$customerData$ad6, _variables$product3, _variables$product3$v, _task$customerData$pr, _variables$product4, _variables$product4$v, _task$customerData$pr2, _variables$ids2, _variables$ids2$value, _task$customerData$id, _variables$ids3, _variables$ids3$value, _task$customerData$id2;\n    const variables = taskVariables[task.id] || {};\n\n    // Check if userInfo exists in variables\n    const userInfo = ((_variables$userInfo = variables.userInfo) === null || _variables$userInfo === void 0 ? void 0 : _variables$userInfo.value) || {};\n    const customer = userInfo.customer || {};\n    const address = userInfo.address || {};\n    const ids = userInfo.ids || {};\n    const product = userInfo.product || {};\n    return {\n      // Customer basic info - prioritize userInfo data\n      fullName: customer.fullName || ((_variables$fullName4 = variables.fullName) === null || _variables$fullName4 === void 0 ? void 0 : _variables$fullName4.value) || ((_variables$customerNa3 = variables.customerName) === null || _variables$customerNa3 === void 0 ? void 0 : _variables$customerNa3.value) || task.customerData.fullName || '',\n      dob: customer.dob || ((_variables$dob2 = variables.dob) === null || _variables$dob2 === void 0 ? void 0 : _variables$dob2.value) || task.customerData.dob || '',\n      email: customer.email || ((_variables$email3 = variables.email) === null || _variables$email3 === void 0 ? void 0 : _variables$email3.value) || task.customerData.email || '',\n      mobile: customer.mobile || ((_variables$mobile3 = variables.mobile) === null || _variables$mobile3 === void 0 ? void 0 : _variables$mobile3.value) || task.customerData.mobile || '',\n      occupation: customer.occupation || ((_variables$occupation2 = variables.occupation) === null || _variables$occupation2 === void 0 ? void 0 : _variables$occupation2.value) || task.customerData.occupation || '',\n      income_band: customer.income_band || ((_variables$income_ban3 = variables.income_band) === null || _variables$income_ban3 === void 0 ? void 0 : _variables$income_ban3.value) || task.customerData.income_band || '',\n      pep: customer.pep !== undefined ? customer.pep : ((_variables$pep3 = variables.pep) === null || _variables$pep3 === void 0 ? void 0 : _variables$pep3.value) || task.customerData.pep || false,\n      // Address info - prioritize userInfo data\n      address: {\n        line1: address.line1 || ((_variables$address3 = variables.address) === null || _variables$address3 === void 0 ? void 0 : (_variables$address3$v = _variables$address3.value) === null || _variables$address3$v === void 0 ? void 0 : _variables$address3$v.line1) || ((_task$customerData$ad = task.customerData.address) === null || _task$customerData$ad === void 0 ? void 0 : _task$customerData$ad.line1) || '',\n        line2: address.line2 || ((_variables$address4 = variables.address) === null || _variables$address4 === void 0 ? void 0 : (_variables$address4$v = _variables$address4.value) === null || _variables$address4$v === void 0 ? void 0 : _variables$address4$v.line2) || ((_task$customerData$ad2 = task.customerData.address) === null || _task$customerData$ad2 === void 0 ? void 0 : _task$customerData$ad2.line2) || '',\n        city: address.city || ((_variables$address5 = variables.address) === null || _variables$address5 === void 0 ? void 0 : (_variables$address5$v = _variables$address5.value) === null || _variables$address5$v === void 0 ? void 0 : _variables$address5$v.city) || ((_task$customerData$ad3 = task.customerData.address) === null || _task$customerData$ad3 === void 0 ? void 0 : _task$customerData$ad3.city) || '',\n        state: address.state || ((_variables$address6 = variables.address) === null || _variables$address6 === void 0 ? void 0 : (_variables$address6$v = _variables$address6.value) === null || _variables$address6$v === void 0 ? void 0 : _variables$address6$v.state) || ((_task$customerData$ad4 = task.customerData.address) === null || _task$customerData$ad4 === void 0 ? void 0 : _task$customerData$ad4.state) || '',\n        pin: address.pin || ((_variables$address7 = variables.address) === null || _variables$address7 === void 0 ? void 0 : (_variables$address7$v = _variables$address7.value) === null || _variables$address7$v === void 0 ? void 0 : _variables$address7$v.pin) || ((_task$customerData$ad5 = task.customerData.address) === null || _task$customerData$ad5 === void 0 ? void 0 : _task$customerData$ad5.pin) || '',\n        country: address.country || ((_variables$address8 = variables.address) === null || _variables$address8 === void 0 ? void 0 : (_variables$address8$v = _variables$address8.value) === null || _variables$address8$v === void 0 ? void 0 : _variables$address8$v.country) || ((_task$customerData$ad6 = task.customerData.address) === null || _task$customerData$ad6 === void 0 ? void 0 : _task$customerData$ad6.country) || ''\n      },\n      // Product info - prioritize userInfo data\n      product: {\n        desired_account: product.desired_account || ((_variables$product3 = variables.product) === null || _variables$product3 === void 0 ? void 0 : (_variables$product3$v = _variables$product3.value) === null || _variables$product3$v === void 0 ? void 0 : _variables$product3$v.desired_account) || ((_task$customerData$pr = task.customerData.product) === null || _task$customerData$pr === void 0 ? void 0 : _task$customerData$pr.desired_account) || '',\n        expected_mab_range: product.expected_mab_range || ((_variables$product4 = variables.product) === null || _variables$product4 === void 0 ? void 0 : (_variables$product4$v = _variables$product4.value) === null || _variables$product4$v === void 0 ? void 0 : _variables$product4$v.expected_mab_range) || ((_task$customerData$pr2 = task.customerData.product) === null || _task$customerData$pr2 === void 0 ? void 0 : _task$customerData$pr2.expected_mab_range) || ''\n      },\n      // ID info - prioritize userInfo data\n      ids: {\n        idType: ids.idType || ((_variables$ids2 = variables.ids) === null || _variables$ids2 === void 0 ? void 0 : (_variables$ids2$value = _variables$ids2.value) === null || _variables$ids2$value === void 0 ? void 0 : _variables$ids2$value.idType) || ((_task$customerData$id = task.customerData.ids) === null || _task$customerData$id === void 0 ? void 0 : _task$customerData$id.idType) || '',\n        idNumber: ids.idNumber || ((_variables$ids3 = variables.ids) === null || _variables$ids3 === void 0 ? void 0 : (_variables$ids3$value = _variables$ids3.value) === null || _variables$ids3$value === void 0 ? void 0 : _variables$ids3$value.idNumber) || ((_task$customerData$id2 = task.customerData.ids) === null || _task$customerData$id2 === void 0 ? void 0 : _task$customerData$id2.idNumber) || ''\n      },\n      // Additional userInfo fields\n      submissionTimestamp: userInfo.submissionTimestamp || ''\n    };\n  };\n  const handleTaskAction = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log(`${action}ing task:`, selectedTask.id);\n\n      // Prepare variables to pass when completing the task\n      const variables = [{\n        name: 'reviewDecision',\n        value: action === 'approve' ? 'approved' : 'rejected'\n      }, {\n        name: 'reviewDate',\n        value: new Date().toISOString()\n      }, {\n        name: 'reviewer',\n        value: 'Admin User'\n      }];\n\n      // Complete the task with the decision\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\n      console.log('Task completion result:', completedTask);\n\n      // Update local state - remove the task from open tasks since it's now completed\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\n      addAlert(`Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, 'success');\n\n      // Clear selection since the task is no longer in the list\n      setSelectedTask(null);\n    } catch (error) {\n      console.error('Error processing task action:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show assign modal\n  const showAssignTaskModal = () => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setAssigneeName('');\n    setShowAssignModal(true);\n  };\n\n  // Handle task assignment with assignee name\n  const handleTaskAssignment = async (action, assigneeName = null) => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    if (action === 'assign' && !assigneeName) {\n      addAlert('Please enter assignee name', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      let updatedTask;\n      if (action === 'assign') {\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\n        console.log('Making API call to assign task...');\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\n        console.log('Assignment API call completed:', updatedTask);\n      } else {\n        console.log('Unassigning task:', selectedTask.id);\n        console.log('Making API call to unassign task...');\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\n        console.log('Unassignment API call completed:', updatedTask);\n      }\n      console.log('Task assignment result:', updatedTask);\n\n      // Update local state\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\n      setOpenTasks(prev => prev.map(task => task.id === selectedTask.id ? {\n        ...task,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      } : task));\n\n      // Update selected task\n      setSelectedTask(prev => ({\n        ...prev,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      }));\n      addAlert(`Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, 'success');\n\n      // Close modal if it was open\n      setShowAssignModal(false);\n      setAssigneeName('');\n    } catch (error) {\n      console.error('Error processing task assignment:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        response: error.response\n      });\n      let errorMessage = `Failed to ${action} task`;\n      if (error.message) {\n        errorMessage += `: ${error.message}`;\n      }\n      addAlert(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle assign modal confirmation\n  const handleAssignConfirm = () => {\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\n    console.log('Assignee name:', assigneeName);\n    console.log('Assignee name trimmed:', assigneeName.trim());\n    console.log('Selected task:', selectedTask);\n    if (assigneeName.trim()) {\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\n      handleTaskAssignment('assign', assigneeName.trim());\n    } else {\n      console.log('No assignee name provided');\n      addAlert('Please enter assignee name', 'error');\n    }\n  };\n  const getStatusColor = status => {\n    // Using CSS variables for consistent theming\n    const root = document.documentElement;\n    const getVar = varName => getComputedStyle(root).getPropertyValue(varName).trim();\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'created':\n        return getVar('--color-info');\n      case 'assigned':\n        return getVar('--color-warning');\n      case 'unassigned':\n        return getVar('--color-warning-alt');\n      case 'completed':\n        return getVar('--color-success');\n      case 'canceled':\n        return getVar('--color-danger');\n      // Legacy statuses for backward compatibility\n      case 'submitted':\n        return getVar('--color-info');\n      case 'in_progress':\n        return getVar('--color-warning');\n      case 'pending_review':\n        return getVar('--color-warning-alt');\n      case 'manual_review':\n        return getVar('--color-danger');\n      default:\n        return getVar('--color-secondary');\n    }\n  };\n\n  // Handle field value change\n  const handleFieldChange = (taskId, fieldName, newValue) => {\n    // Update the task variables immediately for UI responsiveness\n    setTaskVariables(prev => ({\n      ...prev,\n      [taskId]: prev[taskId].map(variable => variable.name === fieldName ? {\n        ...variable,\n        value: newValue\n      } : variable)\n    }));\n  };\n\n  // Direct field save without edit mode\n  const handleDirectFieldSave = async (taskId, fieldName, newValue) => {\n    var _taskVariables$taskId;\n    const fieldKey = `${taskId}_${fieldName}`;\n\n    // Get current value to check if it actually changed\n    const currentVariable = (_taskVariables$taskId = taskVariables[taskId]) === null || _taskVariables$taskId === void 0 ? void 0 : _taskVariables$taskId.find(v => v.name === fieldName);\n    const currentValue = currentVariable === null || currentVariable === void 0 ? void 0 : currentVariable.value;\n\n    // Don't save if value hasn't changed\n    if (currentValue === newValue) {\n      return;\n    }\n    setSavingField(fieldKey);\n    try {\n      console.log('=== DIRECT FIELD SAVE DEBUG ===');\n      console.log('Task ID:', taskId);\n      console.log('Field Name:', fieldName);\n      console.log('Current Value:', currentValue);\n      console.log('New Value:', newValue);\n\n      // Prepare the variable update\n      const variables = [{\n        name: fieldName,\n        value: newValue\n      }];\n      console.log('Variables to send:', variables);\n\n      // Update the task variable via API\n      console.log('Calling tasklistApi.updateTaskVariables...');\n      const result = await tasklistApi.updateTaskVariables(taskId, variables);\n      console.log('API call successful, result:', result);\n\n      // Update local state (already updated in handleFieldChange, but ensure consistency)\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: prev[taskId].map(variable => variable.name === fieldName ? {\n          ...variable,\n          value: newValue\n        } : variable)\n      }));\n      addAlert(`Field \"${fieldName}\" updated successfully`, 'success');\n    } catch (error) {\n      console.error('Failed to update field:', error);\n\n      // Revert the UI change on error\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: prev[taskId].map(variable => variable.name === fieldName ? {\n          ...variable,\n          value: currentValue\n        } : variable)\n      }));\n      addAlert(`Failed to update field \"${fieldName}\": ${error.message}`, 'error');\n    } finally {\n      setSavingField(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All open tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.type}`,\n      children: alert.message\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-panel panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header flex-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All open tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-icon\",\n            children: \"\\u21C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please wait while we fetch your open tasks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this) : openTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-tasks-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No tasks found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no tasks matching your filter criteria.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this) : openTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-card ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'selected' : ''}`,\n            onClick: () => handleTaskSelection(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: task.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Creation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.creationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Task Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.taskStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-panel panel\",\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details-header flex-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Task Details: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-assignment-controls\",\n              children: selectedTask.isAssigned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"assigned-to\",\n                  children: [\"Assigned to: \", selectedTask.assignedTo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary unassign-btn btn-base\",\n                  onClick: () => handleTaskAssignment('unassign'),\n                  disabled: loading,\n                  children: loading ? 'Unassigning...' : 'Unassign'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary assign-btn btn-base\",\n                onClick: showAssignTaskModal,\n                disabled: loading,\n                children: loading ? 'Assigning...' : 'Assign Task'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-sections\",\n            children: [!taskVariables[selectedTask.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Loading Task Information...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Fetching task variables from backend...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this), taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section task-variables-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"variables-grid\",\n                children: taskVariables[selectedTask.id].filter(variable => {\n                  // Filter out specific fields that should not be displayed\n                  const fieldsToHide = ['documentPath', 'document_path', 'documentpath', 'currentStep', 'current_step', 'currentstep', 'nextStep', 'next_step', 'nextstep', 'pan', 'PAN', 'status', 'Status'];\n                  return !fieldsToHide.includes(variable.name);\n                }).map((variable, index) => {\n                  // Parse userInfo if it's the userInfo variable\n                  if (variable.name === 'userInfo') {\n                    try {\n                      const userInfo = JSON.parse(variable.value);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"variable-group-title\",\n                          children: \"Customer Information\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 640,\n                          columnNumber: 33\n                        }, this), userInfo.customer && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Personal Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 645,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.customer).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 648,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: key === 'dob' && value ? new Date(value).toLocaleDateString() : key === 'pep' ? value ? 'Yes' : 'No' : value || 'Not provided'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 649,\n                              columnNumber: 41\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 647,\n                            columnNumber: 39\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 644,\n                          columnNumber: 35\n                        }, this), userInfo.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Address Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.address).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 666,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 667,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 665,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 35\n                        }, this), userInfo.ids && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Identity Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 677,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.ids).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 681,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: key === 'idType' ? value.toUpperCase() : value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 682,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 680,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 676,\n                          columnNumber: 35\n                        }, this), userInfo.product && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Product Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 692,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.product).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 696,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 697,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 695,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 691,\n                          columnNumber: 35\n                        }, this), userInfo.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Submission Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 707,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: \"Submission Timestamp:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 709,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: new Date(userInfo.submissionTimestamp).toLocaleString()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 710,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 708,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 706,\n                          columnNumber: 35\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 31\n                      }, this);\n                    } catch (e) {\n                      // If parsing fails, show as regular variable\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"variable-name\",\n                          children: [variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 720,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"variable-value\",\n                          children: variable.value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 721,\n                          columnNumber: 33\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 719,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  } else {\n                    // Regular variables\n                    let displayValue = variable.value;\n\n                    // Clean up JSON strings\n                    if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\n                      displayValue = displayValue.slice(1, -1);\n                    }\n\n                    // Parse arrays if they're JSON strings\n                    if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\n                      try {\n                        const steps = JSON.parse(displayValue);\n                        displayValue = steps.join(', ');\n                      } catch (e) {\n                        // Keep original value if parsing fails\n                      }\n                    }\n                    const fieldKey = `${selectedTask.id}_${variable.name}`;\n                    const isEditing = editingFields[fieldKey];\n                    const editedValue = editedValues[fieldKey];\n                    const isSaving = savingField === fieldKey;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"variable-item editable-variable\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"variable-name\",\n                        children: [variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-edit-container\",\n                        children: [variable.name === 'pep' || variable.name === 'riskCleared' ? /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: displayValue === 'true' || displayValue === true ? 'true' : 'false',\n                          onChange: e => handleDirectFieldSave(selectedTask.id, variable.name, e.target.value),\n                          className: \"variable-edit-select\",\n                          disabled: isSaving,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"true\",\n                            children: \"Yes\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 761,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"false\",\n                            children: \"No\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 762,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 755,\n                          columnNumber: 35\n                        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          value: displayValue || '',\n                          onChange: e => handleFieldChange(selectedTask.id, variable.name, e.target.value),\n                          onBlur: e => handleDirectFieldSave(selectedTask.id, variable.name, e.target.value),\n                          onKeyPress: e => {\n                            if (e.key === 'Enter') {\n                              handleDirectFieldSave(selectedTask.id, variable.name, e.target.value);\n                            }\n                          },\n                          className: \"variable-edit-input\",\n                          disabled: isSaving,\n                          placeholder: displayValue === 'null' ? 'Not set' : 'Enter value...'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 765,\n                          columnNumber: 35\n                        }, this), isSaving && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"saving-indicator\",\n                          children: \"Saving...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 780,\n                          columnNumber: 46\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 29\n                    }, this);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this), (!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Customer Personal Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: (() => {\n                  const customerData = getEnhancedCustomerData(selectedTask);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [customerData.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Full Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 800,\n                        columnNumber: 36\n                      }, this), \" \", customerData.fullName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 800,\n                      columnNumber: 31\n                    }, this), customerData.dob && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Date of Birth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 803,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.dob).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 803,\n                      columnNumber: 31\n                    }, this), customerData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 806,\n                        columnNumber: 36\n                      }, this), \" \", customerData.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 31\n                    }, this), customerData.mobile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Mobile:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 809,\n                        columnNumber: 36\n                      }, this), \" \", customerData.mobile]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 809,\n                      columnNumber: 31\n                    }, this), customerData.occupation && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Occupation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 812,\n                        columnNumber: 36\n                      }, this), \" \", customerData.occupation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 31\n                    }, this), customerData.income_band && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Income Band:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 815,\n                        columnNumber: 36\n                      }, this), \" \", customerData.income_band]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"PEP Status:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 34\n                      }, this), \" \", customerData.pep ? 'Yes' : 'No']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 29\n                    }, this), customerData.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Submission Date:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.submissionTimestamp).toLocaleString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this), selectedTask.documents && selectedTask.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Documents (\", selectedTask.documents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"documents-list\",\n                children: selectedTask.documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"document-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doc-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-name\",\n                      children: doc.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-type\",\n                      children: doc.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Current Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus)\n                    },\n                    children: (selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.creationDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 21\n                }, this), selectedTask.processInstanceKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Instance:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processInstanceKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 23\n                }, this), selectedTask.taskDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.taskDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 23\n                }, this), selectedTask.processDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 23\n                }, this), selectedTask.processName && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 23\n                }, this), selectedTask.priority && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 893,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.priority]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 23\n                }, this), selectedTask.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Due Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 898,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.dueDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 23\n                }, this), selectedTask.followUpDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Follow Up Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.followUpDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 23\n                }, this), selectedTask.formKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Form Key:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.formKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 23\n                }, this), selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Groups:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateGroups.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 23\n                }, this), selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateUsers.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 23\n                }, this), selectedTask.creationTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.creationTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 23\n                }, this), selectedTask.completionTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completion Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.completionTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-approve\",\n                  onClick: () => handleTaskAction('approve'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✓ Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-reject\",\n                  onClick: () => handleTaskAction('reject'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✗ Reject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a task from the list to view its details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), showAssignModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowAssignModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Assign Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAssignModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Assign task \\\"\", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskName, \"\\\" to:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"assignee-input\",\n            placeholder: \"Enter assignee name\",\n            value: assigneeName,\n            onChange: e => setAssigneeName(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAssignConfirm();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowAssignModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAssignConfirm,\n            disabled: !assigneeName.trim() || loading,\n            children: loading ? 'Assigning...' : 'Assign'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenTask, \"Ss+V659Lx6Q+kEmVmtgkEGUQyVw=\");\n_c = OpenTask;\nexport default OpenTask;\nvar _c;\n$RefreshReg$(_c, \"OpenTask\");","map":{"version":3,"names":["React","useState","useEffect","tasklistApi","jsxDEV","_jsxDEV","Fragment","_Fragment","OpenTask","_s","openTasks","setOpenTasks","selectedTask","setSelectedTask","loading","setLoading","alerts","setAlerts","taskVariables","setTaskVariables","showAssignModal","setShowAssignModal","assigneeName","setAssigneeName","savingField","setSavingField","loadOpenTasks","console","log","tasks","getOpenTasks","openTasksData","map","task","_variables$customerNa","_variables$fullName","_variables$fullName2","_variables$customerNa2","_variables$dob","_variables$mobile","_variables$email","_variables$occupation","_variables$income_ban","_variables$pep","_variables$address","_variables$product","_variables$ids","_variables$income_ban2","_variables$pep2","variables","id","taskName","name","taskDefinitionId","creationDate","creationTime","Date","toLocaleDateString","completionTime","taskStatus","assignee","assignedTo","isAssigned","processInstanceKey","processDefinitionId","processName","state","taskState","priority","dueDate","followUpDate","formKey","candidateGroups","candidateUsers","sortValues","isFirst","customerName","value","fullName","customerData","dob","mobile","email","occupation","income_band","pep","address","product","ids","completedSteps","calculateCompletedStepsFromVariables","submissionDate","toISOString","split","incomeBand","error","addAlert","interval","setInterval","clearInterval","getTaskStatus","workflowStatus","status","calculateCompletedSteps","app","_app$customer","_app$customer2","_app$customer3","_app$address","_app$address2","_app$address3","_app$product","steps","customer","line1","city","documents","length","desired_account","_variables$fullName3","_variables$email2","_variables$mobile2","_variables$address2","_variables$documents","_variables$product2","message","type","alert","now","prev","setTimeout","filter","a","loadTaskVariables","taskId","searchTaskVariables","handleTaskSelection","getEnhancedCustomerData","_variables$userInfo","_variables$fullName4","_variables$customerNa3","_variables$dob2","_variables$email3","_variables$mobile3","_variables$occupation2","_variables$income_ban3","_variables$pep3","_variables$address3","_variables$address3$v","_task$customerData$ad","_variables$address4","_variables$address4$v","_task$customerData$ad2","_variables$address5","_variables$address5$v","_task$customerData$ad3","_variables$address6","_variables$address6$v","_task$customerData$ad4","_variables$address7","_variables$address7$v","_task$customerData$ad5","_variables$address8","_variables$address8$v","_task$customerData$ad6","_variables$product3","_variables$product3$v","_task$customerData$pr","_variables$product4","_variables$product4$v","_task$customerData$pr2","_variables$ids2","_variables$ids2$value","_task$customerData$id","_variables$ids3","_variables$ids3$value","_task$customerData$id2","userInfo","undefined","line2","pin","country","expected_mab_range","idType","idNumber","submissionTimestamp","handleTaskAction","action","completedTask","completeTask","showAssignTaskModal","handleTaskAssignment","updatedTask","assignTask","unassignTask","newAssignedTo","stack","response","errorMessage","handleAssignConfirm","trim","getStatusColor","root","document","documentElement","getVar","varName","getComputedStyle","getPropertyValue","toLowerCase","handleFieldChange","fieldName","newValue","variable","handleDirectFieldSave","_taskVariables$taskId","fieldKey","currentVariable","find","v","currentValue","result","updateTaskVariables","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","fieldsToHide","includes","index","JSON","parse","Object","entries","key","replace","str","toUpperCase","toLocaleString","e","displayValue","startsWith","endsWith","slice","join","isEditing","editingFields","editedValue","editedValues","isSaving","onChange","target","onBlur","onKeyPress","placeholder","doc","style","backgroundColor","stopPropagation","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/Downloads/customer/customer-onboarding-ui/src/components/OpenTask/OpenTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './OpenTask.css';\r\nimport tasklistApi from '../../services/tasklistApi';\r\n\r\nconst OpenTask = () => {\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [taskVariables, setTaskVariables] = useState({});\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [assigneeName, setAssigneeName] = useState('');\r\n\r\n  const [savingField, setSavingField] = useState(null);\r\n\r\n  // Load open tasks from tasklist backend\r\n  useEffect(() => {\r\n    const loadOpenTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log('Loading tasks from tasklist backend...');\r\n        \r\n        // Get open tasks from tasklist API\r\n        const tasks = await tasklistApi.getOpenTasks();\r\n        console.log('Tasks from tasklist API:', tasks);\r\n        \r\n        // Transform tasks to match the expected format\r\n        const openTasksData = tasks.map(task => {\r\n          // Get task variables for customer data\r\n          const variables = task.variables || {};\r\n          \r\n          return {\r\n            id: task.id,\r\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\r\n            creationDate: task.creationTime ? \r\n              new Date(task.creationTime).toLocaleDateString() : \r\n              new Date().toLocaleDateString(),\r\n            creationTime: task.creationTime,\r\n            completionTime: task.completionTime,\r\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\r\n            assignedTo: task.assignee || null,\r\n            isAssigned: !!task.assignee,\r\n            processInstanceKey: task.processInstanceKey,\r\n            processDefinitionId: task.processDefinitionId,\r\n            processName: task.processName,\r\n            taskDefinitionId: task.taskDefinitionId,\r\n            state: task.state || task.taskState,\r\n            priority: task.priority,\r\n            dueDate: task.dueDate,\r\n            followUpDate: task.followUpDate,\r\n            formKey: task.formKey,\r\n            candidateGroups: task.candidateGroups || [],\r\n            candidateUsers: task.candidateUsers || [],\r\n            sortValues: task.sortValues,\r\n            isFirst: task.isFirst,\r\n            // Customer data from task variables\r\n            customerName: variables.customerName?.value || \r\n                         variables.fullName?.value || \r\n                         'Unknown Customer',\r\n            customerData: {\r\n              fullName: variables.fullName?.value || variables.customerName?.value || '',\r\n              dob: variables.dob?.value || '',\r\n              mobile: variables.mobile?.value || '',\r\n              email: variables.email?.value || '',\r\n              occupation: variables.occupation?.value || '',\r\n              income_band: variables.income_band?.value || '',\r\n              pep: variables.pep?.value || false,\r\n              address: variables.address?.value || {},\r\n              product: variables.product?.value || {},\r\n              ids: variables.ids?.value || {}\r\n            },\r\n            // Additional task metadata\r\n            completedSteps: calculateCompletedStepsFromVariables(variables),\r\n            submissionDate: task.creationTime ? \r\n              new Date(task.creationTime).toISOString().split('T')[0] : \r\n              new Date().toISOString().split('T')[0],\r\n            incomeBand: variables.income_band?.value || 'Not specified',\r\n            pep: variables.pep?.value || false\r\n          };\r\n        });\r\n        \r\n        setOpenTasks(openTasksData);\r\n        console.log('Processed open tasks:', openTasksData);\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading open tasks from tasklist:', error);\r\n        addAlert('Error loading tasks from tasklist backend', 'error');\r\n        setOpenTasks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOpenTasks();\r\n    \r\n    // Set up polling to refresh tasks periodically\r\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get task status based on workflow and application status\r\n  const getTaskStatus = (workflowStatus, status) => {\r\n    if (workflowStatus === 'manual_review') return 'Manual Review';\r\n    if (status === 'pending_review') return 'Pending Review';\r\n    if (workflowStatus === 'in_progress') return 'In Progress';\r\n    if (status === 'submitted') return 'Submitted';\r\n    return 'Unknown';\r\n  };\r\n\r\n  // Calculate completed steps based on available data\r\n  const calculateCompletedSteps = (app) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (app.customer?.fullName && app.customer?.email && app.customer?.mobile) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    if (app.address?.line1 && app.address?.city && app.address?.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    if (app.documents && app.documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    if (app.product?.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  // Calculate completed steps from task variables\r\n  const calculateCompletedStepsFromVariables = (variables) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (variables.fullName?.value && variables.email?.value && variables.mobile?.value) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    const address = variables.address?.value || {};\r\n    if (address.line1 && address.city && address.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    const documents = variables.documents?.value || [];\r\n    if (documents && documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    const product = variables.product?.value || {};\r\n    if (product.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  const addAlert = (message, type = 'info') => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts(prev => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Load task variables when a task is selected\r\n  const loadTaskVariables = async (taskId) => {\r\n    try {\r\n      console.log('Loading variables for task from backend port 5174:', taskId);\r\n      const variables = await tasklistApi.searchTaskVariables(taskId);\r\n      console.log('Task variables loaded from backend:', variables);\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: variables\r\n      }));\r\n      \r\n      // Show success message when variables are loaded\r\n      addAlert('Task variables loaded successfully', 'success');\r\n    } catch (error) {\r\n      console.error('Error loading task variables from backend:', error);\r\n      addAlert('Failed to load task variables from backend', 'error');\r\n    }\r\n  };\r\n\r\n  // Handle task selection and load its variables\r\n  const handleTaskSelection = (task) => {\r\n    setSelectedTask(task);\r\n    if (task) {\r\n      // Always load fresh variables from backend when task is selected\r\n      console.log('Task selected, loading variables from backend port 5174...');\r\n      loadTaskVariables(task.id);\r\n    }\r\n  };\r\n\r\n  // Get enhanced customer data combining task data and loaded variables\r\n  const getEnhancedCustomerData = (task) => {\r\n    const variables = taskVariables[task.id] || {};\r\n    \r\n    // Check if userInfo exists in variables\r\n    const userInfo = variables.userInfo?.value || {};\r\n    const customer = userInfo.customer || {};\r\n    const address = userInfo.address || {};\r\n    const ids = userInfo.ids || {};\r\n    const product = userInfo.product || {};\r\n    \r\n    return {\r\n      // Customer basic info - prioritize userInfo data\r\n      fullName: customer.fullName || variables.fullName?.value || variables.customerName?.value || task.customerData.fullName || '',\r\n      dob: customer.dob || variables.dob?.value || task.customerData.dob || '',\r\n      email: customer.email || variables.email?.value || task.customerData.email || '',\r\n      mobile: customer.mobile || variables.mobile?.value || task.customerData.mobile || '',\r\n      occupation: customer.occupation || variables.occupation?.value || task.customerData.occupation || '',\r\n      income_band: customer.income_band || variables.income_band?.value || task.customerData.income_band || '',\r\n      pep: customer.pep !== undefined ? customer.pep : (variables.pep?.value || task.customerData.pep || false),\r\n      \r\n      // Address info - prioritize userInfo data\r\n      address: {\r\n        line1: address.line1 || variables.address?.value?.line1 || task.customerData.address?.line1 || '',\r\n        line2: address.line2 || variables.address?.value?.line2 || task.customerData.address?.line2 || '',\r\n        city: address.city || variables.address?.value?.city || task.customerData.address?.city || '',\r\n        state: address.state || variables.address?.value?.state || task.customerData.address?.state || '',\r\n        pin: address.pin || variables.address?.value?.pin || task.customerData.address?.pin || '',\r\n        country: address.country || variables.address?.value?.country || task.customerData.address?.country || ''\r\n      },\r\n      \r\n      // Product info - prioritize userInfo data\r\n      product: {\r\n        desired_account: product.desired_account || variables.product?.value?.desired_account || task.customerData.product?.desired_account || '',\r\n        expected_mab_range: product.expected_mab_range || variables.product?.value?.expected_mab_range || task.customerData.product?.expected_mab_range || ''\r\n      },\r\n      \r\n      // ID info - prioritize userInfo data\r\n      ids: {\r\n        idType: ids.idType || variables.ids?.value?.idType || task.customerData.ids?.idType || '',\r\n        idNumber: ids.idNumber || variables.ids?.value?.idNumber || task.customerData.ids?.idNumber || ''\r\n      },\r\n      \r\n      // Additional userInfo fields\r\n      submissionTimestamp: userInfo.submissionTimestamp || ''\r\n    };\r\n  };\r\n\r\n  const handleTaskAction = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log(`${action}ing task:`, selectedTask.id);\r\n\r\n      // Prepare variables to pass when completing the task\r\n      const variables = [\r\n        {\r\n          name: 'reviewDecision',\r\n          value: action === 'approve' ? 'approved' : 'rejected'\r\n        },\r\n        {\r\n          name: 'reviewDate',\r\n          value: new Date().toISOString()\r\n        },\r\n        {\r\n          name: 'reviewer',\r\n          value: 'Admin User'\r\n        }\r\n      ];\r\n\r\n      // Complete the task with the decision\r\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\r\n      console.log('Task completion result:', completedTask);\r\n\r\n      // Update local state - remove the task from open tasks since it's now completed\r\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Clear selection since the task is no longer in the list\r\n      setSelectedTask(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task action:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Show assign modal\r\n  const showAssignTaskModal = () => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n    setAssigneeName('');\r\n    setShowAssignModal(true);\r\n  };\r\n\r\n  // Handle task assignment with assignee name\r\n  const handleTaskAssignment = async (action, assigneeName = null) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    if (action === 'assign' && !assigneeName) {\r\n      addAlert('Please enter assignee name', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      let updatedTask;\r\n\r\n      if (action === 'assign') {\r\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\r\n        console.log('Making API call to assign task...');\r\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\r\n        console.log('Assignment API call completed:', updatedTask);\r\n      } else {\r\n        console.log('Unassigning task:', selectedTask.id);\r\n        console.log('Making API call to unassign task...');\r\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\r\n        console.log('Unassignment API call completed:', updatedTask);\r\n      }\r\n\r\n      console.log('Task assignment result:', updatedTask);\r\n\r\n      // Update local state\r\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\r\n      setOpenTasks(prev => prev.map(task => \r\n        task.id === selectedTask.id \r\n          ? { \r\n              ...task, \r\n              assignedTo: newAssignedTo,\r\n              isAssigned: !!newAssignedTo,\r\n              taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n            }\r\n          : task\r\n      ));\r\n\r\n      // Update selected task\r\n      setSelectedTask(prev => ({\r\n        ...prev,\r\n        assignedTo: newAssignedTo,\r\n        isAssigned: !!newAssignedTo,\r\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n      }));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Close modal if it was open\r\n      setShowAssignModal(false);\r\n      setAssigneeName('');\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task assignment:', error);\r\n      console.error('Error details:', {\r\n        message: error.message,\r\n        stack: error.stack,\r\n        response: error.response\r\n      });\r\n      \r\n      let errorMessage = `Failed to ${action} task`;\r\n      if (error.message) {\r\n        errorMessage += `: ${error.message}`;\r\n      }\r\n      \r\n      addAlert(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle assign modal confirmation\r\n  const handleAssignConfirm = () => {\r\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\r\n    console.log('Assignee name:', assigneeName);\r\n    console.log('Assignee name trimmed:', assigneeName.trim());\r\n    console.log('Selected task:', selectedTask);\r\n    \r\n    if (assigneeName.trim()) {\r\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\r\n      handleTaskAssignment('assign', assigneeName.trim());\r\n    } else {\r\n      console.log('No assignee name provided');\r\n      addAlert('Please enter assignee name', 'error');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getStatusColor = (status) => {\r\n    // Using CSS variables for consistent theming\r\n    const root = document.documentElement;\r\n    const getVar = (varName) => getComputedStyle(root).getPropertyValue(varName).trim();\r\n    \r\n    switch (status?.toLowerCase()) {\r\n      case 'created': return getVar('--color-info');\r\n      case 'assigned': return getVar('--color-warning');\r\n      case 'unassigned': return getVar('--color-warning-alt');\r\n      case 'completed': return getVar('--color-success');\r\n      case 'canceled': return getVar('--color-danger');\r\n      // Legacy statuses for backward compatibility\r\n      case 'submitted': return getVar('--color-info');\r\n      case 'in_progress': return getVar('--color-warning');\r\n      case 'pending_review': return getVar('--color-warning-alt');\r\n      case 'manual_review': return getVar('--color-danger');\r\n      default: return getVar('--color-secondary');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Handle field value change\r\n  const handleFieldChange = (taskId, fieldName, newValue) => {\r\n    // Update the task variables immediately for UI responsiveness\r\n    setTaskVariables(prev => ({\r\n      ...prev,\r\n      [taskId]: prev[taskId].map(variable => \r\n        variable.name === fieldName \r\n          ? { ...variable, value: newValue }\r\n          : variable\r\n      )\r\n    }));\r\n  };\r\n\r\n  // Direct field save without edit mode\r\n  const handleDirectFieldSave = async (taskId, fieldName, newValue) => {\r\n    const fieldKey = `${taskId}_${fieldName}`;\r\n    \r\n    // Get current value to check if it actually changed\r\n    const currentVariable = taskVariables[taskId]?.find(v => v.name === fieldName);\r\n    const currentValue = currentVariable?.value;\r\n    \r\n    // Don't save if value hasn't changed\r\n    if (currentValue === newValue) {\r\n      return;\r\n    }\r\n    \r\n    setSavingField(fieldKey);\r\n    \r\n    try {\r\n      console.log('=== DIRECT FIELD SAVE DEBUG ===');\r\n      console.log('Task ID:', taskId);\r\n      console.log('Field Name:', fieldName);\r\n      console.log('Current Value:', currentValue);\r\n      console.log('New Value:', newValue);\r\n      \r\n      // Prepare the variable update\r\n      const variables = [{\r\n        name: fieldName,\r\n        value: newValue\r\n      }];\r\n      \r\n      console.log('Variables to send:', variables);\r\n\r\n      // Update the task variable via API\r\n      console.log('Calling tasklistApi.updateTaskVariables...');\r\n      const result = await tasklistApi.updateTaskVariables(taskId, variables);\r\n      console.log('API call successful, result:', result);\r\n      \r\n      // Update local state (already updated in handleFieldChange, but ensure consistency)\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: prev[taskId].map(variable => \r\n          variable.name === fieldName \r\n            ? { ...variable, value: newValue }\r\n            : variable\r\n        )\r\n      }));\r\n\r\n      addAlert(`Field \"${fieldName}\" updated successfully`, 'success');\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to update field:', error);\r\n      \r\n      // Revert the UI change on error\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: prev[taskId].map(variable => \r\n          variable.name === fieldName \r\n            ? { ...variable, value: currentValue }\r\n            : variable\r\n        )\r\n      }));\r\n      \r\n      addAlert(`Failed to update field \"${fieldName}\": ${error.message}`, 'error');\r\n    } finally {\r\n      setSavingField(null);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"open-task-container\">\r\n      <h1 className=\"page-title\">All open tasks</h1>\r\n\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"task-layout\">\r\n        {/* Tasks List */}\r\n        <div className=\"tasks-panel panel\">\r\n          <div className=\"tasks-header flex-header\">\r\n            <h2>All open tasks</h2>\r\n            <div className=\"sort-icon\">⇅</div>\r\n          </div>\r\n          \r\n          <div className=\"tasks-list\">\r\n            {loading ? (\r\n              <div className=\"loading-tasks empty-state\">\r\n                <div className=\"loading-spinner\">⏳</div>\r\n                <h3>Loading tasks...</h3>\r\n                <p>Please wait while we fetch your open tasks.</p>\r\n              </div>\r\n            ) : openTasks.length === 0 ? (\r\n              <div className=\"no-tasks empty-state\">\r\n                <div className=\"no-tasks-icon\">🔍</div>\r\n                <h3>No tasks found</h3>\r\n                <p>There are no tasks matching your filter criteria.</p>\r\n              </div>\r\n            ) : (\r\n              openTasks.map(task => (\r\n                <div \r\n                  key={task.id} \r\n                  className={`task-card ${selectedTask?.id === task.id ? 'selected' : ''}`}\r\n                  onClick={() => handleTaskSelection(task)}\r\n                >\r\n                  <div className=\"task-header\">\r\n                    <h3>{task.taskName}</h3>\r\n                  </div>\r\n                  <div className=\"task-details\">\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Creation Date:</span>\r\n                      <span className=\"detail-value\">{task.creationDate}</span>\r\n                    </div>\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Task Status:</span>\r\n                      <span className=\"detail-value\">{task.taskStatus}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Details Panel */}\r\n        <div className=\"task-details-panel panel\">\r\n          {selectedTask ? (\r\n            <>\r\n              <div className=\"task-details-header flex-header\">\r\n                <h2>Task Details: </h2>\r\n\r\n                {/* <h2>Task Details: {selectedTask.customerName}</h2> */}\r\n                <div className=\"task-assignment-controls\">\r\n                  {selectedTask.isAssigned ? (\r\n                    <>\r\n                      <span className=\"assigned-to\">Assigned to: {selectedTask.assignedTo}</span>\r\n                      <button \r\n                        className=\"btn btn-secondary unassign-btn btn-base\"\r\n                        onClick={() => handleTaskAssignment('unassign')}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Unassigning...' : 'Unassign'}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary assign-btn btn-base\"\r\n                      onClick={showAssignTaskModal}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Assigning...' : 'Assign Task'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"details-sections\">\r\n                {/* Loading message while variables are being fetched */}\r\n                {!taskVariables[selectedTask.id] && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Loading Task Information...</h3>\r\n                    <div className=\"loading-message\">\r\n                      <p>Fetching task variables from backend...</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Variables - All Key-Value Pairs */}\r\n                {taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && (\r\n                  <div className=\"details-section task-variables-section\">\r\n                    <h3>Task Information</h3>\r\n                    <div className=\"variables-grid\">\r\n                      {taskVariables[selectedTask.id]\r\n                        .filter(variable => {\r\n                          // Filter out specific fields that should not be displayed\r\n                          const fieldsToHide = [\r\n                            'documentPath', 'document_path', 'documentpath',\r\n                            'currentStep', 'current_step', 'currentstep',\r\n                            'nextStep', 'next_step', 'nextstep',\r\n                            'pan', 'PAN',\r\n                            'status', 'Status'\r\n                          ];\r\n                          return !fieldsToHide.includes(variable.name);\r\n                        })\r\n                        .map((variable, index) => {\r\n                        // Parse userInfo if it's the userInfo variable\r\n                        if (variable.name === 'userInfo') {\r\n                          try {\r\n                            const userInfo = JSON.parse(variable.value);\r\n                            return (\r\n                              <div key={index} className=\"variable-group\">\r\n                                <h4 className=\"variable-group-title\">Customer Information</h4>\r\n                                \r\n                                {/* Customer Details */}\r\n                                {userInfo.customer && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Personal Details</h5>\r\n                                    {Object.entries(userInfo.customer).map(([key, value]) => (\r\n                                      <div key={key} className=\"variable-item\">\r\n                                        <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                        <span className=\"variable-value\">\r\n                                          {key === 'dob' && value ? new Date(value).toLocaleDateString() : \r\n                                           key === 'pep' ? (value ? 'Yes' : 'No') :\r\n                                           value || 'Not provided'}\r\n                                        </span>\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Address Details */}\r\n                                {userInfo.address && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Address Details</h5>\r\n                                    {Object.entries(userInfo.address).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Identity Details */}\r\n                                {userInfo.ids && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Identity Details</h5>\r\n                                    {Object.entries(userInfo.ids).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{key === 'idType' ? value.toUpperCase() : value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Product Details */}\r\n                                {userInfo.product && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Product Details</h5>\r\n                                    {Object.entries(userInfo.product).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Submission Timestamp */}\r\n                                {userInfo.submissionTimestamp && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Submission Details</h5>\r\n                                    <div className=\"variable-item\">\r\n                                      <span className=\"variable-name\">Submission Timestamp:</span>\r\n                                      <span className=\"variable-value\">{new Date(userInfo.submissionTimestamp).toLocaleString()}</span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          } catch (e) {\r\n                            // If parsing fails, show as regular variable\r\n                            return (\r\n                              <div key={index} className=\"variable-item\">\r\n                                <span className=\"variable-name\">{variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                <span className=\"variable-value\">{variable.value}</span>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        } else {\r\n                          // Regular variables\r\n                          let displayValue = variable.value;\r\n                          \r\n                          // Clean up JSON strings\r\n                          if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\r\n                            displayValue = displayValue.slice(1, -1);\r\n                          }\r\n                          \r\n                          // Parse arrays if they're JSON strings\r\n                          if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\r\n                            try {\r\n                              const steps = JSON.parse(displayValue);\r\n                              displayValue = steps.join(', ');\r\n                            } catch (e) {\r\n                              // Keep original value if parsing fails\r\n                            }\r\n                          }\r\n                          \r\n                          const fieldKey = `${selectedTask.id}_${variable.name}`;\r\n                          const isEditing = editingFields[fieldKey];\r\n                          const editedValue = editedValues[fieldKey];\r\n                          const isSaving = savingField === fieldKey;\r\n                          \r\n                          return (\r\n                            <div key={index} className=\"variable-item editable-variable\">\r\n                              <span className=\"variable-name\">{variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                              \r\n                              <div className=\"variable-edit-container\">\r\n                                {variable.name === 'pep' || variable.name === 'riskCleared' ? (\r\n                                  <select\r\n                                    value={displayValue === 'true' || displayValue === true ? 'true' : 'false'}\r\n                                    onChange={(e) => handleDirectFieldSave(selectedTask.id, variable.name, e.target.value)}\r\n                                    className=\"variable-edit-select\"\r\n                                    disabled={isSaving}\r\n                                  >\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                ) : (\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    value={displayValue || ''}\r\n                                    onChange={(e) => handleFieldChange(selectedTask.id, variable.name, e.target.value)}\r\n                                    onBlur={(e) => handleDirectFieldSave(selectedTask.id, variable.name, e.target.value)}\r\n                                    onKeyPress={(e) => {\r\n                                      if (e.key === 'Enter') {\r\n                                        handleDirectFieldSave(selectedTask.id, variable.name, e.target.value);\r\n                                      }\r\n                                    }}\r\n                                    className=\"variable-edit-input\"\r\n                                    disabled={isSaving}\r\n                                    placeholder={displayValue === 'null' ? 'Not set' : 'Enter value...'}\r\n                                  />\r\n                                )}\r\n                                {isSaving && <span className=\"saving-indicator\">Saving...</span>}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Customer Personal Information - Fallback if no variables loaded */}\r\n                {(!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Customer Personal Information</h3>\r\n                    <div className=\"info-grid\">\r\n                      {(() => {\r\n                        const customerData = getEnhancedCustomerData(selectedTask);\r\n                        return (\r\n                          <>\r\n                            {customerData.fullName && (\r\n                              <div><strong>Full Name:</strong> {customerData.fullName}</div>\r\n                            )}\r\n                            {customerData.dob && (\r\n                              <div><strong>Date of Birth:</strong> {new Date(customerData.dob).toLocaleDateString()}</div>\r\n                            )}\r\n                            {customerData.email && (\r\n                              <div><strong>Email:</strong> {customerData.email}</div>\r\n                            )}\r\n                            {customerData.mobile && (\r\n                              <div><strong>Mobile:</strong> {customerData.mobile}</div>\r\n                            )}\r\n                            {customerData.occupation && (\r\n                              <div><strong>Occupation:</strong> {customerData.occupation}</div>\r\n                            )}\r\n                            {customerData.income_band && (\r\n                              <div><strong>Income Band:</strong> {customerData.income_band}</div>\r\n                            )}\r\n                            <div><strong>PEP Status:</strong> {customerData.pep ? 'Yes' : 'No'}</div>\r\n                            {customerData.submissionTimestamp && (\r\n                              <div><strong>Submission Date:</strong> {new Date(customerData.submissionTimestamp).toLocaleString()}</div>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n                {/* Documents */}\r\n                {selectedTask.documents && selectedTask.documents.length > 0 && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Documents ({selectedTask.documents.length})</h3>\r\n                    <div className=\"documents-list\">\r\n                      {selectedTask.documents.map((doc, index) => (\r\n                        <div key={index} className=\"document-item\">\r\n                          <div className=\"doc-info\">\r\n                            <div className=\"doc-name\">{doc.name}</div>\r\n                            <div className=\"doc-type\">{doc.type}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Status */}\r\n                <div className=\"details-section\">\r\n                  <h3>Task Status</h3>\r\n                  <div className=\"status-info\">\r\n                    <div className=\"status-item\">\r\n                      <strong>Current Status:</strong>\r\n                      <span \r\n                        className=\"status-badge\" \r\n                        style={{ backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus) }}\r\n                      >\r\n                        {(selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Creation Date:</strong> {selectedTask.creationDate}\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Task ID:</strong> {selectedTask.id}\r\n                    </div>\r\n                    {selectedTask.processInstanceKey && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Instance:</strong> {selectedTask.processInstanceKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.taskDefinitionId && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Task Definition:</strong> {selectedTask.taskDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processDefinitionId && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Definition:</strong> {selectedTask.processDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processName && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Name:</strong> {selectedTask.processName}\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"status-item\">\r\n                      <strong>Completed Steps:</strong> {selectedTask.completedSteps}\r\n                    </div> */}\r\n                    {selectedTask.priority && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Priority:</strong> {selectedTask.priority}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.dueDate && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Due Date:</strong> {new Date(selectedTask.dueDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.followUpDate && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Follow Up Date:</strong> {new Date(selectedTask.followUpDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.formKey && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Form Key:</strong> {selectedTask.formKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Candidate Groups:</strong> {selectedTask.candidateGroups.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Candidate Users:</strong> {selectedTask.candidateUsers.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.creationTime && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Creation Time:</strong> {new Date(selectedTask.creationTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.completionTime && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Completion Time:</strong> {new Date(selectedTask.completionTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* Task Actions */}\r\n                <div className=\"task-actions\">\r\n                  <div className=\"action-buttons\">\r\n                    <button \r\n                      className=\"btn btn-approve\"\r\n                      onClick={() => handleTaskAction('approve')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✓ Approve'}\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-reject\"\r\n                      onClick={() => handleTaskAction('reject')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✗ Reject'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-selection empty-state\">\r\n              <h2>Select a Task</h2>\r\n              <p>Choose a task from the list to view its details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assignment Modal */}\r\n      {showAssignModal && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowAssignModal(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h3>Assign Task</h3>\r\n              <button \r\n                className=\"modal-close\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Assign task \"{selectedTask?.taskName}\" to:</p>\r\n              <input\r\n                type=\"text\"\r\n                className=\"assignee-input\"\r\n                placeholder=\"Enter assignee name\"\r\n                value={assigneeName}\r\n                onChange={(e) => setAssigneeName(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleAssignConfirm();\r\n                  }\r\n                }}\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={handleAssignConfirm}\r\n                disabled={!assigneeName.trim() || loading}\r\n              >\r\n                {loading ? 'Assigning...' : 'Assign'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}