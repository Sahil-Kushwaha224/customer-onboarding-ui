{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\Downloads\\\\customer\\\\customer-onboarding-ui\\\\src\\\\components\\\\OpenTask\\\\OpenTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OpenTask.css';\nimport tasklistApi from '../../services/tasklistApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OpenTask = () => {\n  _s();\n  const [openTasks, setOpenTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [taskVariables, setTaskVariables] = useState({});\n\n  // Load open tasks from tasklist backend\n  useEffect(() => {\n    const loadOpenTasks = async () => {\n      setLoading(true);\n      try {\n        console.log('Loading tasks from tasklist backend...');\n\n        // Get open tasks from tasklist API\n        const tasks = await tasklistApi.getOpenTasks();\n        console.log('Tasks from tasklist API:', tasks);\n\n        // Transform tasks to match the expected format\n        const openTasksData = tasks.map(task => {\n          var _variables$customerNa, _variables$fullName, _variables$fullName2, _variables$customerNa2, _variables$dob, _variables$mobile, _variables$email, _variables$occupation, _variables$income_ban, _variables$pep, _variables$address, _variables$product, _variables$ids, _variables$income_ban2, _variables$pep2;\n          // Get task variables for customer data\n          const variables = task.variables || {};\n          return {\n            id: task.id,\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\n            creationDate: task.creationTime ? new Date(task.creationTime).toLocaleDateString() : new Date().toLocaleDateString(),\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\n            assignedTo: task.assignee || null,\n            isAssigned: !!task.assignee,\n            processInstanceKey: task.processInstanceKey,\n            taskDefinitionId: task.taskDefinitionId,\n            state: task.state,\n            priority: task.priority,\n            dueDate: task.dueDate,\n            followUpDate: task.followUpDate,\n            // Customer data from task variables\n            customerName: ((_variables$customerNa = variables.customerName) === null || _variables$customerNa === void 0 ? void 0 : _variables$customerNa.value) || ((_variables$fullName = variables.fullName) === null || _variables$fullName === void 0 ? void 0 : _variables$fullName.value) || 'Unknown Customer',\n            customerData: {\n              fullName: ((_variables$fullName2 = variables.fullName) === null || _variables$fullName2 === void 0 ? void 0 : _variables$fullName2.value) || ((_variables$customerNa2 = variables.customerName) === null || _variables$customerNa2 === void 0 ? void 0 : _variables$customerNa2.value) || '',\n              dob: ((_variables$dob = variables.dob) === null || _variables$dob === void 0 ? void 0 : _variables$dob.value) || '',\n              mobile: ((_variables$mobile = variables.mobile) === null || _variables$mobile === void 0 ? void 0 : _variables$mobile.value) || '',\n              email: ((_variables$email = variables.email) === null || _variables$email === void 0 ? void 0 : _variables$email.value) || '',\n              occupation: ((_variables$occupation = variables.occupation) === null || _variables$occupation === void 0 ? void 0 : _variables$occupation.value) || '',\n              income_band: ((_variables$income_ban = variables.income_band) === null || _variables$income_ban === void 0 ? void 0 : _variables$income_ban.value) || '',\n              pep: ((_variables$pep = variables.pep) === null || _variables$pep === void 0 ? void 0 : _variables$pep.value) || false,\n              address: ((_variables$address = variables.address) === null || _variables$address === void 0 ? void 0 : _variables$address.value) || {},\n              product: ((_variables$product = variables.product) === null || _variables$product === void 0 ? void 0 : _variables$product.value) || {},\n              ids: ((_variables$ids = variables.ids) === null || _variables$ids === void 0 ? void 0 : _variables$ids.value) || {}\n            },\n            // Additional task metadata\n            completedSteps: calculateCompletedStepsFromVariables(variables),\n            submissionDate: task.creationTime ? new Date(task.creationTime).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n            incomeBand: ((_variables$income_ban2 = variables.income_band) === null || _variables$income_ban2 === void 0 ? void 0 : _variables$income_ban2.value) || 'Not specified',\n            pep: ((_variables$pep2 = variables.pep) === null || _variables$pep2 === void 0 ? void 0 : _variables$pep2.value) || false\n          };\n        });\n        setOpenTasks(openTasksData);\n        console.log('Processed open tasks:', openTasksData);\n      } catch (error) {\n        console.error('Error loading open tasks from tasklist:', error);\n        addAlert('Error loading tasks from tasklist backend', 'error');\n        setOpenTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOpenTasks();\n\n    // Set up polling to refresh tasks periodically\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get task status based on workflow and application status\n  const getTaskStatus = (workflowStatus, status) => {\n    if (workflowStatus === 'manual_review') return 'Manual Review';\n    if (status === 'pending_review') return 'Pending Review';\n    if (workflowStatus === 'in_progress') return 'In Progress';\n    if (status === 'submitted') return 'Submitted';\n    return 'Unknown';\n  };\n\n  // Calculate completed steps based on available data\n  const calculateCompletedSteps = app => {\n    var _app$customer, _app$customer2, _app$customer3, _app$address, _app$address2, _app$address3, _app$product;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_app$customer = app.customer) !== null && _app$customer !== void 0 && _app$customer.fullName && (_app$customer2 = app.customer) !== null && _app$customer2 !== void 0 && _app$customer2.email && (_app$customer3 = app.customer) !== null && _app$customer3 !== void 0 && _app$customer3.mobile) {\n      steps++;\n    }\n\n    // Check if address is complete\n    if ((_app$address = app.address) !== null && _app$address !== void 0 && _app$address.line1 && (_app$address2 = app.address) !== null && _app$address2 !== void 0 && _app$address2.city && (_app$address3 = app.address) !== null && _app$address3 !== void 0 && _app$address3.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    if (app.documents && app.documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    if ((_app$product = app.product) !== null && _app$product !== void 0 && _app$product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n\n  // Calculate completed steps from task variables\n  const calculateCompletedStepsFromVariables = variables => {\n    var _variables$fullName3, _variables$email2, _variables$mobile2, _variables$address2, _variables$documents, _variables$product2;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_variables$fullName3 = variables.fullName) !== null && _variables$fullName3 !== void 0 && _variables$fullName3.value && (_variables$email2 = variables.email) !== null && _variables$email2 !== void 0 && _variables$email2.value && (_variables$mobile2 = variables.mobile) !== null && _variables$mobile2 !== void 0 && _variables$mobile2.value) {\n      steps++;\n    }\n\n    // Check if address is complete\n    const address = ((_variables$address2 = variables.address) === null || _variables$address2 === void 0 ? void 0 : _variables$address2.value) || {};\n    if (address.line1 && address.city && address.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    const documents = ((_variables$documents = variables.documents) === null || _variables$documents === void 0 ? void 0 : _variables$documents.value) || [];\n    if (documents && documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    const product = ((_variables$product2 = variables.product) === null || _variables$product2 === void 0 ? void 0 : _variables$product2.value) || {};\n    if (product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n  const addAlert = (message, type = 'info') => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n  const handleTaskAction = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log(`${action}ing task:`, selectedTask.id);\n\n      // Prepare variables to pass when completing the task\n      const variables = [{\n        name: 'reviewDecision',\n        value: action === 'approve' ? 'approved' : 'rejected'\n      }, {\n        name: 'reviewDate',\n        value: new Date().toISOString()\n      }, {\n        name: 'reviewer',\n        value: 'Admin User'\n      }];\n\n      // Complete the task with the decision\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\n      console.log('Task completion result:', completedTask);\n\n      // Update local state - remove the task from open tasks since it's now completed\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\n      addAlert(`Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, 'success');\n\n      // Clear selection since the task is no longer in the list\n      setSelectedTask(null);\n    } catch (error) {\n      console.error('Error processing task action:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTaskAssignment = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const currentUser = 'Admin User'; // In a real app, this would come from auth context\n      let updatedTask;\n      if (action === 'assign') {\n        console.log('Assigning task:', selectedTask.id, 'to:', currentUser);\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, currentUser);\n      } else {\n        console.log('Unassigning task:', selectedTask.id);\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\n      }\n      console.log('Task assignment result:', updatedTask);\n\n      // Update local state\n      const newAssignedTo = action === 'assign' ? currentUser : null;\n      setOpenTasks(prev => prev.map(task => task.id === selectedTask.id ? {\n        ...task,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      } : task));\n\n      // Update selected task\n      setSelectedTask(prev => ({\n        ...prev,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      }));\n      addAlert(`Task ${action === 'assign' ? 'assigned' : 'unassigned'} successfully`, 'success');\n    } catch (error) {\n      console.error('Error processing task assignment:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    // Using CSS variables for consistent theming\n    const root = document.documentElement;\n    const getVar = varName => getComputedStyle(root).getPropertyValue(varName).trim();\n    switch (status) {\n      case 'submitted':\n        return getVar('--color-info');\n      case 'in_progress':\n        return getVar('--color-warning');\n      case 'pending_review':\n        return getVar('--color-warning-alt');\n      case 'manual_review':\n        return getVar('--color-danger');\n      default:\n        return getVar('--color-secondary');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All open tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.type}`,\n      children: alert.message\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-panel panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header flex-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All open tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-icon\",\n            children: \"\\u21C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please wait while we fetch your open tasks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this) : openTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-tasks-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No tasks found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no tasks matching your filter criteria.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this) : openTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-card ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'selected' : ''}`,\n            onClick: () => setSelectedTask(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: task.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Creation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.creationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Task Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.taskStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-panel panel\",\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details-header flex-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Task Details: \", selectedTask.customerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-assignment-controls\",\n              children: selectedTask.isAssigned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"assigned-to\",\n                  children: [\"Assigned to: \", selectedTask.assignedTo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary unassign-btn btn-base\",\n                  onClick: () => handleTaskAssignment('unassign'),\n                  disabled: loading,\n                  children: loading ? 'Unassigning...' : 'Unassign'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary assign-btn btn-base\",\n                onClick: () => handleTaskAssignment('assign'),\n                disabled: loading,\n                children: loading ? 'Assigning...' : 'Assign to Me'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-sections\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Customer Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: [selectedTask.customerData.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Full Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.fullName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this), selectedTask.customerData.dob && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date of Birth:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.dob]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this), selectedTask.customerData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this), selectedTask.customerData.mobile && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Mobile:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.mobile]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this), selectedTask.customerData.occupation && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Occupation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.occupation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), selectedTask.customerData.income_band && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Income Band:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 28\n                  }, this), \" \", selectedTask.customerData.income_band]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"PEP Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 26\n                  }, this), \" \", selectedTask.customerData.pep ? 'Yes' : 'No']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), (selectedTask.customerData.address.line1 || selectedTask.customerData.address.city || selectedTask.customerData.address.state) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"address-info\",\n                children: [selectedTask.customerData.address.line1 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: selectedTask.customerData.address.line1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 25\n                }, this), selectedTask.customerData.address.line2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: selectedTask.customerData.address.line2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 25\n                }, this), (selectedTask.customerData.address.city || selectedTask.customerData.address.state) && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [selectedTask.customerData.address.city, selectedTask.customerData.address.city && selectedTask.customerData.address.state && ', ', selectedTask.customerData.address.state]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 25\n                }, this), (selectedTask.customerData.address.pin || selectedTask.customerData.address.country) && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [selectedTask.customerData.address.pin, selectedTask.customerData.address.pin && selectedTask.customerData.address.country && ', ', selectedTask.customerData.address.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this), (selectedTask.customerData.product.desired_account || selectedTask.customerData.product.expected_mab_range) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Product Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: [selectedTask.customerData.product.desired_account && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Account Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 30\n                  }, this), \" \", selectedTask.customerData.product.desired_account]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 25\n                }, this), selectedTask.customerData.product.expected_mab_range && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected MAB:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 30\n                  }, this), \" \", selectedTask.customerData.product.expected_mab_range]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), (selectedTask.customerData.ids.idType || selectedTask.customerData.ids.idNumber) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Identity Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: [selectedTask.customerData.ids.idType && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID Type:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 30\n                  }, this), \" \", selectedTask.customerData.ids.idType.toUpperCase()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this), selectedTask.customerData.ids.idNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"ID Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 30\n                  }, this), \" \", selectedTask.customerData.ids.idNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this), selectedTask.documents && selectedTask.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Documents (\", selectedTask.documents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"documents-list\",\n                children: selectedTask.documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"document-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doc-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-name\",\n                      children: doc.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-type\",\n                      children: doc.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Current Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: getStatusColor(selectedTask.status || selectedTask.workflowStatus)\n                    },\n                    children: (selectedTask.status || selectedTask.workflowStatus || 'Unknown').replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Submission Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.submissionDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completed Steps:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.completedSteps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-approve\",\n                  onClick: () => handleTaskAction('approve'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✓ Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-reject\",\n                  onClick: () => handleTaskAction('reject'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✗ Reject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a task from the list to view its details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenTask, \"DXbCjhzrHSAKmJ3idlfpnq3RUx8=\");\n_c = OpenTask;\nexport default OpenTask;\nvar _c;\n$RefreshReg$(_c, \"OpenTask\");","map":{"version":3,"names":["React","useState","useEffect","tasklistApi","jsxDEV","_jsxDEV","Fragment","_Fragment","OpenTask","_s","openTasks","setOpenTasks","selectedTask","setSelectedTask","loading","setLoading","alerts","setAlerts","taskVariables","setTaskVariables","loadOpenTasks","console","log","tasks","getOpenTasks","openTasksData","map","task","_variables$customerNa","_variables$fullName","_variables$fullName2","_variables$customerNa2","_variables$dob","_variables$mobile","_variables$email","_variables$occupation","_variables$income_ban","_variables$pep","_variables$address","_variables$product","_variables$ids","_variables$income_ban2","_variables$pep2","variables","id","taskName","name","taskDefinitionId","creationDate","creationTime","Date","toLocaleDateString","taskStatus","assignee","assignedTo","isAssigned","processInstanceKey","state","priority","dueDate","followUpDate","customerName","value","fullName","customerData","dob","mobile","email","occupation","income_band","pep","address","product","ids","completedSteps","calculateCompletedStepsFromVariables","submissionDate","toISOString","split","incomeBand","error","addAlert","interval","setInterval","clearInterval","getTaskStatus","workflowStatus","status","calculateCompletedSteps","app","_app$customer","_app$customer2","_app$customer3","_app$address","_app$address2","_app$address3","_app$product","steps","customer","line1","city","documents","length","desired_account","_variables$fullName3","_variables$email2","_variables$mobile2","_variables$address2","_variables$documents","_variables$product2","message","type","alert","now","prev","setTimeout","filter","a","handleTaskAction","action","completedTask","completeTask","handleTaskAssignment","currentUser","updatedTask","assignTask","unassignTask","newAssignedTo","getStatusColor","root","document","documentElement","getVar","varName","getComputedStyle","getPropertyValue","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","line2","pin","country","expected_mab_range","idType","idNumber","toUpperCase","doc","index","style","backgroundColor","replace","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/Downloads/customer/customer-onboarding-ui/src/components/OpenTask/OpenTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './OpenTask.css';\r\nimport tasklistApi from '../../services/tasklistApi';\r\n\r\nconst OpenTask = () => {\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [taskVariables, setTaskVariables] = useState({});\r\n\r\n  // Load open tasks from tasklist backend\r\n  useEffect(() => {\r\n    const loadOpenTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log('Loading tasks from tasklist backend...');\r\n        \r\n        // Get open tasks from tasklist API\r\n        const tasks = await tasklistApi.getOpenTasks();\r\n        console.log('Tasks from tasklist API:', tasks);\r\n        \r\n        // Transform tasks to match the expected format\r\n        const openTasksData = tasks.map(task => {\r\n          // Get task variables for customer data\r\n          const variables = task.variables || {};\r\n          \r\n          return {\r\n            id: task.id,\r\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\r\n            creationDate: task.creationTime ? \r\n              new Date(task.creationTime).toLocaleDateString() : \r\n              new Date().toLocaleDateString(),\r\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\r\n            assignedTo: task.assignee || null,\r\n            isAssigned: !!task.assignee,\r\n            processInstanceKey: task.processInstanceKey,\r\n            taskDefinitionId: task.taskDefinitionId,\r\n            state: task.state,\r\n            priority: task.priority,\r\n            dueDate: task.dueDate,\r\n            followUpDate: task.followUpDate,\r\n            // Customer data from task variables\r\n            customerName: variables.customerName?.value || \r\n                         variables.fullName?.value || \r\n                         'Unknown Customer',\r\n            customerData: {\r\n              fullName: variables.fullName?.value || variables.customerName?.value || '',\r\n              dob: variables.dob?.value || '',\r\n              mobile: variables.mobile?.value || '',\r\n              email: variables.email?.value || '',\r\n              occupation: variables.occupation?.value || '',\r\n              income_band: variables.income_band?.value || '',\r\n              pep: variables.pep?.value || false,\r\n              address: variables.address?.value || {},\r\n              product: variables.product?.value || {},\r\n              ids: variables.ids?.value || {}\r\n            },\r\n            // Additional task metadata\r\n            completedSteps: calculateCompletedStepsFromVariables(variables),\r\n            submissionDate: task.creationTime ? \r\n              new Date(task.creationTime).toISOString().split('T')[0] : \r\n              new Date().toISOString().split('T')[0],\r\n            incomeBand: variables.income_band?.value || 'Not specified',\r\n            pep: variables.pep?.value || false\r\n          };\r\n        });\r\n        \r\n        setOpenTasks(openTasksData);\r\n        console.log('Processed open tasks:', openTasksData);\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading open tasks from tasklist:', error);\r\n        addAlert('Error loading tasks from tasklist backend', 'error');\r\n        setOpenTasks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOpenTasks();\r\n    \r\n    // Set up polling to refresh tasks periodically\r\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get task status based on workflow and application status\r\n  const getTaskStatus = (workflowStatus, status) => {\r\n    if (workflowStatus === 'manual_review') return 'Manual Review';\r\n    if (status === 'pending_review') return 'Pending Review';\r\n    if (workflowStatus === 'in_progress') return 'In Progress';\r\n    if (status === 'submitted') return 'Submitted';\r\n    return 'Unknown';\r\n  };\r\n\r\n  // Calculate completed steps based on available data\r\n  const calculateCompletedSteps = (app) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (app.customer?.fullName && app.customer?.email && app.customer?.mobile) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    if (app.address?.line1 && app.address?.city && app.address?.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    if (app.documents && app.documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    if (app.product?.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  // Calculate completed steps from task variables\r\n  const calculateCompletedStepsFromVariables = (variables) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (variables.fullName?.value && variables.email?.value && variables.mobile?.value) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    const address = variables.address?.value || {};\r\n    if (address.line1 && address.city && address.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    const documents = variables.documents?.value || [];\r\n    if (documents && documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    const product = variables.product?.value || {};\r\n    if (product.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  const addAlert = (message, type = 'info') => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts(prev => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  const handleTaskAction = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log(`${action}ing task:`, selectedTask.id);\r\n\r\n      // Prepare variables to pass when completing the task\r\n      const variables = [\r\n        {\r\n          name: 'reviewDecision',\r\n          value: action === 'approve' ? 'approved' : 'rejected'\r\n        },\r\n        {\r\n          name: 'reviewDate',\r\n          value: new Date().toISOString()\r\n        },\r\n        {\r\n          name: 'reviewer',\r\n          value: 'Admin User'\r\n        }\r\n      ];\r\n\r\n      // Complete the task with the decision\r\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\r\n      console.log('Task completion result:', completedTask);\r\n\r\n      // Update local state - remove the task from open tasks since it's now completed\r\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Clear selection since the task is no longer in the list\r\n      setSelectedTask(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task action:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTaskAssignment = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const currentUser = 'Admin User'; // In a real app, this would come from auth context\r\n      let updatedTask;\r\n\r\n      if (action === 'assign') {\r\n        console.log('Assigning task:', selectedTask.id, 'to:', currentUser);\r\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, currentUser);\r\n      } else {\r\n        console.log('Unassigning task:', selectedTask.id);\r\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\r\n      }\r\n\r\n      console.log('Task assignment result:', updatedTask);\r\n\r\n      // Update local state\r\n      const newAssignedTo = action === 'assign' ? currentUser : null;\r\n      setOpenTasks(prev => prev.map(task => \r\n        task.id === selectedTask.id \r\n          ? { \r\n              ...task, \r\n              assignedTo: newAssignedTo,\r\n              isAssigned: !!newAssignedTo,\r\n              taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n            }\r\n          : task\r\n      ));\r\n\r\n      // Update selected task\r\n      setSelectedTask(prev => ({\r\n        ...prev,\r\n        assignedTo: newAssignedTo,\r\n        isAssigned: !!newAssignedTo,\r\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n      }));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'assign' ? 'assigned' : 'unassigned'} successfully`, \r\n        'success'\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task assignment:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    // Using CSS variables for consistent theming\r\n    const root = document.documentElement;\r\n    const getVar = (varName) => getComputedStyle(root).getPropertyValue(varName).trim();\r\n    \r\n    switch (status) {\r\n      case 'submitted': return getVar('--color-info');\r\n      case 'in_progress': return getVar('--color-warning');\r\n      case 'pending_review': return getVar('--color-warning-alt');\r\n      case 'manual_review': return getVar('--color-danger');\r\n      default: return getVar('--color-secondary');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"open-task-container\">\r\n      <h1 className=\"page-title\">All open tasks</h1>\r\n\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"task-layout\">\r\n        {/* Tasks List */}\r\n        <div className=\"tasks-panel panel\">\r\n          <div className=\"tasks-header flex-header\">\r\n            <h2>All open tasks</h2>\r\n            <div className=\"sort-icon\">⇅</div>\r\n          </div>\r\n          \r\n          <div className=\"tasks-list\">\r\n            {loading ? (\r\n              <div className=\"loading-tasks empty-state\">\r\n                <div className=\"loading-spinner\">⏳</div>\r\n                <h3>Loading tasks...</h3>\r\n                <p>Please wait while we fetch your open tasks.</p>\r\n              </div>\r\n            ) : openTasks.length === 0 ? (\r\n              <div className=\"no-tasks empty-state\">\r\n                <div className=\"no-tasks-icon\">🔍</div>\r\n                <h3>No tasks found</h3>\r\n                <p>There are no tasks matching your filter criteria.</p>\r\n              </div>\r\n            ) : (\r\n              openTasks.map(task => (\r\n                <div \r\n                  key={task.id} \r\n                  className={`task-card ${selectedTask?.id === task.id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedTask(task)}\r\n                >\r\n                  <div className=\"task-header\">\r\n                    <h3>{task.taskName}</h3>\r\n                  </div>\r\n                  <div className=\"task-details\">\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Creation Date:</span>\r\n                      <span className=\"detail-value\">{task.creationDate}</span>\r\n                    </div>\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Task Status:</span>\r\n                      <span className=\"detail-value\">{task.taskStatus}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Details Panel */}\r\n        <div className=\"task-details-panel panel\">\r\n          {selectedTask ? (\r\n            <>\r\n              <div className=\"task-details-header flex-header\">\r\n                <h2>Task Details: {selectedTask.customerName}</h2>\r\n                <div className=\"task-assignment-controls\">\r\n                  {selectedTask.isAssigned ? (\r\n                    <>\r\n                      <span className=\"assigned-to\">Assigned to: {selectedTask.assignedTo}</span>\r\n                      <button \r\n                        className=\"btn btn-secondary unassign-btn btn-base\"\r\n                        onClick={() => handleTaskAssignment('unassign')}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Unassigning...' : 'Unassign'}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary assign-btn btn-base\"\r\n                      onClick={() => handleTaskAssignment('assign')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Assigning...' : 'Assign to Me'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"details-sections\">\r\n                {/* Customer Information */}\r\n                <div className=\"details-section\">\r\n                  <h3>Customer Information</h3>\r\n                  <div className=\"info-grid\">\r\n                    {selectedTask.customerData.fullName && (\r\n                      <div><strong>Full Name:</strong> {selectedTask.customerData.fullName}</div>\r\n                    )}\r\n                    {selectedTask.customerData.dob && (\r\n                      <div><strong>Date of Birth:</strong> {selectedTask.customerData.dob}</div>\r\n                    )}\r\n                    {selectedTask.customerData.email && (\r\n                      <div><strong>Email:</strong> {selectedTask.customerData.email}</div>\r\n                    )}\r\n                    {selectedTask.customerData.mobile && (\r\n                      <div><strong>Mobile:</strong> {selectedTask.customerData.mobile}</div>\r\n                    )}\r\n                    {selectedTask.customerData.occupation && (\r\n                      <div><strong>Occupation:</strong> {selectedTask.customerData.occupation}</div>\r\n                    )}\r\n                    {selectedTask.customerData.income_band && (\r\n                      <div><strong>Income Band:</strong> {selectedTask.customerData.income_band}</div>\r\n                    )}\r\n                    <div><strong>PEP Status:</strong> {selectedTask.customerData.pep ? 'Yes' : 'No'}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Address Information */}\r\n                {(selectedTask.customerData.address.line1 || \r\n                  selectedTask.customerData.address.city || \r\n                  selectedTask.customerData.address.state) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Address</h3>\r\n                    <div className=\"address-info\">\r\n                      {selectedTask.customerData.address.line1 && (\r\n                        <p>{selectedTask.customerData.address.line1}</p>\r\n                      )}\r\n                      {selectedTask.customerData.address.line2 && (\r\n                        <p>{selectedTask.customerData.address.line2}</p>\r\n                      )}\r\n                      {(selectedTask.customerData.address.city || selectedTask.customerData.address.state) && (\r\n                        <p>\r\n                          {selectedTask.customerData.address.city}\r\n                          {selectedTask.customerData.address.city && selectedTask.customerData.address.state && ', '}\r\n                          {selectedTask.customerData.address.state}\r\n                        </p>\r\n                      )}\r\n                      {(selectedTask.customerData.address.pin || selectedTask.customerData.address.country) && (\r\n                        <p>\r\n                          {selectedTask.customerData.address.pin}\r\n                          {selectedTask.customerData.address.pin && selectedTask.customerData.address.country && ', '}\r\n                          {selectedTask.customerData.address.country}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Product Information */}\r\n                {(selectedTask.customerData.product.desired_account || \r\n                  selectedTask.customerData.product.expected_mab_range) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Product Details</h3>\r\n                    <div className=\"info-grid\">\r\n                      {selectedTask.customerData.product.desired_account && (\r\n                        <div><strong>Account Type:</strong> {selectedTask.customerData.product.desired_account}</div>\r\n                      )}\r\n                      {selectedTask.customerData.product.expected_mab_range && (\r\n                        <div><strong>Expected MAB:</strong> {selectedTask.customerData.product.expected_mab_range}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* ID Information */}\r\n                {(selectedTask.customerData.ids.idType || selectedTask.customerData.ids.idNumber) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Identity Details</h3>\r\n                    <div className=\"info-grid\">\r\n                      {selectedTask.customerData.ids.idType && (\r\n                        <div><strong>ID Type:</strong> {selectedTask.customerData.ids.idType.toUpperCase()}</div>\r\n                      )}\r\n                      {selectedTask.customerData.ids.idNumber && (\r\n                        <div><strong>ID Number:</strong> {selectedTask.customerData.ids.idNumber}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Documents */}\r\n                {selectedTask.documents && selectedTask.documents.length > 0 && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Documents ({selectedTask.documents.length})</h3>\r\n                    <div className=\"documents-list\">\r\n                      {selectedTask.documents.map((doc, index) => (\r\n                        <div key={index} className=\"document-item\">\r\n                          <div className=\"doc-info\">\r\n                            <div className=\"doc-name\">{doc.name}</div>\r\n                            <div className=\"doc-type\">{doc.type}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Status */}\r\n                <div className=\"details-section\">\r\n                  <h3>Task Status</h3>\r\n                  <div className=\"status-info\">\r\n                    <div className=\"status-item\">\r\n                      <strong>Current Status:</strong>\r\n                      <span \r\n                        className=\"status-badge\" \r\n                        style={{ backgroundColor: getStatusColor(selectedTask.status || selectedTask.workflowStatus) }}\r\n                      >\r\n                        {(selectedTask.status || selectedTask.workflowStatus || 'Unknown').replace('_', ' ').toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Submission Date:</strong> {selectedTask.submissionDate}\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Process ID:</strong> {selectedTask.id}\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Completed Steps:</strong> {selectedTask.completedSteps}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Task Actions */}\r\n                <div className=\"task-actions\">\r\n                  <div className=\"action-buttons\">\r\n                    <button \r\n                      className=\"btn btn-approve\"\r\n                      onClick={() => handleTaskAction('approve')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✓ Approve'}\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-reject\"\r\n                      onClick={() => handleTaskAction('reject')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✗ Reject'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-selection empty-state\">\r\n              <h2>Select a Task</h2>\r\n              <p>Choose a task from the list to view its details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}