{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\Downloads\\\\customer\\\\customer-onboarding-ui\\\\src\\\\components\\\\OpenTask\\\\OpenTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OpenTask.css';\nimport tasklistApi from '../../services/tasklistApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OpenTask = () => {\n  _s();\n  const [openTasks, setOpenTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [taskVariables, setTaskVariables] = useState({});\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [assigneeName, setAssigneeName] = useState('');\n\n  // Load open tasks from tasklist backend\n  useEffect(() => {\n    const loadOpenTasks = async () => {\n      setLoading(true);\n      try {\n        console.log('Loading tasks from tasklist backend...');\n\n        // Get open tasks from tasklist API\n        const tasks = await tasklistApi.getOpenTasks();\n        console.log('Tasks from tasklist API:', tasks);\n\n        // Transform tasks to match the expected format\n        const openTasksData = tasks.map(task => {\n          var _variables$customerNa, _variables$fullName, _variables$fullName2, _variables$customerNa2, _variables$dob, _variables$mobile, _variables$email, _variables$occupation, _variables$income_ban, _variables$pep, _variables$address, _variables$product, _variables$ids, _variables$income_ban2, _variables$pep2;\n          // Get task variables for customer data\n          const variables = task.variables || {};\n          return {\n            id: task.id,\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\n            creationDate: task.creationTime ? new Date(task.creationTime).toLocaleDateString() : new Date().toLocaleDateString(),\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\n            assignedTo: task.assignee || null,\n            isAssigned: !!task.assignee,\n            processInstanceKey: task.processInstanceKey,\n            taskDefinitionId: task.taskDefinitionId,\n            state: task.state,\n            priority: task.priority,\n            dueDate: task.dueDate,\n            followUpDate: task.followUpDate,\n            // Customer data from task variables\n            customerName: ((_variables$customerNa = variables.customerName) === null || _variables$customerNa === void 0 ? void 0 : _variables$customerNa.value) || ((_variables$fullName = variables.fullName) === null || _variables$fullName === void 0 ? void 0 : _variables$fullName.value) || 'Unknown Customer',\n            customerData: {\n              fullName: ((_variables$fullName2 = variables.fullName) === null || _variables$fullName2 === void 0 ? void 0 : _variables$fullName2.value) || ((_variables$customerNa2 = variables.customerName) === null || _variables$customerNa2 === void 0 ? void 0 : _variables$customerNa2.value) || '',\n              dob: ((_variables$dob = variables.dob) === null || _variables$dob === void 0 ? void 0 : _variables$dob.value) || '',\n              mobile: ((_variables$mobile = variables.mobile) === null || _variables$mobile === void 0 ? void 0 : _variables$mobile.value) || '',\n              email: ((_variables$email = variables.email) === null || _variables$email === void 0 ? void 0 : _variables$email.value) || '',\n              occupation: ((_variables$occupation = variables.occupation) === null || _variables$occupation === void 0 ? void 0 : _variables$occupation.value) || '',\n              income_band: ((_variables$income_ban = variables.income_band) === null || _variables$income_ban === void 0 ? void 0 : _variables$income_ban.value) || '',\n              pep: ((_variables$pep = variables.pep) === null || _variables$pep === void 0 ? void 0 : _variables$pep.value) || false,\n              address: ((_variables$address = variables.address) === null || _variables$address === void 0 ? void 0 : _variables$address.value) || {},\n              product: ((_variables$product = variables.product) === null || _variables$product === void 0 ? void 0 : _variables$product.value) || {},\n              ids: ((_variables$ids = variables.ids) === null || _variables$ids === void 0 ? void 0 : _variables$ids.value) || {}\n            },\n            // Additional task metadata\n            completedSteps: calculateCompletedStepsFromVariables(variables),\n            submissionDate: task.creationTime ? new Date(task.creationTime).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n            incomeBand: ((_variables$income_ban2 = variables.income_band) === null || _variables$income_ban2 === void 0 ? void 0 : _variables$income_ban2.value) || 'Not specified',\n            pep: ((_variables$pep2 = variables.pep) === null || _variables$pep2 === void 0 ? void 0 : _variables$pep2.value) || false\n          };\n        });\n        setOpenTasks(openTasksData);\n        console.log('Processed open tasks:', openTasksData);\n      } catch (error) {\n        console.error('Error loading open tasks from tasklist:', error);\n        addAlert('Error loading tasks from tasklist backend', 'error');\n        setOpenTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOpenTasks();\n\n    // Set up polling to refresh tasks periodically\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get task status based on workflow and application status\n  const getTaskStatus = (workflowStatus, status) => {\n    if (workflowStatus === 'manual_review') return 'Manual Review';\n    if (status === 'pending_review') return 'Pending Review';\n    if (workflowStatus === 'in_progress') return 'In Progress';\n    if (status === 'submitted') return 'Submitted';\n    return 'Unknown';\n  };\n\n  // Calculate completed steps based on available data\n  const calculateCompletedSteps = app => {\n    var _app$customer, _app$customer2, _app$customer3, _app$address, _app$address2, _app$address3, _app$product;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_app$customer = app.customer) !== null && _app$customer !== void 0 && _app$customer.fullName && (_app$customer2 = app.customer) !== null && _app$customer2 !== void 0 && _app$customer2.email && (_app$customer3 = app.customer) !== null && _app$customer3 !== void 0 && _app$customer3.mobile) {\n      steps++;\n    }\n\n    // Check if address is complete\n    if ((_app$address = app.address) !== null && _app$address !== void 0 && _app$address.line1 && (_app$address2 = app.address) !== null && _app$address2 !== void 0 && _app$address2.city && (_app$address3 = app.address) !== null && _app$address3 !== void 0 && _app$address3.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    if (app.documents && app.documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    if ((_app$product = app.product) !== null && _app$product !== void 0 && _app$product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n\n  // Calculate completed steps from task variables\n  const calculateCompletedStepsFromVariables = variables => {\n    var _variables$fullName3, _variables$email2, _variables$mobile2, _variables$address2, _variables$documents, _variables$product2;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_variables$fullName3 = variables.fullName) !== null && _variables$fullName3 !== void 0 && _variables$fullName3.value && (_variables$email2 = variables.email) !== null && _variables$email2 !== void 0 && _variables$email2.value && (_variables$mobile2 = variables.mobile) !== null && _variables$mobile2 !== void 0 && _variables$mobile2.value) {\n      steps++;\n    }\n\n    // Check if address is complete\n    const address = ((_variables$address2 = variables.address) === null || _variables$address2 === void 0 ? void 0 : _variables$address2.value) || {};\n    if (address.line1 && address.city && address.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    const documents = ((_variables$documents = variables.documents) === null || _variables$documents === void 0 ? void 0 : _variables$documents.value) || [];\n    if (documents && documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    const product = ((_variables$product2 = variables.product) === null || _variables$product2 === void 0 ? void 0 : _variables$product2.value) || {};\n    if (product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n  const addAlert = (message, type = 'info') => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n\n  // Load task variables when a task is selected\n  const loadTaskVariables = async taskId => {\n    try {\n      console.log('Loading variables for task:', taskId);\n      const variables = await tasklistApi.searchTaskVariables(taskId);\n      console.log('Task variables:', variables);\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: variables\n      }));\n    } catch (error) {\n      console.error('Error loading task variables:', error);\n      // Don't show error alert for variables as it's not critical\n    }\n  };\n\n  // Handle task selection and load its variables\n  const handleTaskSelection = task => {\n    setSelectedTask(task);\n    if (task) {\n      // Always load fresh variables from backend when task is selected\n      console.log('Task selected, loading variables from backend port 5174...');\n      loadTaskVariables(task.id);\n    }\n  };\n\n  // Get enhanced customer data combining task data and loaded variables\n  const getEnhancedCustomerData = task => {\n    var _variables$fullName4, _variables$customerNa3, _variables$dob2, _variables$email3, _variables$mobile3, _variables$occupation2, _variables$income_ban3, _variables$pep3, _variables$address3, _variables$product3, _variables$ids2;\n    const variables = taskVariables[task.id] || {};\n    return {\n      fullName: ((_variables$fullName4 = variables.fullName) === null || _variables$fullName4 === void 0 ? void 0 : _variables$fullName4.value) || ((_variables$customerNa3 = variables.customerName) === null || _variables$customerNa3 === void 0 ? void 0 : _variables$customerNa3.value) || task.customerData.fullName || '',\n      dob: ((_variables$dob2 = variables.dob) === null || _variables$dob2 === void 0 ? void 0 : _variables$dob2.value) || task.customerData.dob || '',\n      email: ((_variables$email3 = variables.email) === null || _variables$email3 === void 0 ? void 0 : _variables$email3.value) || task.customerData.email || '',\n      mobile: ((_variables$mobile3 = variables.mobile) === null || _variables$mobile3 === void 0 ? void 0 : _variables$mobile3.value) || task.customerData.mobile || '',\n      occupation: ((_variables$occupation2 = variables.occupation) === null || _variables$occupation2 === void 0 ? void 0 : _variables$occupation2.value) || task.customerData.occupation || '',\n      income_band: ((_variables$income_ban3 = variables.income_band) === null || _variables$income_ban3 === void 0 ? void 0 : _variables$income_ban3.value) || task.customerData.income_band || '',\n      pep: ((_variables$pep3 = variables.pep) === null || _variables$pep3 === void 0 ? void 0 : _variables$pep3.value) || task.customerData.pep || false,\n      address: ((_variables$address3 = variables.address) === null || _variables$address3 === void 0 ? void 0 : _variables$address3.value) || task.customerData.address || {},\n      product: ((_variables$product3 = variables.product) === null || _variables$product3 === void 0 ? void 0 : _variables$product3.value) || task.customerData.product || {},\n      ids: ((_variables$ids2 = variables.ids) === null || _variables$ids2 === void 0 ? void 0 : _variables$ids2.value) || task.customerData.ids || {}\n    };\n  };\n  const handleTaskAction = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log(`${action}ing task:`, selectedTask.id);\n\n      // Prepare variables to pass when completing the task\n      const variables = [{\n        name: 'reviewDecision',\n        value: action === 'approve' ? 'approved' : 'rejected'\n      }, {\n        name: 'reviewDate',\n        value: new Date().toISOString()\n      }, {\n        name: 'reviewer',\n        value: 'Admin User'\n      }];\n\n      // Complete the task with the decision\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\n      console.log('Task completion result:', completedTask);\n\n      // Update local state - remove the task from open tasks since it's now completed\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\n      addAlert(`Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, 'success');\n\n      // Clear selection since the task is no longer in the list\n      setSelectedTask(null);\n    } catch (error) {\n      console.error('Error processing task action:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTaskAssignment = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const currentUser = 'Admin User'; // In a real app, this would come from auth context\n      let updatedTask;\n      if (action === 'assign') {\n        console.log('Assigning task:', selectedTask.id, 'to:', currentUser);\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, currentUser);\n      } else {\n        console.log('Unassigning task:', selectedTask.id);\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\n      }\n      console.log('Task assignment result:', updatedTask);\n\n      // Update local state\n      const newAssignedTo = action === 'assign' ? currentUser : null;\n      setOpenTasks(prev => prev.map(task => task.id === selectedTask.id ? {\n        ...task,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      } : task));\n\n      // Update selected task\n      setSelectedTask(prev => ({\n        ...prev,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      }));\n      addAlert(`Task ${action === 'assign' ? 'assigned' : 'unassigned'} successfully`, 'success');\n    } catch (error) {\n      console.error('Error processing task assignment:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusColor = status => {\n    // Using CSS variables for consistent theming\n    const root = document.documentElement;\n    const getVar = varName => getComputedStyle(root).getPropertyValue(varName).trim();\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'created':\n        return getVar('--color-info');\n      case 'assigned':\n        return getVar('--color-warning');\n      case 'unassigned':\n        return getVar('--color-warning-alt');\n      case 'completed':\n        return getVar('--color-success');\n      case 'canceled':\n        return getVar('--color-danger');\n      // Legacy statuses for backward compatibility\n      case 'submitted':\n        return getVar('--color-info');\n      case 'in_progress':\n        return getVar('--color-warning');\n      case 'pending_review':\n        return getVar('--color-warning-alt');\n      case 'manual_review':\n        return getVar('--color-danger');\n      default:\n        return getVar('--color-secondary');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All open tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.type}`,\n      children: alert.message\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-panel panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header flex-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All open tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-icon\",\n            children: \"\\u21C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please wait while we fetch your open tasks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this) : openTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-tasks-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No tasks found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no tasks matching your filter criteria.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this) : openTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-card ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'selected' : ''}`,\n            onClick: () => handleTaskSelection(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: task.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Creation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.creationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Task Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.taskStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-panel panel\",\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details-header flex-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Task Details: \", selectedTask.customerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-assignment-controls\",\n              children: selectedTask.isAssigned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"assigned-to\",\n                  children: [\"Assigned to: \", selectedTask.assignedTo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary unassign-btn btn-base\",\n                  onClick: () => handleTaskAssignment('unassign'),\n                  disabled: loading,\n                  children: loading ? 'Unassigning...' : 'Unassign'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary assign-btn btn-base\",\n                onClick: () => handleTaskAssignment('assign'),\n                disabled: loading,\n                children: loading ? 'Assigning...' : 'Assign to Me'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-sections\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Customer Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: (() => {\n                  const customerData = getEnhancedCustomerData(selectedTask);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [customerData.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Full Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 34\n                      }, this), \" \", customerData.fullName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 29\n                    }, this), customerData.dob && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Date of Birth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 34\n                      }, this), \" \", customerData.dob]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 29\n                    }, this), customerData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 34\n                      }, this), \" \", customerData.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 29\n                    }, this), customerData.mobile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Mobile:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 34\n                      }, this), \" \", customerData.mobile]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 29\n                    }, this), customerData.occupation && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Occupation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 34\n                      }, this), \" \", customerData.occupation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 29\n                    }, this), customerData.income_band && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Income Band:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 34\n                      }, this), \" \", customerData.income_band]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"PEP Status:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 32\n                      }, this), \" \", customerData.pep ? 'Yes' : 'No']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), (() => {\n              const customerData = getEnhancedCustomerData(selectedTask);\n              const address = customerData.address || {};\n              if (address.line1 || address.city || address.state) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"address-info\",\n                    children: [address.line1 && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: address.line1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 45\n                    }, this), address.line2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: address.line2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 45\n                    }, this), (address.city || address.state) && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [address.city, address.city && address.state && ', ', address.state]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 29\n                    }, this), (address.pin || address.country) && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [address.pin, address.pin && address.country && ', ', address.country]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this);\n              }\n              return null;\n            })(), (() => {\n              const customerData = getEnhancedCustomerData(selectedTask);\n              const product = customerData.product || {};\n              if (product.desired_account || product.expected_mab_range) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Product Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"info-grid\",\n                    children: [product.desired_account && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Account Type:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 34\n                      }, this), \" \", product.desired_account]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 29\n                    }, this), product.expected_mab_range && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Expected MAB:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 34\n                      }, this), \" \", product.expected_mab_range]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this);\n              }\n              return null;\n            })(), (() => {\n              const customerData = getEnhancedCustomerData(selectedTask);\n              const ids = customerData.ids || {};\n              if (ids.idType || ids.idNumber) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Identity Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"info-grid\",\n                    children: [ids.idType && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"ID Type:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 34\n                      }, this), \" \", ids.idType.toUpperCase()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 29\n                    }, this), ids.idNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"ID Number:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 34\n                      }, this), \" \", ids.idNumber]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this);\n              }\n              return null;\n            })(), selectedTask.documents && selectedTask.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Documents (\", selectedTask.documents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"documents-list\",\n                children: selectedTask.documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"document-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doc-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-name\",\n                      children: doc.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-type\",\n                      children: doc.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Current Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus)\n                    },\n                    children: (selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.creationDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 21\n                }, this), selectedTask.processInstanceKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Instance:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processInstanceKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this), selectedTask.taskDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.taskDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completed Steps:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.completedSteps]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 21\n                }, this), selectedTask.priority && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.priority]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-approve\",\n                  onClick: () => handleTaskAction('approve'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✓ Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-reject\",\n                  onClick: () => handleTaskAction('reject'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✗ Reject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a task from the list to view its details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenTask, \"Zsz8NGuA4Ht1mxn4Y01eZZt9gzE=\");\n_c = OpenTask;\nexport default OpenTask;\nvar _c;\n$RefreshReg$(_c, \"OpenTask\");","map":{"version":3,"names":["React","useState","useEffect","tasklistApi","jsxDEV","_jsxDEV","Fragment","_Fragment","OpenTask","_s","openTasks","setOpenTasks","selectedTask","setSelectedTask","loading","setLoading","alerts","setAlerts","taskVariables","setTaskVariables","showAssignModal","setShowAssignModal","assigneeName","setAssigneeName","loadOpenTasks","console","log","tasks","getOpenTasks","openTasksData","map","task","_variables$customerNa","_variables$fullName","_variables$fullName2","_variables$customerNa2","_variables$dob","_variables$mobile","_variables$email","_variables$occupation","_variables$income_ban","_variables$pep","_variables$address","_variables$product","_variables$ids","_variables$income_ban2","_variables$pep2","variables","id","taskName","name","taskDefinitionId","creationDate","creationTime","Date","toLocaleDateString","taskStatus","assignee","assignedTo","isAssigned","processInstanceKey","state","priority","dueDate","followUpDate","customerName","value","fullName","customerData","dob","mobile","email","occupation","income_band","pep","address","product","ids","completedSteps","calculateCompletedStepsFromVariables","submissionDate","toISOString","split","incomeBand","error","addAlert","interval","setInterval","clearInterval","getTaskStatus","workflowStatus","status","calculateCompletedSteps","app","_app$customer","_app$customer2","_app$customer3","_app$address","_app$address2","_app$address3","_app$product","steps","customer","line1","city","documents","length","desired_account","_variables$fullName3","_variables$email2","_variables$mobile2","_variables$address2","_variables$documents","_variables$product2","message","type","alert","now","prev","setTimeout","filter","a","loadTaskVariables","taskId","searchTaskVariables","handleTaskSelection","getEnhancedCustomerData","_variables$fullName4","_variables$customerNa3","_variables$dob2","_variables$email3","_variables$mobile3","_variables$occupation2","_variables$income_ban3","_variables$pep3","_variables$address3","_variables$product3","_variables$ids2","handleTaskAction","action","completedTask","completeTask","handleTaskAssignment","currentUser","updatedTask","assignTask","unassignTask","newAssignedTo","getStatusColor","root","document","documentElement","getVar","varName","getComputedStyle","getPropertyValue","trim","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","line2","pin","country","expected_mab_range","idType","idNumber","toUpperCase","doc","index","style","backgroundColor","replace","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/Downloads/customer/customer-onboarding-ui/src/components/OpenTask/OpenTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './OpenTask.css';\r\nimport tasklistApi from '../../services/tasklistApi';\r\n\r\nconst OpenTask = () => {\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [taskVariables, setTaskVariables] = useState({});\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [assigneeName, setAssigneeName] = useState('');\r\n\r\n  // Load open tasks from tasklist backend\r\n  useEffect(() => {\r\n    const loadOpenTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log('Loading tasks from tasklist backend...');\r\n        \r\n        // Get open tasks from tasklist API\r\n        const tasks = await tasklistApi.getOpenTasks();\r\n        console.log('Tasks from tasklist API:', tasks);\r\n        \r\n        // Transform tasks to match the expected format\r\n        const openTasksData = tasks.map(task => {\r\n          // Get task variables for customer data\r\n          const variables = task.variables || {};\r\n          \r\n          return {\r\n            id: task.id,\r\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\r\n            creationDate: task.creationTime ? \r\n              new Date(task.creationTime).toLocaleDateString() : \r\n              new Date().toLocaleDateString(),\r\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\r\n            assignedTo: task.assignee || null,\r\n            isAssigned: !!task.assignee,\r\n            processInstanceKey: task.processInstanceKey,\r\n            taskDefinitionId: task.taskDefinitionId,\r\n            state: task.state,\r\n            priority: task.priority,\r\n            dueDate: task.dueDate,\r\n            followUpDate: task.followUpDate,\r\n            // Customer data from task variables\r\n            customerName: variables.customerName?.value || \r\n                         variables.fullName?.value || \r\n                         'Unknown Customer',\r\n            customerData: {\r\n              fullName: variables.fullName?.value || variables.customerName?.value || '',\r\n              dob: variables.dob?.value || '',\r\n              mobile: variables.mobile?.value || '',\r\n              email: variables.email?.value || '',\r\n              occupation: variables.occupation?.value || '',\r\n              income_band: variables.income_band?.value || '',\r\n              pep: variables.pep?.value || false,\r\n              address: variables.address?.value || {},\r\n              product: variables.product?.value || {},\r\n              ids: variables.ids?.value || {}\r\n            },\r\n            // Additional task metadata\r\n            completedSteps: calculateCompletedStepsFromVariables(variables),\r\n            submissionDate: task.creationTime ? \r\n              new Date(task.creationTime).toISOString().split('T')[0] : \r\n              new Date().toISOString().split('T')[0],\r\n            incomeBand: variables.income_band?.value || 'Not specified',\r\n            pep: variables.pep?.value || false\r\n          };\r\n        });\r\n        \r\n        setOpenTasks(openTasksData);\r\n        console.log('Processed open tasks:', openTasksData);\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading open tasks from tasklist:', error);\r\n        addAlert('Error loading tasks from tasklist backend', 'error');\r\n        setOpenTasks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOpenTasks();\r\n    \r\n    // Set up polling to refresh tasks periodically\r\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get task status based on workflow and application status\r\n  const getTaskStatus = (workflowStatus, status) => {\r\n    if (workflowStatus === 'manual_review') return 'Manual Review';\r\n    if (status === 'pending_review') return 'Pending Review';\r\n    if (workflowStatus === 'in_progress') return 'In Progress';\r\n    if (status === 'submitted') return 'Submitted';\r\n    return 'Unknown';\r\n  };\r\n\r\n  // Calculate completed steps based on available data\r\n  const calculateCompletedSteps = (app) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (app.customer?.fullName && app.customer?.email && app.customer?.mobile) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    if (app.address?.line1 && app.address?.city && app.address?.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    if (app.documents && app.documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    if (app.product?.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  // Calculate completed steps from task variables\r\n  const calculateCompletedStepsFromVariables = (variables) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (variables.fullName?.value && variables.email?.value && variables.mobile?.value) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    const address = variables.address?.value || {};\r\n    if (address.line1 && address.city && address.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    const documents = variables.documents?.value || [];\r\n    if (documents && documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    const product = variables.product?.value || {};\r\n    if (product.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  const addAlert = (message, type = 'info') => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts(prev => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Load task variables when a task is selected\r\n  const loadTaskVariables = async (taskId) => {\r\n    try {\r\n      console.log('Loading variables for task:', taskId);\r\n      const variables = await tasklistApi.searchTaskVariables(taskId);\r\n      console.log('Task variables:', variables);\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: variables\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error loading task variables:', error);\r\n      // Don't show error alert for variables as it's not critical\r\n    }\r\n  };\r\n\r\n  // Handle task selection and load its variables\r\n  const handleTaskSelection = (task) => {\r\n    setSelectedTask(task);\r\n    if (task) {\r\n      // Always load fresh variables from backend when task is selected\r\n      console.log('Task selected, loading variables from backend port 5174...');\r\n      loadTaskVariables(task.id);\r\n    }\r\n  };\r\n\r\n  // Get enhanced customer data combining task data and loaded variables\r\n  const getEnhancedCustomerData = (task) => {\r\n    const variables = taskVariables[task.id] || {};\r\n    \r\n    return {\r\n      fullName: variables.fullName?.value || variables.customerName?.value || task.customerData.fullName || '',\r\n      dob: variables.dob?.value || task.customerData.dob || '',\r\n      email: variables.email?.value || task.customerData.email || '',\r\n      mobile: variables.mobile?.value || task.customerData.mobile || '',\r\n      occupation: variables.occupation?.value || task.customerData.occupation || '',\r\n      income_band: variables.income_band?.value || task.customerData.income_band || '',\r\n      pep: variables.pep?.value || task.customerData.pep || false,\r\n      address: variables.address?.value || task.customerData.address || {},\r\n      product: variables.product?.value || task.customerData.product || {},\r\n      ids: variables.ids?.value || task.customerData.ids || {}\r\n    };\r\n  };\r\n\r\n  const handleTaskAction = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log(`${action}ing task:`, selectedTask.id);\r\n\r\n      // Prepare variables to pass when completing the task\r\n      const variables = [\r\n        {\r\n          name: 'reviewDecision',\r\n          value: action === 'approve' ? 'approved' : 'rejected'\r\n        },\r\n        {\r\n          name: 'reviewDate',\r\n          value: new Date().toISOString()\r\n        },\r\n        {\r\n          name: 'reviewer',\r\n          value: 'Admin User'\r\n        }\r\n      ];\r\n\r\n      // Complete the task with the decision\r\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\r\n      console.log('Task completion result:', completedTask);\r\n\r\n      // Update local state - remove the task from open tasks since it's now completed\r\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'approve' ? 'approved' : 'rejected'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Clear selection since the task is no longer in the list\r\n      setSelectedTask(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task action:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTaskAssignment = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const currentUser = 'Admin User'; // In a real app, this would come from auth context\r\n      let updatedTask;\r\n\r\n      if (action === 'assign') {\r\n        console.log('Assigning task:', selectedTask.id, 'to:', currentUser);\r\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, currentUser);\r\n      } else {\r\n        console.log('Unassigning task:', selectedTask.id);\r\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\r\n      }\r\n\r\n      console.log('Task assignment result:', updatedTask);\r\n\r\n      // Update local state\r\n      const newAssignedTo = action === 'assign' ? currentUser : null;\r\n      setOpenTasks(prev => prev.map(task => \r\n        task.id === selectedTask.id \r\n          ? { \r\n              ...task, \r\n              assignedTo: newAssignedTo,\r\n              isAssigned: !!newAssignedTo,\r\n              taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n            }\r\n          : task\r\n      ));\r\n\r\n      // Update selected task\r\n      setSelectedTask(prev => ({\r\n        ...prev,\r\n        assignedTo: newAssignedTo,\r\n        isAssigned: !!newAssignedTo,\r\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n      }));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'assign' ? 'assigned' : 'unassigned'} successfully`, \r\n        'success'\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task assignment:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    // Using CSS variables for consistent theming\r\n    const root = document.documentElement;\r\n    const getVar = (varName) => getComputedStyle(root).getPropertyValue(varName).trim();\r\n    \r\n    switch (status?.toLowerCase()) {\r\n      case 'created': return getVar('--color-info');\r\n      case 'assigned': return getVar('--color-warning');\r\n      case 'unassigned': return getVar('--color-warning-alt');\r\n      case 'completed': return getVar('--color-success');\r\n      case 'canceled': return getVar('--color-danger');\r\n      // Legacy statuses for backward compatibility\r\n      case 'submitted': return getVar('--color-info');\r\n      case 'in_progress': return getVar('--color-warning');\r\n      case 'pending_review': return getVar('--color-warning-alt');\r\n      case 'manual_review': return getVar('--color-danger');\r\n      default: return getVar('--color-secondary');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"open-task-container\">\r\n      <h1 className=\"page-title\">All open tasks</h1>\r\n\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"task-layout\">\r\n        {/* Tasks List */}\r\n        <div className=\"tasks-panel panel\">\r\n          <div className=\"tasks-header flex-header\">\r\n            <h2>All open tasks</h2>\r\n            <div className=\"sort-icon\">⇅</div>\r\n          </div>\r\n          \r\n          <div className=\"tasks-list\">\r\n            {loading ? (\r\n              <div className=\"loading-tasks empty-state\">\r\n                <div className=\"loading-spinner\">⏳</div>\r\n                <h3>Loading tasks...</h3>\r\n                <p>Please wait while we fetch your open tasks.</p>\r\n              </div>\r\n            ) : openTasks.length === 0 ? (\r\n              <div className=\"no-tasks empty-state\">\r\n                <div className=\"no-tasks-icon\">🔍</div>\r\n                <h3>No tasks found</h3>\r\n                <p>There are no tasks matching your filter criteria.</p>\r\n              </div>\r\n            ) : (\r\n              openTasks.map(task => (\r\n                <div \r\n                  key={task.id} \r\n                  className={`task-card ${selectedTask?.id === task.id ? 'selected' : ''}`}\r\n                  onClick={() => handleTaskSelection(task)}\r\n                >\r\n                  <div className=\"task-header\">\r\n                    <h3>{task.taskName}</h3>\r\n                  </div>\r\n                  <div className=\"task-details\">\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Creation Date:</span>\r\n                      <span className=\"detail-value\">{task.creationDate}</span>\r\n                    </div>\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Task Status:</span>\r\n                      <span className=\"detail-value\">{task.taskStatus}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Details Panel */}\r\n        <div className=\"task-details-panel panel\">\r\n          {selectedTask ? (\r\n            <>\r\n              <div className=\"task-details-header flex-header\">\r\n                <h2>Task Details: {selectedTask.customerName}</h2>\r\n                <div className=\"task-assignment-controls\">\r\n                  {selectedTask.isAssigned ? (\r\n                    <>\r\n                      <span className=\"assigned-to\">Assigned to: {selectedTask.assignedTo}</span>\r\n                      <button \r\n                        className=\"btn btn-secondary unassign-btn btn-base\"\r\n                        onClick={() => handleTaskAssignment('unassign')}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Unassigning...' : 'Unassign'}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary assign-btn btn-base\"\r\n                      onClick={() => handleTaskAssignment('assign')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Assigning...' : 'Assign to Me'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"details-sections\">\r\n                {/* Customer Information */}\r\n                <div className=\"details-section\">\r\n                  <h3>Customer Information</h3>\r\n                  <div className=\"info-grid\">\r\n                    {(() => {\r\n                      const customerData = getEnhancedCustomerData(selectedTask);\r\n                      return (\r\n                        <>\r\n                          {customerData.fullName && (\r\n                            <div><strong>Full Name:</strong> {customerData.fullName}</div>\r\n                          )}\r\n                          {customerData.dob && (\r\n                            <div><strong>Date of Birth:</strong> {customerData.dob}</div>\r\n                          )}\r\n                          {customerData.email && (\r\n                            <div><strong>Email:</strong> {customerData.email}</div>\r\n                          )}\r\n                          {customerData.mobile && (\r\n                            <div><strong>Mobile:</strong> {customerData.mobile}</div>\r\n                          )}\r\n                          {customerData.occupation && (\r\n                            <div><strong>Occupation:</strong> {customerData.occupation}</div>\r\n                          )}\r\n                          {customerData.income_band && (\r\n                            <div><strong>Income Band:</strong> {customerData.income_band}</div>\r\n                          )}\r\n                          <div><strong>PEP Status:</strong> {customerData.pep ? 'Yes' : 'No'}</div>\r\n                        </>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Address Information */}\r\n                {(() => {\r\n                  const customerData = getEnhancedCustomerData(selectedTask);\r\n                  const address = customerData.address || {};\r\n                  \r\n                  if (address.line1 || address.city || address.state) {\r\n                    return (\r\n                      <div className=\"details-section\">\r\n                        <h3>Address</h3>\r\n                        <div className=\"address-info\">\r\n                          {address.line1 && <p>{address.line1}</p>}\r\n                          {address.line2 && <p>{address.line2}</p>}\r\n                          {(address.city || address.state) && (\r\n                            <p>\r\n                              {address.city}\r\n                              {address.city && address.state && ', '}\r\n                              {address.state}\r\n                            </p>\r\n                          )}\r\n                          {(address.pin || address.country) && (\r\n                            <p>\r\n                              {address.pin}\r\n                              {address.pin && address.country && ', '}\r\n                              {address.country}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })()}\r\n\r\n                {/* Product Information */}\r\n                {(() => {\r\n                  const customerData = getEnhancedCustomerData(selectedTask);\r\n                  const product = customerData.product || {};\r\n                  \r\n                  if (product.desired_account || product.expected_mab_range) {\r\n                    return (\r\n                      <div className=\"details-section\">\r\n                        <h3>Product Details</h3>\r\n                        <div className=\"info-grid\">\r\n                          {product.desired_account && (\r\n                            <div><strong>Account Type:</strong> {product.desired_account}</div>\r\n                          )}\r\n                          {product.expected_mab_range && (\r\n                            <div><strong>Expected MAB:</strong> {product.expected_mab_range}</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })()}\r\n\r\n                {/* ID Information */}\r\n                {(() => {\r\n                  const customerData = getEnhancedCustomerData(selectedTask);\r\n                  const ids = customerData.ids || {};\r\n                  \r\n                  if (ids.idType || ids.idNumber) {\r\n                    return (\r\n                      <div className=\"details-section\">\r\n                        <h3>Identity Details</h3>\r\n                        <div className=\"info-grid\">\r\n                          {ids.idType && (\r\n                            <div><strong>ID Type:</strong> {ids.idType.toUpperCase()}</div>\r\n                          )}\r\n                          {ids.idNumber && (\r\n                            <div><strong>ID Number:</strong> {ids.idNumber}</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })()}\r\n\r\n                {/* Documents */}\r\n                {selectedTask.documents && selectedTask.documents.length > 0 && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Documents ({selectedTask.documents.length})</h3>\r\n                    <div className=\"documents-list\">\r\n                      {selectedTask.documents.map((doc, index) => (\r\n                        <div key={index} className=\"document-item\">\r\n                          <div className=\"doc-info\">\r\n                            <div className=\"doc-name\">{doc.name}</div>\r\n                            <div className=\"doc-type\">{doc.type}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Status */}\r\n                <div className=\"details-section\">\r\n                  <h3>Task Status</h3>\r\n                  <div className=\"status-info\">\r\n                    <div className=\"status-item\">\r\n                      <strong>Current Status:</strong>\r\n                      <span \r\n                        className=\"status-badge\" \r\n                        style={{ backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus) }}\r\n                      >\r\n                        {(selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Creation Date:</strong> {selectedTask.creationDate}\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Task ID:</strong> {selectedTask.id}\r\n                    </div>\r\n                    {selectedTask.processInstanceKey && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Instance:</strong> {selectedTask.processInstanceKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.taskDefinitionId && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Task Definition:</strong> {selectedTask.taskDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    <div className=\"status-item\">\r\n                      <strong>Completed Steps:</strong> {selectedTask.completedSteps}\r\n                    </div>\r\n                    {selectedTask.priority && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Priority:</strong> {selectedTask.priority}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Task Actions */}\r\n                <div className=\"task-actions\">\r\n                  <div className=\"action-buttons\">\r\n                    <button \r\n                      className=\"btn btn-approve\"\r\n                      onClick={() => handleTaskAction('approve')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✓ Approve'}\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-reject\"\r\n                      onClick={() => handleTaskAction('reject')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✗ Reject'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-selection empty-state\">\r\n              <h2>Select a Task</h2>\r\n              <p>Choose a task from the list to view its details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}