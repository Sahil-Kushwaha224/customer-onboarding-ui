{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\Downloads\\\\customer\\\\customer-onboarding-ui\\\\src\\\\components\\\\OpenTask\\\\OpenTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OpenTask.css';\nimport tasklistApi from '../../services/tasklistApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OpenTask = () => {\n  _s();\n  const [openTasks, setOpenTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [taskVariables, setTaskVariables] = useState({});\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [assigneeName, setAssigneeName] = useState('');\n  const [pendingChanges, setPendingChanges] = useState({}); // Store pending field changes\n\n  // Load open tasks from tasklist backend\n  useEffect(() => {\n    const loadOpenTasks = async () => {\n      setLoading(true);\n      try {\n        console.log('Loading tasks from tasklist backend...');\n\n        // Get open tasks from tasklist API\n        const tasks = await tasklistApi.getOpenTasks();\n        console.log('Tasks from tasklist API:', tasks);\n\n        // Transform tasks to match the expected format\n        const openTasksData = tasks.map(task => {\n          var _variables$customerNa, _variables$fullName, _variables$fullName2, _variables$customerNa2, _variables$dob, _variables$mobile, _variables$email, _variables$occupation, _variables$income_ban, _variables$pep, _variables$address, _variables$product, _variables$ids, _variables$income_ban2, _variables$pep2;\n          // Get task variables for customer data\n          const variables = task.variables || {};\n          return {\n            id: task.id,\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\n            creationDate: task.creationTime ? new Date(task.creationTime).toLocaleDateString() : new Date().toLocaleDateString(),\n            creationTime: task.creationTime,\n            completionTime: task.completionTime,\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\n            assignedTo: task.assignee || null,\n            isAssigned: !!task.assignee,\n            processInstanceKey: task.processInstanceKey,\n            processDefinitionId: task.processDefinitionId,\n            processName: task.processName,\n            taskDefinitionId: task.taskDefinitionId,\n            state: task.state || task.taskState,\n            priority: task.priority,\n            dueDate: task.dueDate,\n            followUpDate: task.followUpDate,\n            formKey: task.formKey,\n            candidateGroups: task.candidateGroups || [],\n            candidateUsers: task.candidateUsers || [],\n            sortValues: task.sortValues,\n            isFirst: task.isFirst,\n            // Customer data from task variables\n            customerName: ((_variables$customerNa = variables.customerName) === null || _variables$customerNa === void 0 ? void 0 : _variables$customerNa.value) || ((_variables$fullName = variables.fullName) === null || _variables$fullName === void 0 ? void 0 : _variables$fullName.value) || 'Unknown Customer',\n            customerData: {\n              fullName: ((_variables$fullName2 = variables.fullName) === null || _variables$fullName2 === void 0 ? void 0 : _variables$fullName2.value) || ((_variables$customerNa2 = variables.customerName) === null || _variables$customerNa2 === void 0 ? void 0 : _variables$customerNa2.value) || '',\n              dob: ((_variables$dob = variables.dob) === null || _variables$dob === void 0 ? void 0 : _variables$dob.value) || '',\n              mobile: ((_variables$mobile = variables.mobile) === null || _variables$mobile === void 0 ? void 0 : _variables$mobile.value) || '',\n              email: ((_variables$email = variables.email) === null || _variables$email === void 0 ? void 0 : _variables$email.value) || '',\n              occupation: ((_variables$occupation = variables.occupation) === null || _variables$occupation === void 0 ? void 0 : _variables$occupation.value) || '',\n              income_band: ((_variables$income_ban = variables.income_band) === null || _variables$income_ban === void 0 ? void 0 : _variables$income_ban.value) || '',\n              pep: ((_variables$pep = variables.pep) === null || _variables$pep === void 0 ? void 0 : _variables$pep.value) || false,\n              address: ((_variables$address = variables.address) === null || _variables$address === void 0 ? void 0 : _variables$address.value) || {},\n              product: ((_variables$product = variables.product) === null || _variables$product === void 0 ? void 0 : _variables$product.value) || {},\n              ids: ((_variables$ids = variables.ids) === null || _variables$ids === void 0 ? void 0 : _variables$ids.value) || {}\n            },\n            // Additional task metadata\n            completedSteps: calculateCompletedStepsFromVariables(variables),\n            submissionDate: task.creationTime ? new Date(task.creationTime).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n            incomeBand: ((_variables$income_ban2 = variables.income_band) === null || _variables$income_ban2 === void 0 ? void 0 : _variables$income_ban2.value) || 'Not specified',\n            pep: ((_variables$pep2 = variables.pep) === null || _variables$pep2 === void 0 ? void 0 : _variables$pep2.value) || false\n          };\n        });\n        setOpenTasks(openTasksData);\n        console.log('Processed open tasks:', openTasksData);\n      } catch (error) {\n        console.error('Error loading open tasks from tasklist:', error);\n        addAlert('Error loading tasks from tasklist backend', 'error');\n        setOpenTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOpenTasks();\n\n    // Set up polling to refresh tasks periodically\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get task status based on workflow and application status\n  const getTaskStatus = (workflowStatus, status) => {\n    if (workflowStatus === 'manual_review') return 'Manual Review';\n    if (status === 'pending_review') return 'Pending Review';\n    if (workflowStatus === 'in_progress') return 'In Progress';\n    if (status === 'submitted') return 'Submitted';\n    return 'Unknown';\n  };\n\n  // Calculate completed steps based on available data\n  const calculateCompletedSteps = app => {\n    var _app$customer, _app$customer2, _app$customer3, _app$address, _app$address2, _app$address3, _app$product;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_app$customer = app.customer) !== null && _app$customer !== void 0 && _app$customer.fullName && (_app$customer2 = app.customer) !== null && _app$customer2 !== void 0 && _app$customer2.email && (_app$customer3 = app.customer) !== null && _app$customer3 !== void 0 && _app$customer3.mobile) {\n      steps++;\n    }\n\n    // Check if address is complete\n    if ((_app$address = app.address) !== null && _app$address !== void 0 && _app$address.line1 && (_app$address2 = app.address) !== null && _app$address2 !== void 0 && _app$address2.city && (_app$address3 = app.address) !== null && _app$address3 !== void 0 && _app$address3.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    if (app.documents && app.documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    if ((_app$product = app.product) !== null && _app$product !== void 0 && _app$product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n\n  // Calculate completed steps from task variables\n  const calculateCompletedStepsFromVariables = variables => {\n    var _variables$fullName3, _variables$email2, _variables$mobile2, _variables$address2, _variables$documents, _variables$product2;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_variables$fullName3 = variables.fullName) !== null && _variables$fullName3 !== void 0 && _variables$fullName3.value && (_variables$email2 = variables.email) !== null && _variables$email2 !== void 0 && _variables$email2.value && (_variables$mobile2 = variables.mobile) !== null && _variables$mobile2 !== void 0 && _variables$mobile2.value) {\n      steps++;\n    }\n\n    // Check if address is complete\n    const address = ((_variables$address2 = variables.address) === null || _variables$address2 === void 0 ? void 0 : _variables$address2.value) || {};\n    if (address.line1 && address.city && address.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    const documents = ((_variables$documents = variables.documents) === null || _variables$documents === void 0 ? void 0 : _variables$documents.value) || [];\n    if (documents && documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    const product = ((_variables$product2 = variables.product) === null || _variables$product2 === void 0 ? void 0 : _variables$product2.value) || {};\n    if (product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n  const addAlert = (message, type = 'info') => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n\n  // Load task variables when a task is selected\n  const loadTaskVariables = async taskId => {\n    try {\n      console.log('Loading variables for task from backend port 5174:', taskId);\n      const variables = await tasklistApi.searchTaskVariables(taskId);\n      console.log('Task variables loaded from backend:', variables);\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: variables\n      }));\n\n      // Show success message when variables are loaded\n      addAlert('Task variables loaded successfully', 'success');\n    } catch (error) {\n      console.error('Error loading task variables from backend:', error);\n      addAlert('Failed to load task variables from backend', 'error');\n    }\n  };\n\n  // Handle task selection and load its variables\n  const handleTaskSelection = task => {\n    // Clear pending changes when switching tasks\n    if (selectedTask && selectedTask.id !== (task === null || task === void 0 ? void 0 : task.id)) {\n      const currentTaskChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n      if (currentTaskChanges.length > 0) {\n        console.log(`Clearing ${currentTaskChanges.length} pending changes for previous task`);\n        setPendingChanges(prev => {\n          const newChanges = {\n            ...prev\n          };\n          Object.keys(newChanges).forEach(key => {\n            if (newChanges[key].taskId === selectedTask.id) {\n              delete newChanges[key];\n            }\n          });\n          return newChanges;\n        });\n      }\n    }\n    setSelectedTask(task);\n    if (task) {\n      // Always load fresh variables from backend when task is selected\n      console.log('Task selected, loading variables from backend port 5174...');\n      loadTaskVariables(task.id);\n    }\n  };\n\n  // Get enhanced customer data combining task data and loaded variables\n  const getEnhancedCustomerData = task => {\n    var _variables$userInfo, _variables$fullName4, _variables$customerNa3, _variables$dob2, _variables$email3, _variables$mobile3, _variables$occupation2, _variables$income_ban3, _variables$pep3, _variables$address3, _variables$address3$v, _task$customerData$ad, _variables$address4, _variables$address4$v, _task$customerData$ad2, _variables$address5, _variables$address5$v, _task$customerData$ad3, _variables$address6, _variables$address6$v, _task$customerData$ad4, _variables$address7, _variables$address7$v, _task$customerData$ad5, _variables$address8, _variables$address8$v, _task$customerData$ad6, _variables$product3, _variables$product3$v, _task$customerData$pr, _variables$product4, _variables$product4$v, _task$customerData$pr2, _variables$ids2, _variables$ids2$value, _task$customerData$id, _variables$ids3, _variables$ids3$value, _task$customerData$id2;\n    const variables = taskVariables[task.id] || {};\n\n    // Check if userInfo exists in variables\n    const userInfo = ((_variables$userInfo = variables.userInfo) === null || _variables$userInfo === void 0 ? void 0 : _variables$userInfo.value) || {};\n    const customer = userInfo.customer || {};\n    const address = userInfo.address || {};\n    const ids = userInfo.ids || {};\n    const product = userInfo.product || {};\n    return {\n      // Customer basic info - prioritize userInfo data\n      fullName: customer.fullName || ((_variables$fullName4 = variables.fullName) === null || _variables$fullName4 === void 0 ? void 0 : _variables$fullName4.value) || ((_variables$customerNa3 = variables.customerName) === null || _variables$customerNa3 === void 0 ? void 0 : _variables$customerNa3.value) || task.customerData.fullName || '',\n      dob: customer.dob || ((_variables$dob2 = variables.dob) === null || _variables$dob2 === void 0 ? void 0 : _variables$dob2.value) || task.customerData.dob || '',\n      email: customer.email || ((_variables$email3 = variables.email) === null || _variables$email3 === void 0 ? void 0 : _variables$email3.value) || task.customerData.email || '',\n      mobile: customer.mobile || ((_variables$mobile3 = variables.mobile) === null || _variables$mobile3 === void 0 ? void 0 : _variables$mobile3.value) || task.customerData.mobile || '',\n      occupation: customer.occupation || ((_variables$occupation2 = variables.occupation) === null || _variables$occupation2 === void 0 ? void 0 : _variables$occupation2.value) || task.customerData.occupation || '',\n      income_band: customer.income_band || ((_variables$income_ban3 = variables.income_band) === null || _variables$income_ban3 === void 0 ? void 0 : _variables$income_ban3.value) || task.customerData.income_band || '',\n      pep: customer.pep !== undefined ? customer.pep : ((_variables$pep3 = variables.pep) === null || _variables$pep3 === void 0 ? void 0 : _variables$pep3.value) || task.customerData.pep || false,\n      // Address info - prioritize userInfo data\n      address: {\n        line1: address.line1 || ((_variables$address3 = variables.address) === null || _variables$address3 === void 0 ? void 0 : (_variables$address3$v = _variables$address3.value) === null || _variables$address3$v === void 0 ? void 0 : _variables$address3$v.line1) || ((_task$customerData$ad = task.customerData.address) === null || _task$customerData$ad === void 0 ? void 0 : _task$customerData$ad.line1) || '',\n        line2: address.line2 || ((_variables$address4 = variables.address) === null || _variables$address4 === void 0 ? void 0 : (_variables$address4$v = _variables$address4.value) === null || _variables$address4$v === void 0 ? void 0 : _variables$address4$v.line2) || ((_task$customerData$ad2 = task.customerData.address) === null || _task$customerData$ad2 === void 0 ? void 0 : _task$customerData$ad2.line2) || '',\n        city: address.city || ((_variables$address5 = variables.address) === null || _variables$address5 === void 0 ? void 0 : (_variables$address5$v = _variables$address5.value) === null || _variables$address5$v === void 0 ? void 0 : _variables$address5$v.city) || ((_task$customerData$ad3 = task.customerData.address) === null || _task$customerData$ad3 === void 0 ? void 0 : _task$customerData$ad3.city) || '',\n        state: address.state || ((_variables$address6 = variables.address) === null || _variables$address6 === void 0 ? void 0 : (_variables$address6$v = _variables$address6.value) === null || _variables$address6$v === void 0 ? void 0 : _variables$address6$v.state) || ((_task$customerData$ad4 = task.customerData.address) === null || _task$customerData$ad4 === void 0 ? void 0 : _task$customerData$ad4.state) || '',\n        pin: address.pin || ((_variables$address7 = variables.address) === null || _variables$address7 === void 0 ? void 0 : (_variables$address7$v = _variables$address7.value) === null || _variables$address7$v === void 0 ? void 0 : _variables$address7$v.pin) || ((_task$customerData$ad5 = task.customerData.address) === null || _task$customerData$ad5 === void 0 ? void 0 : _task$customerData$ad5.pin) || '',\n        country: address.country || ((_variables$address8 = variables.address) === null || _variables$address8 === void 0 ? void 0 : (_variables$address8$v = _variables$address8.value) === null || _variables$address8$v === void 0 ? void 0 : _variables$address8$v.country) || ((_task$customerData$ad6 = task.customerData.address) === null || _task$customerData$ad6 === void 0 ? void 0 : _task$customerData$ad6.country) || ''\n      },\n      // Product info - prioritize userInfo data\n      product: {\n        desired_account: product.desired_account || ((_variables$product3 = variables.product) === null || _variables$product3 === void 0 ? void 0 : (_variables$product3$v = _variables$product3.value) === null || _variables$product3$v === void 0 ? void 0 : _variables$product3$v.desired_account) || ((_task$customerData$pr = task.customerData.product) === null || _task$customerData$pr === void 0 ? void 0 : _task$customerData$pr.desired_account) || '',\n        expected_mab_range: product.expected_mab_range || ((_variables$product4 = variables.product) === null || _variables$product4 === void 0 ? void 0 : (_variables$product4$v = _variables$product4.value) === null || _variables$product4$v === void 0 ? void 0 : _variables$product4$v.expected_mab_range) || ((_task$customerData$pr2 = task.customerData.product) === null || _task$customerData$pr2 === void 0 ? void 0 : _task$customerData$pr2.expected_mab_range) || ''\n      },\n      // ID info - prioritize userInfo data\n      ids: {\n        idType: ids.idType || ((_variables$ids2 = variables.ids) === null || _variables$ids2 === void 0 ? void 0 : (_variables$ids2$value = _variables$ids2.value) === null || _variables$ids2$value === void 0 ? void 0 : _variables$ids2$value.idType) || ((_task$customerData$id = task.customerData.ids) === null || _task$customerData$id === void 0 ? void 0 : _task$customerData$id.idType) || '',\n        idNumber: ids.idNumber || ((_variables$ids3 = variables.ids) === null || _variables$ids3 === void 0 ? void 0 : (_variables$ids3$value = _variables$ids3.value) === null || _variables$ids3$value === void 0 ? void 0 : _variables$ids3$value.idNumber) || ((_task$customerData$id2 = task.customerData.ids) === null || _task$customerData$id2 === void 0 ? void 0 : _task$customerData$id2.idNumber) || ''\n      },\n      // Additional userInfo fields\n      submissionTimestamp: userInfo.submissionTimestamp || ''\n    };\n  };\n  const handleTaskAction = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log(`${action}ing task:`, selectedTask.id);\n\n      // Prepare variables to pass when completing the task\n      const variables = [{\n        name: 'reviewDecision',\n        value: action === 'approve' ? 'approved' : 'rejected'\n      }, {\n        name: 'reviewDate',\n        value: new Date().toISOString()\n      }, {\n        name: 'reviewer',\n        value: 'Admin User'\n      }];\n\n      // Add any pending field changes to the variables\n      const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n      console.log('Pending changes for task:', taskPendingChanges);\n      taskPendingChanges.forEach(change => {\n        variables.push({\n          name: change.fieldName,\n          value: change.newValue\n        });\n      });\n      console.log('Final variables to send with task completion:', variables);\n\n      // Complete the task with the decision\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\n      console.log('Task completion result:', completedTask);\n\n      // Update local state - remove the task from open tasks since it's now completed\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\n\n      // Clear pending changes for this task\n      setPendingChanges(prev => {\n        const newChanges = {\n          ...prev\n        };\n        Object.keys(newChanges).forEach(key => {\n          if (newChanges[key].taskId === selectedTask.id) {\n            delete newChanges[key];\n          }\n        });\n        return newChanges;\n      });\n      addAlert(`Task ${action === 'approve' ? 'approved' : 'rejected'} successfully. All field changes have been saved.`, 'success');\n\n      // Clear selection since the task is no longer in the list\n      setSelectedTask(null);\n    } catch (error) {\n      console.error('Error processing task action:', error);\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show assign modal\n  const showAssignTaskModal = () => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setAssigneeName('');\n    setShowAssignModal(true);\n  };\n\n  // Handle task assignment with assignee name\n  const handleTaskAssignment = async (action, assigneeName = null) => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    if (action === 'assign' && !assigneeName) {\n      addAlert('Please enter assignee name', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      let updatedTask;\n      if (action === 'assign') {\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\n        console.log('Making API call to assign task...');\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\n        console.log('Assignment API call completed:', updatedTask);\n      } else {\n        console.log('Unassigning task:', selectedTask.id);\n        console.log('Making API call to unassign task...');\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\n        console.log('Unassignment API call completed:', updatedTask);\n      }\n      console.log('Task assignment result:', updatedTask);\n\n      // Update local state\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\n      setOpenTasks(prev => prev.map(task => task.id === selectedTask.id ? {\n        ...task,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      } : task));\n\n      // Update selected task\n      setSelectedTask(prev => ({\n        ...prev,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      }));\n      addAlert(`Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, 'success');\n\n      // Close modal if it was open\n      setShowAssignModal(false);\n      setAssigneeName('');\n    } catch (error) {\n      console.error('Error processing task assignment:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        response: error.response\n      });\n      let errorMessage = `Failed to ${action} task`;\n      if (error.message) {\n        errorMessage += `: ${error.message}`;\n      }\n      addAlert(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle assign modal confirmation\n  const handleAssignConfirm = () => {\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\n    console.log('Assignee name:', assigneeName);\n    console.log('Assignee name trimmed:', assigneeName.trim());\n    console.log('Selected task:', selectedTask);\n    if (assigneeName.trim()) {\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\n      handleTaskAssignment('assign', assigneeName.trim());\n    } else {\n      console.log('No assignee name provided');\n      addAlert('Please enter assignee name', 'error');\n    }\n  };\n  const getStatusColor = status => {\n    // Using CSS variables for consistent theming\n    const root = document.documentElement;\n    const getVar = varName => getComputedStyle(root).getPropertyValue(varName).trim();\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'created':\n        return getVar('--color-info');\n      case 'assigned':\n        return getVar('--color-warning');\n      case 'unassigned':\n        return getVar('--color-warning-alt');\n      case 'completed':\n        return getVar('--color-success');\n      case 'canceled':\n        return getVar('--color-danger');\n      // Legacy statuses for backward compatibility\n      case 'submitted':\n        return getVar('--color-info');\n      case 'in_progress':\n        return getVar('--color-warning');\n      case 'pending_review':\n        return getVar('--color-warning-alt');\n      case 'manual_review':\n        return getVar('--color-danger');\n      default:\n        return getVar('--color-secondary');\n    }\n  };\n\n  // Handle field value change - store locally without saving\n  const handleFieldChange = (taskId, fieldName, newValue) => {\n    // Store the change in pending changes\n    const changeKey = `${taskId}_${fieldName}`;\n    setPendingChanges(prev => ({\n      ...prev,\n      [changeKey]: {\n        taskId,\n        fieldName,\n        newValue\n      }\n    }));\n\n    // Update the task variables immediately for UI responsiveness\n    setTaskVariables(prev => ({\n      ...prev,\n      [taskId]: prev[taskId].map(variable => variable.name === fieldName ? {\n        ...variable,\n        value: newValue\n      } : variable)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All open tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.type}`,\n      children: alert.message\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-panel panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header flex-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All open tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-icon\",\n            children: \"\\u21C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please wait while we fetch your open tasks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this) : openTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-tasks-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No tasks found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no tasks matching your filter criteria.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this) : openTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-card ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'selected' : ''}`,\n            onClick: () => handleTaskSelection(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: task.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Creation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.creationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Task Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.taskStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-panel panel\",\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details-header flex-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Task Details: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-assignment-controls\",\n              children: selectedTask.isAssigned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"assigned-to\",\n                  children: [\"Assigned to: \", selectedTask.assignedTo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary unassign-btn btn-base\",\n                  onClick: () => handleTaskAssignment('unassign'),\n                  disabled: loading,\n                  children: loading ? 'Unassigning...' : 'Unassign'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary assign-btn btn-base\",\n                onClick: showAssignTaskModal,\n                disabled: loading,\n                children: loading ? 'Assigning...' : 'Assign Task'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-sections\",\n            children: [!taskVariables[selectedTask.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Loading Task Information...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Fetching task variables from backend...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this), taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section task-variables-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"variables-grid\",\n                children: taskVariables[selectedTask.id].filter(variable => {\n                  // Filter out specific fields that should not be displayed\n                  const fieldsToHide = ['completedSteps', 'documentPath', 'currentStep', 'nextStep', 'pan', 'status', 'Status'];\n                  return !fieldsToHide.includes(variable.name);\n                }).map((variable, index) => {\n                  // Parse userInfo if it's the userInfo variable\n                  if (variable.name === 'userInfo') {\n                    try {\n                      const userInfo = JSON.parse(variable.value);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"variable-group-title\",\n                          children: \"Customer Information\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 625,\n                          columnNumber: 33\n                        }, this), userInfo.customer && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Personal Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 630,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.customer).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 633,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: key === 'dob' && value ? new Date(value).toLocaleDateString() : key === 'pep' ? value ? 'Yes' : 'No' : value || 'Not provided'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 634,\n                              columnNumber: 41\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 632,\n                            columnNumber: 39\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 629,\n                          columnNumber: 35\n                        }, this), userInfo.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Address Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 647,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.address).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 651,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 652,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 650,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 646,\n                          columnNumber: 35\n                        }, this), userInfo.ids && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Identity Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.ids).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 666,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: key === 'idType' ? value.toUpperCase() : value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 667,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 665,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 35\n                        }, this), userInfo.product && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Product Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 677,\n                            columnNumber: 37\n                          }, this), Object.entries(userInfo.product).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: [key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 681,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 682,\n                              columnNumber: 43\n                            }, this)]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 680,\n                            columnNumber: 41\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 676,\n                          columnNumber: 35\n                        }, this), userInfo.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-subgroup\",\n                          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                            children: \"Submission Details\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 692,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-item\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-name\",\n                              children: \"Submission Timestamp:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 694,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"variable-value\",\n                              children: new Date(userInfo.submissionTimestamp).toLocaleString()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 695,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 693,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 691,\n                          columnNumber: 35\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 624,\n                        columnNumber: 31\n                      }, this);\n                    } catch (e) {\n                      // If parsing fails, show as regular variable\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"variable-name\",\n                          children: [variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 705,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"variable-value\",\n                          children: variable.value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 706,\n                          columnNumber: 33\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  } else {\n                    // Regular variables\n                    let displayValue = variable.value;\n\n                    // Clean up JSON strings\n                    if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\n                      displayValue = displayValue.slice(1, -1);\n                    }\n\n                    // Parse arrays if they're JSON strings\n                    if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\n                      try {\n                        const steps = JSON.parse(displayValue);\n                        displayValue = steps.join(', ');\n                      } catch (e) {\n                        // Keep original value if parsing fails\n                      }\n                    }\n                    const fieldKey = `${selectedTask.id}_${variable.name}`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"variable-item editable-variable\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"variable-name\",\n                        children: [variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 733,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variable-edit-container\",\n                        children: [variable.name === 'pep' || variable.name === 'riskCleared' ? /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: displayValue === 'true' || displayValue === true ? 'true' : 'false',\n                          onChange: e => handleFieldChange(selectedTask.id, variable.name, e.target.value),\n                          className: \"variable-edit-select\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"true\",\n                            children: \"Yes\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 742,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"false\",\n                            children: \"No\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 743,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 737,\n                          columnNumber: 35\n                        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          value: displayValue || '',\n                          onChange: e => handleFieldChange(selectedTask.id, variable.name, e.target.value),\n                          className: \"variable-edit-input\",\n                          placeholder: displayValue === 'null' ? 'Not set' : 'Enter value...'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 746,\n                          columnNumber: 35\n                        }, this), Object.keys(pendingChanges).some(key => pendingChanges[key].taskId === selectedTask.id && pendingChanges[key].fieldName === variable.name) && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"pending-change-indicator\",\n                          children: \"\\u25CF\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 755,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 735,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 29\n                    }, this);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), (!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Customer Personal Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: (() => {\n                  const customerData = getEnhancedCustomerData(selectedTask);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [customerData.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Full Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 776,\n                        columnNumber: 36\n                      }, this), \" \", customerData.fullName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 776,\n                      columnNumber: 31\n                    }, this), customerData.dob && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Date of Birth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 779,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.dob).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 31\n                    }, this), customerData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 782,\n                        columnNumber: 36\n                      }, this), \" \", customerData.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 31\n                    }, this), customerData.mobile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Mobile:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 785,\n                        columnNumber: 36\n                      }, this), \" \", customerData.mobile]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 785,\n                      columnNumber: 31\n                    }, this), customerData.occupation && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Occupation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 788,\n                        columnNumber: 36\n                      }, this), \" \", customerData.occupation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 788,\n                      columnNumber: 31\n                    }, this), customerData.income_band && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Income Band:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 791,\n                        columnNumber: 36\n                      }, this), \" \", customerData.income_band]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 791,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"PEP Status:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 793,\n                        columnNumber: 34\n                      }, this), \" \", customerData.pep ? 'Yes' : 'No']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 29\n                    }, this), customerData.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Submission Date:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.submissionTimestamp).toLocaleString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 19\n            }, this), selectedTask.documents && selectedTask.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Documents (\", selectedTask.documents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"documents-list\",\n                children: selectedTask.documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"document-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doc-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-name\",\n                      children: doc.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-type\",\n                      children: doc.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Current Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus)\n                    },\n                    children: (selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.creationDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 21\n                }, this), selectedTask.processInstanceKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Instance:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processInstanceKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 23\n                }, this), selectedTask.taskDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.taskDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 23\n                }, this), selectedTask.processDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 23\n                }, this), selectedTask.processName && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 861,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 23\n                }, this), selectedTask.priority && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.priority]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 23\n                }, this), selectedTask.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Due Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.dueDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 23\n                }, this), selectedTask.followUpDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Follow Up Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.followUpDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 23\n                }, this), selectedTask.formKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Form Key:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.formKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 23\n                }, this), selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Groups:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateGroups.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 23\n                }, this), selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateUsers.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 23\n                }, this), selectedTask.creationTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.creationTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 23\n                }, this), selectedTask.completionTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completion Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.completionTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [(() => {\n                const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n                return taskPendingChanges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pending-changes-summary\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pending-changes-text\",\n                    children: [\"\\uD83D\\uDCDD \", taskPendingChanges.length, \" unsaved change\", taskPendingChanges.length > 1 ? 's' : '', \" - will be saved when you approve or reject\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 23\n                }, this);\n              })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-approve\",\n                  onClick: () => handleTaskAction('approve'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✓ Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-reject\",\n                  onClick: () => handleTaskAction('reject'),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : '✗ Reject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a task from the list to view its details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), showAssignModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowAssignModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Assign Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAssignModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Assign task \\\"\", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskName, \"\\\" to:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"assignee-input\",\n            placeholder: \"Enter assignee name\",\n            value: assigneeName,\n            onChange: e => setAssigneeName(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAssignConfirm();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowAssignModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAssignConfirm,\n            disabled: !assigneeName.trim() || loading,\n            children: loading ? 'Assigning...' : 'Assign'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenTask, \"ei3fhjmY/sw6C9+plu4648siJqA=\");\n_c = OpenTask;\nexport default OpenTask;\nvar _c;\n$RefreshReg$(_c, \"OpenTask\");","map":{"version":3,"names":["React","useState","useEffect","tasklistApi","jsxDEV","_jsxDEV","Fragment","_Fragment","OpenTask","_s","openTasks","setOpenTasks","selectedTask","setSelectedTask","loading","setLoading","alerts","setAlerts","taskVariables","setTaskVariables","showAssignModal","setShowAssignModal","assigneeName","setAssigneeName","pendingChanges","setPendingChanges","loadOpenTasks","console","log","tasks","getOpenTasks","openTasksData","map","task","_variables$customerNa","_variables$fullName","_variables$fullName2","_variables$customerNa2","_variables$dob","_variables$mobile","_variables$email","_variables$occupation","_variables$income_ban","_variables$pep","_variables$address","_variables$product","_variables$ids","_variables$income_ban2","_variables$pep2","variables","id","taskName","name","taskDefinitionId","creationDate","creationTime","Date","toLocaleDateString","completionTime","taskStatus","assignee","assignedTo","isAssigned","processInstanceKey","processDefinitionId","processName","state","taskState","priority","dueDate","followUpDate","formKey","candidateGroups","candidateUsers","sortValues","isFirst","customerName","value","fullName","customerData","dob","mobile","email","occupation","income_band","pep","address","product","ids","completedSteps","calculateCompletedStepsFromVariables","submissionDate","toISOString","split","incomeBand","error","addAlert","interval","setInterval","clearInterval","getTaskStatus","workflowStatus","status","calculateCompletedSteps","app","_app$customer","_app$customer2","_app$customer3","_app$address","_app$address2","_app$address3","_app$product","steps","customer","line1","city","documents","length","desired_account","_variables$fullName3","_variables$email2","_variables$mobile2","_variables$address2","_variables$documents","_variables$product2","message","type","alert","now","prev","setTimeout","filter","a","loadTaskVariables","taskId","searchTaskVariables","handleTaskSelection","currentTaskChanges","Object","values","change","newChanges","keys","forEach","key","getEnhancedCustomerData","_variables$userInfo","_variables$fullName4","_variables$customerNa3","_variables$dob2","_variables$email3","_variables$mobile3","_variables$occupation2","_variables$income_ban3","_variables$pep3","_variables$address3","_variables$address3$v","_task$customerData$ad","_variables$address4","_variables$address4$v","_task$customerData$ad2","_variables$address5","_variables$address5$v","_task$customerData$ad3","_variables$address6","_variables$address6$v","_task$customerData$ad4","_variables$address7","_variables$address7$v","_task$customerData$ad5","_variables$address8","_variables$address8$v","_task$customerData$ad6","_variables$product3","_variables$product3$v","_task$customerData$pr","_variables$product4","_variables$product4$v","_task$customerData$pr2","_variables$ids2","_variables$ids2$value","_task$customerData$id","_variables$ids3","_variables$ids3$value","_task$customerData$id2","userInfo","undefined","line2","pin","country","expected_mab_range","idType","idNumber","submissionTimestamp","handleTaskAction","action","taskPendingChanges","push","fieldName","newValue","completedTask","completeTask","showAssignTaskModal","handleTaskAssignment","updatedTask","assignTask","unassignTask","newAssignedTo","stack","response","errorMessage","handleAssignConfirm","trim","getStatusColor","root","document","documentElement","getVar","varName","getComputedStyle","getPropertyValue","toLowerCase","handleFieldChange","changeKey","variable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","fieldsToHide","includes","index","JSON","parse","entries","replace","str","toUpperCase","toLocaleString","e","displayValue","startsWith","endsWith","slice","join","fieldKey","onChange","target","placeholder","some","doc","style","backgroundColor","stopPropagation","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/Downloads/customer/customer-onboarding-ui/src/components/OpenTask/OpenTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './OpenTask.css';\r\nimport tasklistApi from '../../services/tasklistApi';\r\n\r\nconst OpenTask = () => {\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [taskVariables, setTaskVariables] = useState({});\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [assigneeName, setAssigneeName] = useState('');\r\n\r\n  const [pendingChanges, setPendingChanges] = useState({}); // Store pending field changes\r\n\r\n  // Load open tasks from tasklist backend\r\n  useEffect(() => {\r\n    const loadOpenTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log('Loading tasks from tasklist backend...');\r\n        \r\n        // Get open tasks from tasklist API\r\n        const tasks = await tasklistApi.getOpenTasks();\r\n        console.log('Tasks from tasklist API:', tasks);\r\n        \r\n        // Transform tasks to match the expected format\r\n        const openTasksData = tasks.map(task => {\r\n          // Get task variables for customer data\r\n          const variables = task.variables || {};\r\n          \r\n          return {\r\n            id: task.id,\r\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\r\n            creationDate: task.creationTime ? \r\n              new Date(task.creationTime).toLocaleDateString() : \r\n              new Date().toLocaleDateString(),\r\n            creationTime: task.creationTime,\r\n            completionTime: task.completionTime,\r\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\r\n            assignedTo: task.assignee || null,\r\n            isAssigned: !!task.assignee,\r\n            processInstanceKey: task.processInstanceKey,\r\n            processDefinitionId: task.processDefinitionId,\r\n            processName: task.processName,\r\n            taskDefinitionId: task.taskDefinitionId,\r\n            state: task.state || task.taskState,\r\n            priority: task.priority,\r\n            dueDate: task.dueDate,\r\n            followUpDate: task.followUpDate,\r\n            formKey: task.formKey,\r\n            candidateGroups: task.candidateGroups || [],\r\n            candidateUsers: task.candidateUsers || [],\r\n            sortValues: task.sortValues,\r\n            isFirst: task.isFirst,\r\n            // Customer data from task variables\r\n            customerName: variables.customerName?.value || \r\n                         variables.fullName?.value || \r\n                         'Unknown Customer',\r\n            customerData: {\r\n              fullName: variables.fullName?.value || variables.customerName?.value || '',\r\n              dob: variables.dob?.value || '',\r\n              mobile: variables.mobile?.value || '',\r\n              email: variables.email?.value || '',\r\n              occupation: variables.occupation?.value || '',\r\n              income_band: variables.income_band?.value || '',\r\n              pep: variables.pep?.value || false,\r\n              address: variables.address?.value || {},\r\n              product: variables.product?.value || {},\r\n              ids: variables.ids?.value || {}\r\n            },\r\n            // Additional task metadata\r\n            completedSteps: calculateCompletedStepsFromVariables(variables),\r\n            submissionDate: task.creationTime ? \r\n              new Date(task.creationTime).toISOString().split('T')[0] : \r\n              new Date().toISOString().split('T')[0],\r\n            incomeBand: variables.income_band?.value || 'Not specified',\r\n            pep: variables.pep?.value || false\r\n          };\r\n        });\r\n        \r\n        setOpenTasks(openTasksData);\r\n        console.log('Processed open tasks:', openTasksData);\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading open tasks from tasklist:', error);\r\n        addAlert('Error loading tasks from tasklist backend', 'error');\r\n        setOpenTasks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOpenTasks();\r\n    \r\n    // Set up polling to refresh tasks periodically\r\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get task status based on workflow and application status\r\n  const getTaskStatus = (workflowStatus, status) => {\r\n    if (workflowStatus === 'manual_review') return 'Manual Review';\r\n    if (status === 'pending_review') return 'Pending Review';\r\n    if (workflowStatus === 'in_progress') return 'In Progress';\r\n    if (status === 'submitted') return 'Submitted';\r\n    return 'Unknown';\r\n  };\r\n\r\n  // Calculate completed steps based on available data\r\n  const calculateCompletedSteps = (app) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (app.customer?.fullName && app.customer?.email && app.customer?.mobile) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    if (app.address?.line1 && app.address?.city && app.address?.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    if (app.documents && app.documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    if (app.product?.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  // Calculate completed steps from task variables\r\n  const calculateCompletedStepsFromVariables = (variables) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (variables.fullName?.value && variables.email?.value && variables.mobile?.value) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    const address = variables.address?.value || {};\r\n    if (address.line1 && address.city && address.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    const documents = variables.documents?.value || [];\r\n    if (documents && documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    const product = variables.product?.value || {};\r\n    if (product.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  const addAlert = (message, type = 'info') => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts(prev => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Load task variables when a task is selected\r\n  const loadTaskVariables = async (taskId) => {\r\n    try {\r\n      console.log('Loading variables for task from backend port 5174:', taskId);\r\n      const variables = await tasklistApi.searchTaskVariables(taskId);\r\n      console.log('Task variables loaded from backend:', variables);\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: variables\r\n      }));\r\n      \r\n      // Show success message when variables are loaded\r\n      addAlert('Task variables loaded successfully', 'success');\r\n    } catch (error) {\r\n      console.error('Error loading task variables from backend:', error);\r\n      addAlert('Failed to load task variables from backend', 'error');\r\n    }\r\n  };\r\n\r\n  // Handle task selection and load its variables\r\n  const handleTaskSelection = (task) => {\r\n    // Clear pending changes when switching tasks\r\n    if (selectedTask && selectedTask.id !== task?.id) {\r\n      const currentTaskChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n      if (currentTaskChanges.length > 0) {\r\n        console.log(`Clearing ${currentTaskChanges.length} pending changes for previous task`);\r\n        setPendingChanges(prev => {\r\n          const newChanges = { ...prev };\r\n          Object.keys(newChanges).forEach(key => {\r\n            if (newChanges[key].taskId === selectedTask.id) {\r\n              delete newChanges[key];\r\n            }\r\n          });\r\n          return newChanges;\r\n        });\r\n      }\r\n    }\r\n    \r\n    setSelectedTask(task);\r\n    if (task) {\r\n      // Always load fresh variables from backend when task is selected\r\n      console.log('Task selected, loading variables from backend port 5174...');\r\n      loadTaskVariables(task.id);\r\n    }\r\n  };\r\n\r\n  // Get enhanced customer data combining task data and loaded variables\r\n  const getEnhancedCustomerData = (task) => {\r\n    const variables = taskVariables[task.id] || {};\r\n    \r\n    // Check if userInfo exists in variables\r\n    const userInfo = variables.userInfo?.value || {};\r\n    const customer = userInfo.customer || {};\r\n    const address = userInfo.address || {};\r\n    const ids = userInfo.ids || {};\r\n    const product = userInfo.product || {};\r\n    \r\n    return {\r\n      // Customer basic info - prioritize userInfo data\r\n      fullName: customer.fullName || variables.fullName?.value || variables.customerName?.value || task.customerData.fullName || '',\r\n      dob: customer.dob || variables.dob?.value || task.customerData.dob || '',\r\n      email: customer.email || variables.email?.value || task.customerData.email || '',\r\n      mobile: customer.mobile || variables.mobile?.value || task.customerData.mobile || '',\r\n      occupation: customer.occupation || variables.occupation?.value || task.customerData.occupation || '',\r\n      income_band: customer.income_band || variables.income_band?.value || task.customerData.income_band || '',\r\n      pep: customer.pep !== undefined ? customer.pep : (variables.pep?.value || task.customerData.pep || false),\r\n      \r\n      // Address info - prioritize userInfo data\r\n      address: {\r\n        line1: address.line1 || variables.address?.value?.line1 || task.customerData.address?.line1 || '',\r\n        line2: address.line2 || variables.address?.value?.line2 || task.customerData.address?.line2 || '',\r\n        city: address.city || variables.address?.value?.city || task.customerData.address?.city || '',\r\n        state: address.state || variables.address?.value?.state || task.customerData.address?.state || '',\r\n        pin: address.pin || variables.address?.value?.pin || task.customerData.address?.pin || '',\r\n        country: address.country || variables.address?.value?.country || task.customerData.address?.country || ''\r\n      },\r\n      \r\n      // Product info - prioritize userInfo data\r\n      product: {\r\n        desired_account: product.desired_account || variables.product?.value?.desired_account || task.customerData.product?.desired_account || '',\r\n        expected_mab_range: product.expected_mab_range || variables.product?.value?.expected_mab_range || task.customerData.product?.expected_mab_range || ''\r\n      },\r\n      \r\n      // ID info - prioritize userInfo data\r\n      ids: {\r\n        idType: ids.idType || variables.ids?.value?.idType || task.customerData.ids?.idType || '',\r\n        idNumber: ids.idNumber || variables.ids?.value?.idNumber || task.customerData.ids?.idNumber || ''\r\n      },\r\n      \r\n      // Additional userInfo fields\r\n      submissionTimestamp: userInfo.submissionTimestamp || ''\r\n    };\r\n  };\r\n\r\n  const handleTaskAction = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log(`${action}ing task:`, selectedTask.id);\r\n\r\n      // Prepare variables to pass when completing the task\r\n      const variables = [\r\n        {\r\n          name: 'reviewDecision',\r\n          value: action === 'approve' ? 'approved' : 'rejected'\r\n        },\r\n        {\r\n          name: 'reviewDate',\r\n          value: new Date().toISOString()\r\n        },\r\n        {\r\n          name: 'reviewer',\r\n          value: 'Admin User'\r\n        }\r\n      ];\r\n\r\n      // Add any pending field changes to the variables\r\n      const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n      console.log('Pending changes for task:', taskPendingChanges);\r\n      \r\n      taskPendingChanges.forEach(change => {\r\n        variables.push({\r\n          name: change.fieldName,\r\n          value: change.newValue\r\n        });\r\n      });\r\n\r\n      console.log('Final variables to send with task completion:', variables);\r\n\r\n      // Complete the task with the decision\r\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\r\n      console.log('Task completion result:', completedTask);\r\n\r\n      // Update local state - remove the task from open tasks since it's now completed\r\n      setOpenTasks(prev => prev.filter(task => task.id !== selectedTask.id));\r\n      \r\n      // Clear pending changes for this task\r\n      setPendingChanges(prev => {\r\n        const newChanges = { ...prev };\r\n        Object.keys(newChanges).forEach(key => {\r\n          if (newChanges[key].taskId === selectedTask.id) {\r\n            delete newChanges[key];\r\n          }\r\n        });\r\n        return newChanges;\r\n      });\r\n      \r\n      addAlert(\r\n        `Task ${action === 'approve' ? 'approved' : 'rejected'} successfully. All field changes have been saved.`, \r\n        'success'\r\n      );\r\n\r\n      // Clear selection since the task is no longer in the list\r\n      setSelectedTask(null);\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task action:', error);\r\n      addAlert(`Failed to ${action} task: ${error.message}`, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Show assign modal\r\n  const showAssignTaskModal = () => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n    setAssigneeName('');\r\n    setShowAssignModal(true);\r\n  };\r\n\r\n  // Handle task assignment with assignee name\r\n  const handleTaskAssignment = async (action, assigneeName = null) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    if (action === 'assign' && !assigneeName) {\r\n      addAlert('Please enter assignee name', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      let updatedTask;\r\n\r\n      if (action === 'assign') {\r\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\r\n        console.log('Making API call to assign task...');\r\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\r\n        console.log('Assignment API call completed:', updatedTask);\r\n      } else {\r\n        console.log('Unassigning task:', selectedTask.id);\r\n        console.log('Making API call to unassign task...');\r\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\r\n        console.log('Unassignment API call completed:', updatedTask);\r\n      }\r\n\r\n      console.log('Task assignment result:', updatedTask);\r\n\r\n      // Update local state\r\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\r\n      setOpenTasks(prev => prev.map(task => \r\n        task.id === selectedTask.id \r\n          ? { \r\n              ...task, \r\n              assignedTo: newAssignedTo,\r\n              isAssigned: !!newAssignedTo,\r\n              taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n            }\r\n          : task\r\n      ));\r\n\r\n      // Update selected task\r\n      setSelectedTask(prev => ({\r\n        ...prev,\r\n        assignedTo: newAssignedTo,\r\n        isAssigned: !!newAssignedTo,\r\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n      }));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Close modal if it was open\r\n      setShowAssignModal(false);\r\n      setAssigneeName('');\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task assignment:', error);\r\n      console.error('Error details:', {\r\n        message: error.message,\r\n        stack: error.stack,\r\n        response: error.response\r\n      });\r\n      \r\n      let errorMessage = `Failed to ${action} task`;\r\n      if (error.message) {\r\n        errorMessage += `: ${error.message}`;\r\n      }\r\n      \r\n      addAlert(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle assign modal confirmation\r\n  const handleAssignConfirm = () => {\r\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\r\n    console.log('Assignee name:', assigneeName);\r\n    console.log('Assignee name trimmed:', assigneeName.trim());\r\n    console.log('Selected task:', selectedTask);\r\n    \r\n    if (assigneeName.trim()) {\r\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\r\n      handleTaskAssignment('assign', assigneeName.trim());\r\n    } else {\r\n      console.log('No assignee name provided');\r\n      addAlert('Please enter assignee name', 'error');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getStatusColor = (status) => {\r\n    // Using CSS variables for consistent theming\r\n    const root = document.documentElement;\r\n    const getVar = (varName) => getComputedStyle(root).getPropertyValue(varName).trim();\r\n    \r\n    switch (status?.toLowerCase()) {\r\n      case 'created': return getVar('--color-info');\r\n      case 'assigned': return getVar('--color-warning');\r\n      case 'unassigned': return getVar('--color-warning-alt');\r\n      case 'completed': return getVar('--color-success');\r\n      case 'canceled': return getVar('--color-danger');\r\n      // Legacy statuses for backward compatibility\r\n      case 'submitted': return getVar('--color-info');\r\n      case 'in_progress': return getVar('--color-warning');\r\n      case 'pending_review': return getVar('--color-warning-alt');\r\n      case 'manual_review': return getVar('--color-danger');\r\n      default: return getVar('--color-secondary');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Handle field value change - store locally without saving\r\n  const handleFieldChange = (taskId, fieldName, newValue) => {\r\n    // Store the change in pending changes\r\n    const changeKey = `${taskId}_${fieldName}`;\r\n    setPendingChanges(prev => ({\r\n      ...prev,\r\n      [changeKey]: { taskId, fieldName, newValue }\r\n    }));\r\n\r\n    // Update the task variables immediately for UI responsiveness\r\n    setTaskVariables(prev => ({\r\n      ...prev,\r\n      [taskId]: prev[taskId].map(variable => \r\n        variable.name === fieldName \r\n          ? { ...variable, value: newValue }\r\n          : variable\r\n      )\r\n    }));\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"open-task-container\">\r\n      <h1 className=\"page-title\">All open tasks</h1>\r\n\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"task-layout\">\r\n        {/* Tasks List */}\r\n        <div className=\"tasks-panel panel\">\r\n          <div className=\"tasks-header flex-header\">\r\n            <h2>All open tasks</h2>\r\n            <div className=\"sort-icon\">⇅</div>\r\n          </div>\r\n          \r\n          <div className=\"tasks-list\">\r\n            {loading ? (\r\n              <div className=\"loading-tasks empty-state\">\r\n                <div className=\"loading-spinner\">⏳</div>\r\n                <h3>Loading tasks...</h3>\r\n                <p>Please wait while we fetch your open tasks.</p>\r\n              </div>\r\n            ) : openTasks.length === 0 ? (\r\n              <div className=\"no-tasks empty-state\">\r\n                <div className=\"no-tasks-icon\">🔍</div>\r\n                <h3>No tasks found</h3>\r\n                <p>There are no tasks matching your filter criteria.</p>\r\n              </div>\r\n            ) : (\r\n              openTasks.map(task => (\r\n                <div \r\n                  key={task.id} \r\n                  className={`task-card ${selectedTask?.id === task.id ? 'selected' : ''}`}\r\n                  onClick={() => handleTaskSelection(task)}\r\n                >\r\n                  <div className=\"task-header\">\r\n                    <h3>{task.taskName}</h3>\r\n                  </div>\r\n                  <div className=\"task-details\">\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Creation Date:</span>\r\n                      <span className=\"detail-value\">{task.creationDate}</span>\r\n                    </div>\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Task Status:</span>\r\n                      <span className=\"detail-value\">{task.taskStatus}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Details Panel */}\r\n        <div className=\"task-details-panel panel\">\r\n          {selectedTask ? (\r\n            <>\r\n              <div className=\"task-details-header flex-header\">\r\n                <h2>Task Details: </h2>\r\n\r\n                {/* <h2>Task Details: {selectedTask.customerName}</h2> */}\r\n                <div className=\"task-assignment-controls\">\r\n                  {selectedTask.isAssigned ? (\r\n                    <>\r\n                      <span className=\"assigned-to\">Assigned to: {selectedTask.assignedTo}</span>\r\n                      <button \r\n                        className=\"btn btn-secondary unassign-btn btn-base\"\r\n                        onClick={() => handleTaskAssignment('unassign')}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Unassigning...' : 'Unassign'}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary assign-btn btn-base\"\r\n                      onClick={showAssignTaskModal}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Assigning...' : 'Assign Task'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"details-sections\">\r\n                {/* Loading message while variables are being fetched */}\r\n                {!taskVariables[selectedTask.id] && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Loading Task Information...</h3>\r\n                    <div className=\"loading-message\">\r\n                      <p>Fetching task variables from backend...</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Variables - All Key-Value Pairs */}\r\n                {taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && (\r\n                  <div className=\"details-section task-variables-section\">\r\n                    <h3>Task Information</h3>\r\n                    <div className=\"variables-grid\">\r\n                      {taskVariables[selectedTask.id]\r\n                        .filter(variable => {\r\n                          // Filter out specific fields that should not be displayed\r\n                          const fieldsToHide = [\r\n                            'completedSteps',\r\n                            'documentPath',\r\n                            'currentStep',\r\n                            'nextStep',\r\n                            'pan',\r\n                            'status', 'Status'\r\n                          ];\r\n                          return !fieldsToHide.includes(variable.name);\r\n                        })\r\n                        .map((variable, index) => {\r\n                        // Parse userInfo if it's the userInfo variable\r\n                        if (variable.name === 'userInfo') {\r\n                          try {\r\n                            const userInfo = JSON.parse(variable.value);\r\n                            return (\r\n                              <div key={index} className=\"variable-group\">\r\n                                <h4 className=\"variable-group-title\">Customer Information</h4>\r\n                                \r\n                                {/* Customer Details */}\r\n                                {userInfo.customer && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Personal Details</h5>\r\n                                    {Object.entries(userInfo.customer).map(([key, value]) => (\r\n                                      <div key={key} className=\"variable-item\">\r\n                                        <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                        <span className=\"variable-value\">\r\n                                          {key === 'dob' && value ? new Date(value).toLocaleDateString() : \r\n                                           key === 'pep' ? (value ? 'Yes' : 'No') :\r\n                                           value || 'Not provided'}\r\n                                        </span>\r\n                                      </div>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Address Details */}\r\n                                {userInfo.address && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Address Details</h5>\r\n                                    {Object.entries(userInfo.address).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Identity Details */}\r\n                                {userInfo.ids && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Identity Details</h5>\r\n                                    {Object.entries(userInfo.ids).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{key === 'idType' ? value.toUpperCase() : value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Product Details */}\r\n                                {userInfo.product && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Product Details</h5>\r\n                                    {Object.entries(userInfo.product).map(([key, value]) => (\r\n                                      value && (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">{value}</span>\r\n                                        </div>\r\n                                      )\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* Submission Timestamp */}\r\n                                {userInfo.submissionTimestamp && (\r\n                                  <div className=\"variable-subgroup\">\r\n                                    <h5>Submission Details</h5>\r\n                                    <div className=\"variable-item\">\r\n                                      <span className=\"variable-name\">Submission Timestamp:</span>\r\n                                      <span className=\"variable-value\">{new Date(userInfo.submissionTimestamp).toLocaleString()}</span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          } catch (e) {\r\n                            // If parsing fails, show as regular variable\r\n                            return (\r\n                              <div key={index} className=\"variable-item\">\r\n                                <span className=\"variable-name\">{variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                <span className=\"variable-value\">{variable.value}</span>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        } else {\r\n                          // Regular variables\r\n                          let displayValue = variable.value;\r\n                          \r\n                          // Clean up JSON strings\r\n                          if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\r\n                            displayValue = displayValue.slice(1, -1);\r\n                          }\r\n                          \r\n                          // Parse arrays if they're JSON strings\r\n                          if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\r\n                            try {\r\n                              const steps = JSON.parse(displayValue);\r\n                              displayValue = steps.join(', ');\r\n                            } catch (e) {\r\n                              // Keep original value if parsing fails\r\n                            }\r\n                          }\r\n                          \r\n                          const fieldKey = `${selectedTask.id}_${variable.name}`;\r\n                          \r\n                          return (\r\n                            <div key={index} className=\"variable-item editable-variable\">\r\n                              <span className=\"variable-name\">{variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                              \r\n                              <div className=\"variable-edit-container\">\r\n                                {variable.name === 'pep' || variable.name === 'riskCleared' ? (\r\n                                  <select\r\n                                    value={displayValue === 'true' || displayValue === true ? 'true' : 'false'}\r\n                                    onChange={(e) => handleFieldChange(selectedTask.id, variable.name, e.target.value)}\r\n                                    className=\"variable-edit-select\"\r\n                                  >\r\n                                    <option value=\"true\">Yes</option>\r\n                                    <option value=\"false\">No</option>\r\n                                  </select>\r\n                                ) : (\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    value={displayValue || ''}\r\n                                    onChange={(e) => handleFieldChange(selectedTask.id, variable.name, e.target.value)}\r\n                                    className=\"variable-edit-input\"\r\n                                    placeholder={displayValue === 'null' ? 'Not set' : 'Enter value...'}\r\n                                  />\r\n                                )}\r\n                                {Object.keys(pendingChanges).some(key => pendingChanges[key].taskId === selectedTask.id && pendingChanges[key].fieldName === variable.name) && (\r\n                                  <span className=\"pending-change-indicator\">●</span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Customer Personal Information - Fallback if no variables loaded */}\r\n                {(!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Customer Personal Information</h3>\r\n                    <div className=\"info-grid\">\r\n                      {(() => {\r\n                        const customerData = getEnhancedCustomerData(selectedTask);\r\n                        return (\r\n                          <>\r\n                            {customerData.fullName && (\r\n                              <div><strong>Full Name:</strong> {customerData.fullName}</div>\r\n                            )}\r\n                            {customerData.dob && (\r\n                              <div><strong>Date of Birth:</strong> {new Date(customerData.dob).toLocaleDateString()}</div>\r\n                            )}\r\n                            {customerData.email && (\r\n                              <div><strong>Email:</strong> {customerData.email}</div>\r\n                            )}\r\n                            {customerData.mobile && (\r\n                              <div><strong>Mobile:</strong> {customerData.mobile}</div>\r\n                            )}\r\n                            {customerData.occupation && (\r\n                              <div><strong>Occupation:</strong> {customerData.occupation}</div>\r\n                            )}\r\n                            {customerData.income_band && (\r\n                              <div><strong>Income Band:</strong> {customerData.income_band}</div>\r\n                            )}\r\n                            <div><strong>PEP Status:</strong> {customerData.pep ? 'Yes' : 'No'}</div>\r\n                            {customerData.submissionTimestamp && (\r\n                              <div><strong>Submission Date:</strong> {new Date(customerData.submissionTimestamp).toLocaleString()}</div>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n                {/* Documents */}\r\n                {selectedTask.documents && selectedTask.documents.length > 0 && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Documents ({selectedTask.documents.length})</h3>\r\n                    <div className=\"documents-list\">\r\n                      {selectedTask.documents.map((doc, index) => (\r\n                        <div key={index} className=\"document-item\">\r\n                          <div className=\"doc-info\">\r\n                            <div className=\"doc-name\">{doc.name}</div>\r\n                            <div className=\"doc-type\">{doc.type}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Status */}\r\n                <div className=\"details-section\">\r\n                  <h3>Task Status</h3>\r\n                  <div className=\"status-info\">\r\n                    <div className=\"status-item\">\r\n                      <strong>Current Status:</strong>\r\n                      <span \r\n                        className=\"status-badge\" \r\n                        style={{ backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus) }}\r\n                      >\r\n                        {(selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Creation Date:</strong> {selectedTask.creationDate}\r\n                    </div>\r\n                    <div className=\"status-item\">\r\n                      <strong>Task ID:</strong> {selectedTask.id}\r\n                    </div>\r\n                    {selectedTask.processInstanceKey && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Instance:</strong> {selectedTask.processInstanceKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.taskDefinitionId && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Task Definition:</strong> {selectedTask.taskDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processDefinitionId && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Definition:</strong> {selectedTask.processDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processName && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Process Name:</strong> {selectedTask.processName}\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"status-item\">\r\n                      <strong>Completed Steps:</strong> {selectedTask.completedSteps}\r\n                    </div> */}\r\n                    {selectedTask.priority && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Priority:</strong> {selectedTask.priority}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.dueDate && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Due Date:</strong> {new Date(selectedTask.dueDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.followUpDate && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Follow Up Date:</strong> {new Date(selectedTask.followUpDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.formKey && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Form Key:</strong> {selectedTask.formKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Candidate Groups:</strong> {selectedTask.candidateGroups.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Candidate Users:</strong> {selectedTask.candidateUsers.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.creationTime && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Creation Time:</strong> {new Date(selectedTask.creationTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.completionTime && (\r\n                      <div className=\"status-item\">\r\n                        <strong>Completion Time:</strong> {new Date(selectedTask.completionTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* Task Actions */}\r\n                <div className=\"task-actions\">\r\n                  {(() => {\r\n                    const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n                    return taskPendingChanges.length > 0 && (\r\n                      <div className=\"pending-changes-summary\">\r\n                        <span className=\"pending-changes-text\">\r\n                          📝 {taskPendingChanges.length} unsaved change{taskPendingChanges.length > 1 ? 's' : ''} - will be saved when you approve or reject\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                  <div className=\"action-buttons\">\r\n                    <button \r\n                      className=\"btn btn-approve\"\r\n                      onClick={() => handleTaskAction('approve')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✓ Approve'}\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-reject\"\r\n                      onClick={() => handleTaskAction('reject')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Processing...' : '✗ Reject'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-selection empty-state\">\r\n              <h2>Select a Task</h2>\r\n              <p>Choose a task from the list to view its details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assignment Modal */}\r\n      {showAssignModal && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowAssignModal(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h3>Assign Task</h3>\r\n              <button \r\n                className=\"modal-close\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Assign task \"{selectedTask?.taskName}\" to:</p>\r\n              <input\r\n                type=\"text\"\r\n                className=\"assignee-input\"\r\n                placeholder=\"Enter assignee name\"\r\n                value={assigneeName}\r\n                onChange={(e) => setAssigneeName(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleAssignConfirm();\r\n                  }\r\n                }}\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={handleAssignConfirm}\r\n                disabled={!assigneeName.trim() || loading}\r\n              >\r\n                {loading ? 'Assigning...' : 'Assign'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}