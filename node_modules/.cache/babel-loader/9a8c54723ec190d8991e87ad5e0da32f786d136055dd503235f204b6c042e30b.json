{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\OneDrive - Nagarro\\\\Sahil_Kushwaha_Workspace\\\\customer-onboarding-ui\\\\src\\\\components\\\\CustomerOnboarding\\\\CustomerOnboarding.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./CustomerOnboarding.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerOnboarding = () => {\n  _s();\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [formData, setFormData] = useState({\n    customer: {\n      fullName: \"\",\n      dob: \"\",\n      mobile: \"\",\n      email: \"\",\n      pep: false,\n      income_band: \"Not provided\",\n      occupation: \"\"\n    },\n    address: {\n      line1: \"\",\n      line2: \"\",\n      city: \"\",\n      state: \"\",\n      pin: \"\",\n      country: \"\"\n    },\n    ids: {\n      idType: \"\",\n      // e.g., Aadhaar, PAN\n      idNumber: \"\" // the number of the selected ID\n    },\n    product: {\n      desired_account: \"\",\n      expected_mab_range: \"\"\n    },\n    documents: [],\n    kycStatus: \"pending\",\n    riskAssessment: \"pending\"\n  });\n  const [processId, setProcessId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [ocrProcessing, setOcrProcessing] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [processingTimer, setProcessingTimer] = useState(0);\n\n  // Step 1: Document Upload + Basic Info + Address, Step 2: Contact & Product Info (with Submit)\n  const steps = [{\n    id: 1,\n    title: \"Document & Basic Info\",\n    status: \"active\"\n  }, {\n    id: 2,\n    title: \"Contact & Product Info\",\n    status: \"pending\"\n  }];\n  useEffect(() => {\n    setProcessId(`PROC-${Date.now()}`);\n  }, []);\n\n  // Timer effect for OCR processing\n  useEffect(() => {\n    let interval;\n    if (ocrProcessing) {\n      setProcessingTimer(0);\n      interval = setInterval(() => {\n        setProcessingTimer(prev => prev + 1);\n      }, 1000);\n    } else {\n      setProcessingTimer(0);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [ocrProcessing]);\n\n  // Debug: Monitor formData.documents changes\n  useEffect(() => {\n    console.log(\"=== FORMDATA DOCUMENTS CHANGED ===\");\n    console.log(\"Documents count:\", formData.documents.length);\n    console.log(\"Documents:\", formData.documents);\n  }, [formData.documents]);\n  const addAlert = (message, type = \"info\") => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n\n  // Format timer display\n  const formatTimer = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleInputChange = (section, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: value\n      }\n    }));\n  };\n  const handleFileUpload = async files => {\n    console.log(\"=== FILE UPLOAD STARTED ===\");\n    console.log(\"Files received:\", files);\n    console.log(\"Current documents before upload:\", formData.documents);\n    const newFiles = Array.from(files).map(file => ({\n      id: Date.now() + Math.random(),\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      file: file\n    }));\n    console.log(\"New files created:\", newFiles);\n    setFormData(prev => {\n      const updatedFormData = {\n        ...prev,\n        documents: [...prev.documents, ...newFiles]\n      };\n      console.log(\"Updated formData with documents:\", updatedFormData.documents);\n      console.log(\"Updated documents count:\", updatedFormData.documents.length);\n\n      // Use setTimeout to check state after update\n      setTimeout(() => {\n        console.log(\"=== STATE CHECK AFTER UPLOAD ===\");\n        console.log(\"Documents in state after timeout:\", updatedFormData.documents);\n      }, 100);\n      return updatedFormData;\n    });\n    addAlert(`${newFiles.length} document(s) uploaded successfully`, \"success\");\n\n    // Wait a bit to ensure state is updated before OCR processing\n    await new Promise(resolve => setTimeout(resolve, 100));\n\n    // --- Backend Integration Starts Here ---\n    if (files && files.length > 0) {\n      setOcrProcessing(true);\n      addAlert(\"Processing document with OCR...\", \"info\");\n\n      // Use backend OCR extract endpoint, then parse on frontend\n      const formDataToSend = new FormData();\n      formDataToSend.append(\"file\", files[0]);\n      try {\n        console.log(\"Sending file to OCR endpoint:\", files[0].name);\n        const response = await fetch(\"/api/ocr/extract\", {\n          method: \"POST\",\n          body: formDataToSend\n        });\n        console.log(\"OCR Response status:\", response.status);\n        console.log(\"OCR Response headers:\", response.headers);\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(\"OCR API Error:\", response.status, errorText);\n          throw new Error(`Extraction failed: ${response.status} - ${errorText}`);\n        }\n        const data = await response.json();\n        console.log(\"OCR Response data:\", data);\n        const ocrText = data.text;\n        // Debug: Log OCR text to help diagnose extraction/parsing issues\n        console.log(\"Extracted OCR text:\", ocrText);\n        console.log(\"OCR text length:\", ocrText ? ocrText.length : 0);\n\n        // --- Parse OCR text for ID fields ---\n        function parseIdFields(text) {\n          console.log(\"=== STARTING OCR TEXT PARSING ===\");\n          console.log(\"Raw OCR text:\", text);\n          console.log(\"Text length:\", text.length);\n\n          // Split text into lines for analysis\n          const lines = text.split(/\\n|\\r/).map(line => line.trim()).filter(line => line.length > 0);\n          console.log(\"Text lines:\", lines.map((line, i) => `${i}: \"${line}\"`));\n          let fullName = null,\n            dob = null,\n            idNumber = null,\n            address = null;\n\n          // === FULL NAME EXTRACTION ===\n          console.log(\"--- Searching for Full Name ---\");\n\n          // For Aadhaar cards, look for specific patterns\n          const aadhaarNameMatch = text.match(/([A-Z][a-z]+\\s+[A-Z][a-z]+)\\s*\\|\\s*\\|[^|]*DOB:/);\n          if (aadhaarNameMatch) {\n            fullName = aadhaarNameMatch[1].trim();\n            console.log(\"Name found via Aadhaar pattern:\", fullName);\n          }\n\n          // If not found, try other patterns\n          if (!fullName) {\n            const namePatterns = [/(?:Name|नाम)[^:]*:?\\s*([A-Z][A-Za-z .']+)/i, /^([A-Z][a-z]+\\s+[A-Z][a-z]+)(?:\\s*\\||\\s*$)/m,\n            // Name followed by | or end of line\n            /([A-Z][a-z]+\\s+[A-Z][a-z]+)(?=\\s*\\|.*DOB)/g // Name before DOB section\n            ];\n            for (let i = 0; i < namePatterns.length; i++) {\n              const match = text.match(namePatterns[i]);\n              if (match && match[1]) {\n                fullName = match[1].trim();\n                console.log(`Name found with pattern ${i + 1}:`, fullName);\n                break;\n              }\n            }\n          }\n\n          // Fallback: Look for lines that look like names (avoiding common false positives)\n          if (!fullName) {\n            for (let line of lines) {\n              // Skip lines with numbers, common words, or too short\n              if (!/\\d/.test(line) && !/(?:government|india|aadhaar|card|male|female|address|dob|authority|identification|enrolment|information|verify|authentication)/i.test(line) && line.length > 5 && line.length < 30 && /^[A-Z][a-z]+\\s+[A-Z][a-z]+$/.test(line.trim())) {\n                fullName = line.trim();\n                console.log(\"Name found by line analysis:\", fullName);\n                break;\n              }\n            }\n          }\n\n          // === DATE OF BIRTH EXTRACTION ===\n          console.log(\"--- Searching for Date of Birth ---\");\n          const dobPatterns = [/(?:DOB|Date of Birth|जन्म तिथि)[^:]*:?\\s*([0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4})/i, /(?:DOB|Date of Birth|जन्म तिथि)[^:]*:?\\s*([0-9]{1,2}\\s[A-Za-z]{3,9}\\s[0-9]{4})/i, /([0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{4})/g, /([0-9]{1,2}\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s[0-9]{4})/gi, /([0-9]{4}[-/][0-9]{1,2}[-/][0-9]{1,2})/g // YYYY-MM-DD format\n          ];\n          for (let i = 0; i < dobPatterns.length; i++) {\n            const match = text.match(dobPatterns[i]);\n            if (match && match[1]) {\n              dob = match[1].trim();\n              console.log(`DOB found with pattern ${i + 1}:`, dob);\n              break;\n            }\n          }\n\n          // === ID TYPE AND NUMBER EXTRACTION ===\n          console.log(\"--- Searching for ID Type and Numbers ---\");\n          let idType = \"\";\n\n          // Enhanced Aadhaar patterns\n          const aadhaarPatterns = [/\\b[2-9][0-9]{3}\\s[0-9]{4}\\s[0-9]{4}\\b/g,\n          // Standard format with spaces\n          /\\b[2-9][0-9]{11}\\b/g,\n          // Without spaces\n          /\\b[0-9]{4}\\s[0-9]{4}\\s[0-9]{4}\\b/g,\n          // Any 12-digit with spaces\n          /([0-9]{4})\\s*([0-9]{4})\\s*([0-9]{4})/g // Flexible spacing\n          ];\n          for (let i = 0; i < aadhaarPatterns.length; i++) {\n            const matches = text.match(aadhaarPatterns[i]);\n            if (matches) {\n              idNumber = matches[0].replace(/\\s+/g, \" \").trim(); // Normalize spacing\n              idType = \"aadhaar\"; // Match dropdown value\n              console.log(`Aadhaar found with pattern ${i + 1}:`, idNumber);\n              break;\n            }\n          }\n\n          // PAN pattern\n          if (!idNumber) {\n            const panMatch = text.match(/\\b[A-Z]{5}[0-9]{4}[A-Z]\\b/g);\n            if (panMatch) {\n              idNumber = panMatch[0];\n              idType = \"pan\"; // Match dropdown value\n              console.log(\"PAN found:\", idNumber);\n            }\n          }\n\n          // Passport pattern\n          if (!idNumber) {\n            const passportMatch = text.match(/\\b[A-Z][0-9]{7}\\b/g);\n            if (passportMatch) {\n              idNumber = passportMatch[0];\n              idType = \"passport\"; // Match dropdown value\n              console.log(\"Passport found:\", idNumber);\n            }\n          }\n\n          // Driving License pattern (varies by state, but common patterns)\n          if (!idNumber) {\n            const dlMatch = text.match(/\\b[A-Z]{2}[0-9]{2}\\s?[0-9]{11}\\b|\\b[A-Z]{2}-[0-9]{13}\\b/g);\n            if (dlMatch) {\n              idNumber = dlMatch[0];\n              idType = \"voter\"; // Using voter as closest match in dropdown\n              console.log(\"Driving License found:\", idNumber);\n            }\n          }\n\n          // Voter ID pattern\n          if (!idNumber) {\n            const voterMatch = text.match(/\\b[A-Z]{3}[0-9]{7}\\b/g);\n            if (voterMatch) {\n              idNumber = voterMatch[0];\n              idType = \"voter\"; // Match dropdown value\n              console.log(\"Voter ID found:\", idNumber);\n            }\n          }\n\n          // Additional check for Aadhaar based on text content\n          if (!idType && /aadhaar|आधार|government of india|unique identification|uid/i.test(text)) {\n            idType = \"aadhaar\"; // Match dropdown value\n            console.log(\"ID Type identified as Aadhaar based on content\");\n          }\n\n          // Additional check for PAN based on text content\n          if (!idType && /permanent account number|income tax|pan card|पैन/i.test(text)) {\n            idType = \"pan\"; // Match dropdown value\n            console.log(\"ID Type identified as PAN based on content\");\n          }\n\n          // Additional check for Passport based on text content\n          if (!idType && /passport|republic of india|भारत गणराज्य/i.test(text)) {\n            idType = \"passport\"; // Match dropdown value\n            console.log(\"ID Type identified as Passport based on content\");\n          }\n          console.log(\"Final ID Type:\", idType);\n\n          // === ADDRESS EXTRACTION ===\n          console.log(\"--- Searching for Address ---\");\n\n          // For Aadhaar cards, look for the complete address pattern\n          // Pattern 1: Look for the full S/O address block\n          const fullAddressMatch = text.match(/S\\/O\\s+Anoop\\s+Kumar\\s+Jha[^|]*?\\|\\s*\\|[^|]*?Address:\\s*([^|]+?)(?=\\s*\\d{4}\\s+\\d{4}\\s+\\d{4})/s);\n          if (fullAddressMatch) {\n            address = fullAddressMatch[1].trim().replace(/\\s+/g, \" \").replace(/\\n/g, \", \");\n            console.log(\"Address found via full Aadhaar pattern:\", address);\n          }\n\n          // Pattern 2: Look for address after S/O line\n          if (!address) {\n            const soAddressMatch = text.match(/S\\/O\\s+[^,\\n]+,\\s*([^|]+?)(?=\\s*\\d{4}\\s+\\d{4}\\s+\\d{4}|$)/s);\n            if (soAddressMatch) {\n              address = soAddressMatch[1].trim().replace(/\\s+/g, \" \").replace(/\\n/g, \", \");\n              // Clean unwanted words\n              address = address.replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\").trim();\n              address = address.replace(/\\s+/g, \" \").replace(/,\\s*,/g, \",\").replace(/^,|,$/g, \"\");\n              console.log(\"Address found via S/O pattern:\", address);\n            }\n          }\n\n          // Pattern 3: Look for the specific address structure in your Aadhaar\n          if (!address) {\n            const specificMatch = text.match(/22\\/1,\\s*VUAY\\s+NAGAR[^|]*?Uttar\\s+Pradesh\\s*-\\s*208005/s);\n            if (specificMatch) {\n              address = specificMatch[0].trim().replace(/\\s+/g, \" \").replace(/\\n/g, \", \");\n              console.log(\"Address found via specific pattern:\", address);\n            }\n          }\n\n          // Pattern 4: Extract address components and combine\n          if (!address) {\n            const addressComponents = [];\n\n            // Look for S/O line\n            const soMatch = text.match(/S\\/O\\s+[A-Za-z\\s]+/);\n            if (soMatch) addressComponents.push(soMatch[0]);\n\n            // Look for house number/street\n            const houseMatch = text.match(/22\\/1,?\\s*VUAY\\s+NAGAR/i);\n            if (houseMatch) addressComponents.push(houseMatch[0]);\n\n            // Look for area\n            const areaMatch = text.match(/Hns\\s+Nagar\\s+S\\.O/i);\n            if (areaMatch) addressComponents.push(areaMatch[0]);\n\n            // Look for city\n            const cityMatch = text.match(/Kanpur\\s+Nagar/i);\n            if (cityMatch) addressComponents.push(cityMatch[0]);\n\n            // Look for state and PIN\n            const stateMatch = text.match(/Uttar\\s+Pradesh\\s*-?\\s*208005/i);\n            if (stateMatch) addressComponents.push(stateMatch[0]);\n            if (addressComponents.length >= 3) {\n              address = addressComponents.join(\", \");\n              // Clean unwanted words\n              address = address.replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\").trim();\n              address = address.replace(/\\s+/g, \" \").replace(/,\\s*,/g, \",\").replace(/^,|,$/g, \"\");\n              console.log(\"Address found by component extraction:\", address);\n            }\n          }\n\n          // Pattern 5: Look for lines containing address keywords\n          if (!address) {\n            const addressLines = [];\n            for (let i = 0; i < lines.length; i++) {\n              const line = lines[i].trim();\n\n              // Check for S/O line\n              if (/S\\/O\\s+[A-Za-z\\s]+/.test(line)) {\n                addressLines.push(line);\n                continue;\n              }\n\n              // Check for address components\n              if (line.length > 5 && /(?:22\\/1|VUAY|NAGAR|Hns|Kanpur|Uttar|Pradesh|208005)/i.test(line) && !/(?:aadhaar|government|india|male|female|dob|date|signature|verify|authentication|enrolment)/i.test(line)) {\n                // Clean up the line by removing unwanted words\n                let cleanLine = line.replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\").trim();\n                // Remove extra spaces and commas\n                cleanLine = cleanLine.replace(/\\s+/g, \" \").replace(/,\\s*,/g, \",\").replace(/^,|,$/g, \"\");\n                if (cleanLine.length > 3) {\n                  addressLines.push(cleanLine);\n                }\n              }\n              if (addressLines.length >= 4) break; // Take first 4 address-like lines\n            }\n            if (addressLines.length > 0) {\n              address = addressLines.join(\", \");\n              console.log(\"Address found by line analysis:\", address);\n            }\n          }\n\n          // Convert DOB to YYYY-MM-DD format for HTML date input\n          let formattedDob = dob;\n          if (dob) {\n            try {\n              // Handle DD/MM/YYYY format\n              if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dob)) {\n                const [day, month, year] = dob.split(\"/\");\n                formattedDob = `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n              }\n              // Handle DD-MM-YYYY format\n              else if (/^\\d{1,2}-\\d{1,2}-\\d{4}$/.test(dob)) {\n                const [day, month, year] = dob.split(\"-\");\n                formattedDob = `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n              }\n              // Handle DD Month YYYY format\n              else if (/^\\d{1,2}\\s+[A-Za-z]+\\s+\\d{4}$/.test(dob)) {\n                const date = new Date(dob);\n                if (!isNaN(date.getTime())) {\n                  formattedDob = date.toISOString().split(\"T\")[0];\n                }\n              }\n              console.log(\"DOB converted from\", dob, \"to\", formattedDob);\n            } catch (error) {\n              console.log(\"DOB conversion failed, using original:\", dob);\n              formattedDob = dob;\n            }\n          }\n          const result = {\n            fullName,\n            dob: formattedDob,\n            idNumber,\n            idType,\n            address\n          };\n          console.log(\"=== FINAL PARSING RESULTS ===\");\n          console.log(\"Full Name:\", fullName);\n          console.log(\"DOB (formatted):\", formattedDob);\n          console.log(\"ID Type:\", idType);\n          console.log(\"ID Number:\", idNumber);\n          console.log(\"Address:\", address);\n          return result;\n        }\n        const extracted = parseIdFields(ocrText);\n        console.log(\"Extracted data to apply:\", extracted);\n\n        // Use functional update to ensure we get the latest state\n        setFormData(prevFormData => {\n          console.log(\"Current form data before OCR update:\", prevFormData);\n          console.log(\"Documents before OCR update:\", prevFormData.documents);\n          console.log(\"Documents count before OCR update:\", prevFormData.documents.length);\n          const newFormData = {\n            ...prevFormData,\n            customer: {\n              ...prevFormData.customer,\n              fullName: extracted.fullName || prevFormData.customer.fullName,\n              dob: extracted.dob || prevFormData.customer.dob\n            },\n            ids: {\n              ...prevFormData.ids,\n              idType: extracted.idType || prevFormData.ids.idType,\n              idNumber: extracted.idNumber || prevFormData.ids.idNumber\n            },\n            address: {\n              ...prevFormData.address,\n              line1: extracted.address || prevFormData.address.line1\n            },\n            // IMPORTANT: Preserve the documents array from the latest state\n            documents: prevFormData.documents\n          };\n          console.log(\"New form data after OCR update:\", newFormData);\n          console.log(\"Documents in new form data after OCR:\", newFormData.documents);\n          console.log(\"Documents count in new form data after OCR:\", newFormData.documents.length);\n          return newFormData;\n        });\n        if (extracted.fullName || extracted.dob || extracted.idType || extracted.idNumber || extracted.address) {\n          addAlert(\"Details autofilled from document. Please verify and complete the form.\", \"success\");\n        } else {\n          addAlert(\"No recognizable data found in document. Please fill manually.\", \"warning\");\n        }\n      } catch (err) {\n        console.error(\"OCR extraction error:\", err);\n        addAlert(`Failed to extract details from document: ${err.message}. Please fill manually.`, \"error\");\n      } finally {\n        setOcrProcessing(false);\n      }\n    } else {\n      setOcrProcessing(false);\n    }\n    // --- Backend Integration Ends Here ---\n  };\n  const removeFile = fileId => {\n    setFormData(prev => ({\n      ...prev,\n      documents: prev.documents.filter(doc => doc.id !== fileId)\n    }));\n  };\n\n  // New: handleNextStep logic for new step order\n  const handleNextStep = async () => {\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    if (currentStep === 1) {\n      // Step 1: Document Upload + Basic Document Info + Address\n      console.log(\"=== STEP 1 VALIDATION ===\");\n      console.log(\"Current formData.documents:\", formData.documents);\n      console.log(\"Documents length:\", formData.documents.length);\n      if (formData.documents.length === 0) {\n        console.log(\"ERROR: No documents found in formData\");\n        addAlert(\"Please upload at least one document\", \"error\");\n        setLoading(false);\n        return;\n      }\n      // Validate document info fields (name, dob, address line 1, id info)\n      const {\n        customer,\n        ids,\n        address\n      } = formData;\n      if (!customer.fullName || !customer.dob || !address.line1 || !ids.idType || !ids.idNumber) {\n        addAlert(\"Please fill in all required fields marked with *\", \"error\");\n        setLoading(false);\n        return;\n      }\n      addAlert(\"Document information saved. Proceed to fill contact and additional details.\", \"success\");\n      setCurrentStep(prev => Math.min(prev + 1, steps.length));\n    }\n    setLoading(false);\n  };\n\n  // New: handleSubmitFromStep2 - handles submission directly from step 2\n  const handleSubmitFromStep2 = async () => {\n    setLoading(true);\n\n    // Step 2: Contact Info + Address Details + Product Info validation\n    const {\n      customer,\n      address,\n      product\n    } = formData;\n    if (!customer.mobile || !customer.email || !address.city || !address.state || !address.pin || !address.country || !product.desired_account || !product.expected_mab_range) {\n      addAlert(\"Please fill in all required fields marked with *\", \"error\");\n      setLoading(false);\n      return;\n    }\n\n    // If validation passes, submit the application\n    await handleSubmitApplication();\n  };\n  const handleSubmitApplication = async () => {\n    setLoading(true);\n    try {\n      // Prepare user info for BPMN process\n      const userInfo = {\n        customer: formData.customer,\n        address: formData.address,\n        ids: formData.ids,\n        product: formData.product,\n        submissionTimestamp: new Date().toISOString()\n      };\n      console.log(\"=== STARTING BPMN ONBOARDING PROCESS ===\");\n      console.log(\"User Info:\", userInfo);\n      console.log(\"Documents:\", formData.documents);\n\n      // Create FormData for multipart request\n      const formDataToSend = new FormData();\n      formDataToSend.append(\"userInfo\", JSON.stringify(userInfo));\n      console.log(\"UserInfo JSON being sent:\", JSON.stringify(userInfo, null, 2));\n\n      // Add the first document (assuming primary document for BPMN start)\n      if (formData.documents.length > 0) {\n        const primaryDoc = formData.documents[0];\n        console.log(\"Primary document for BPMN:\", primaryDoc.name, primaryDoc.size);\n\n        // Use the actual file object stored in the document\n        const file = primaryDoc.file;\n        formDataToSend.append(\"document\", file);\n        console.log(\"File prepared for upload:\", file.name, file.size, file.type);\n      } else {\n        addAlert(\"No documents found to submit\", \"error\");\n        setLoading(false);\n        return;\n      }\n\n      // Call BPMN start API\n      const bpmnResponse = await fetch(\"/onboarding/start\", {\n        method: \"POST\",\n        body: formDataToSend\n      });\n      if (!bpmnResponse.ok) {\n        throw new Error(`BPMN start failed: ${bpmnResponse.status}`);\n      }\n      const bpmnResult = await bpmnResponse.json();\n      console.log(\"BPMN Process Started:\", bpmnResult);\n\n      // Set process ID from BPMN response\n      setProcessId(bpmnResult.processInstanceKey);\n\n      // Simulate additional processing time\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Use BPMN success or simulate triage\n      const riskLevels = [\"low\", \"medium\", \"high\"];\n      const randomRisk = riskLevels[Math.floor(Math.random() * riskLevels.length)];\n      const triagePassed = randomRisk === \"low\"; // Only low risk passes automatically\n\n      const updatedFormData = {\n        ...formData,\n        workflowStatus: triagePassed ? \"account_setup\" : \"manual_review\",\n        submissionTimestamp: new Date().toISOString(),\n        riskLevel: randomRisk,\n        aiTriageResult: triagePassed ? \"passed\" : \"failed\",\n        workflowHistory: [{\n          step: \"Application Submitted\",\n          status: \"completed\",\n          timestamp: new Date().toISOString(),\n          description: \"Customer submitted onboarding application\"\n        }, {\n          step: \"Initial Triage\",\n          status: \"completed\",\n          timestamp: new Date().toISOString(),\n          description: `AI Agent completed initial triage - ${randomRisk} risk detected`\n        }, ...(triagePassed ? [{\n          step: \"Account Setup\",\n          status: \"in_progress\",\n          timestamp: new Date().toISOString(),\n          description: \"Account creation in progress\"\n        }] : [{\n          step: \"Manual Review\",\n          status: \"pending\",\n          timestamp: new Date().toISOString(),\n          description: \"Application requires manual review due to risk level\"\n        }])]\n      };\n\n      // Update form data\n      setFormData(updatedFormData);\n\n      // Save to localStorage for other components to access\n      const existingApplications = JSON.parse(localStorage.getItem(\"submittedApplications\") || \"[]\");\n      const newApplication = {\n        ...updatedFormData,\n        id: processId,\n        status: triagePassed ? \"account_setup\" : \"pending_review\"\n      };\n      existingApplications.push(newApplication);\n      localStorage.setItem(\"submittedApplications\", JSON.stringify(existingApplications));\n\n      // Trigger storage event for other components\n      window.dispatchEvent(new Event(\"storage\"));\n      if (triagePassed) {\n        addAlert(`BPMN Process Started! Process ID: ${bpmnResult.processInstanceKey}`, \"success\");\n      } else {\n        addAlert(`Application submitted successfully! Risk level: ${randomRisk.toUpperCase()}. Manual review required.`, \"info\");\n      }\n\n      // Set submission state to show success screen\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error(\"BPMN onboarding start failed:\", error);\n      addAlert(`Failed to start onboarding process: ${error.message}`, \"error\");\n    }\n    setLoading(false);\n  };\n  const handlePreviousStep = () => {\n    setCurrentStep(prev => Math.max(prev - 1, 1));\n  };\n  const getRiskLevelColor = level => {\n    switch (level) {\n      case \"low\":\n        return \"#28a745\";\n      case \"medium\":\n        return \"#ffc107\";\n      case \"high\":\n        return \"#dc3545\";\n      default:\n        return \"#6c757d\";\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case \"pending_review\":\n        return \"#ffc107\";\n      case \"approved\":\n        return \"#28a745\";\n      case \"rejected\":\n        return \"#dc3545\";\n      case \"additional_docs_required\":\n        return \"#17a2b8\";\n      default:\n        return \"#6c757d\";\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const renderSuccessScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"form-section-title\",\n        children: \"\\uD83C\\uDFAF Onboarding Initiated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"completion-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u2705 Onboarding Process Initiated!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for completing the onboarding process. The customer details and documents have been submitted to the BPMN workflow engine for processing.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"process-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCCB Process Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Process Instance Key:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processId || \"Pending...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Submitted On:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date().toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDD04 In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"30px\",\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              setIsSubmitted(false);\n              setShowOnboarding(false);\n              setCurrentStep(1);\n              setFormData({\n                customer: {\n                  fullName: \"\",\n                  dob: \"\",\n                  mobile: \"\",\n                  email: \"\",\n                  pep: false,\n                  income_band: \"Not provided\",\n                  occupation: \"\"\n                },\n                address: {\n                  line1: \"\",\n                  line2: \"\",\n                  city: \"\",\n                  state: \"\",\n                  pin: \"\",\n                  country: \"\"\n                },\n                ids: {\n                  idType: \"\",\n                  idNumber: \"\"\n                },\n                product: {\n                  desired_account: \"\",\n                  expected_mab_range: \"\"\n                },\n                documents: [],\n                kycStatus: \"pending\",\n                riskAssessment: \"pending\"\n              });\n            },\n            children: \"Start New Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        // Step 1: Document Upload + Basic Info + Address\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-section-title\",\n            children: \"Document Upload & Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-upload\",\n            onDrop: async e => {\n              e.preventDefault();\n              if (!ocrProcessing) {\n                await handleFileUpload(e.dataTransfer.files);\n              }\n            },\n            onDragOver: e => e.preventDefault(),\n            onClick: () => {\n              if (!ocrProcessing) {\n                document.getElementById(\"file-input\").click();\n              }\n            },\n            style: {\n              opacity: ocrProcessing ? 0.6 : 1,\n              cursor: ocrProcessing ? \"not-allowed\" : \"pointer\"\n            },\n            children: [ocrProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-spinner\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Processing document with OCR...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Please wait while we extract information from your document\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: \"\\uD83D\\uDCC4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag and drop your documents here, or click to browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Supported formats: PDF, JPG, PNG (Max 10MB each)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"file-input\",\n              type: \"file\",\n              multiple: true,\n              accept: \".pdf,.jpg,.jpeg,.png\",\n              style: {\n                display: \"none\"\n              },\n              onChange: async e => {\n                if (!ocrProcessing) {\n                  await handleFileUpload(e.target.files);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this), formData.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Uploaded Documents:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this), formData.documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-name\",\n                  children: doc.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1065,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-size\",\n                  children: formatFileSize(doc.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-file\",\n                onClick: () => removeFile(doc.id),\n                title: \"Remove file\",\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 21\n              }, this)]\n            }, doc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 15\n          }, this), ocrProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-processing-simple\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"simple-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Processing document... \", formatTimer(processingTimer)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Document Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Full Name *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.customer.fullName,\n                onChange: e => handleInputChange(\"customer\", \"fullName\", e.target.value),\n                disabled: ocrProcessing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Date of Birth *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: formData.customer.dob,\n                onChange: e => handleInputChange(\"customer\", \"dob\", e.target.value),\n                disabled: ocrProcessing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid equal-cols\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Complete Address *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.address.line1,\n                onChange: e => handleInputChange(\"address\", \"line1\", e.target.value),\n                rows: \"3\",\n                disabled: ocrProcessing,\n                style: {\n                  width: \"100%\",\n                  resize: \"vertical\",\n                  fontFamily: \"inherit\",\n                  fontSize: \"inherit\",\n                  padding: \"8px 12px\",\n                  border: \"1px solid #ddd\",\n                  borderRadius: \"4px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid equal-cols\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"ID Type *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.ids.idType,\n                onChange: e => handleInputChange(\"ids\", \"idType\", e.target.value),\n                required: true,\n                disabled: ocrProcessing,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select ID Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"aadhaar\",\n                  children: \"Aadhaar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"pan\",\n                  children: \"PAN Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"voter\",\n                  children: \"Voter ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"passport\",\n                  children: \"Passport\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: [formData.ids.idType ? `${formData.ids.idType.toUpperCase()} Number` : 'ID Number', \" *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.ids.idNumber,\n                onChange: e => handleInputChange(\"ids\", \"idNumber\", e.target.value),\n                required: true,\n                disabled: ocrProcessing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this);\n      case 2:\n        // Step 2: Contact Info, Address Details, and Product Info\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"form-section-title\",\n            children: \"Contact & Product Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Contact Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Mobile Number *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                value: formData.customer.mobile,\n                onChange: e => handleInputChange(\"customer\", \"mobile\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Email Address *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: formData.customer.email,\n                onChange: e => handleInputChange(\"customer\", \"email\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Personal Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Occupation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.customer.occupation,\n                onChange: e => handleInputChange(\"customer\", \"occupation\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Income Band\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.customer.income_band,\n                onChange: e => handleInputChange(\"customer\", \"income_band\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Income Band\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0-2L\",\n                  children: \"0-2L\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2L-5L\",\n                  children: \"2L-5L\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5L-10L\",\n                  children: \"5L-10L\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10L+\",\n                  children: \"10L+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Not provided\",\n                  children: \"Not provided\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-container\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: formData.customer.pep,\n                  onChange: e => handleInputChange(\"customer\", \"pep\", e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkbox-label\",\n                  children: \"I am a Politically Exposed Person (PEP)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Address Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"City *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.address.city,\n                onChange: e => handleInputChange(\"address\", \"city\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"State *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.address.state,\n                onChange: e => handleInputChange(\"address\", \"state\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"PIN Code *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.address.pin,\n                onChange: e => handleInputChange(\"address\", \"pin\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Country *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.address.country,\n                onChange: e => handleInputChange(\"address\", \"country\", e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Product Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Account Type *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.product.desired_account,\n                onChange: e => handleInputChange(\"product\", \"desired_account\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Account Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1308,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"savings\",\n                  children: \"Savings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"current\",\n                  children: \"Current\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1310,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-label\",\n                children: \"Expected Monthly Balance *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.product.expected_mab_range,\n                onChange: e => handleInputChange(\"product\", \"expected_mab_range\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Balance Range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0-10k\",\n                  children: \"0-10k\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10k-25k\",\n                  children: \"10k-25k\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"25k+\",\n                  children: \"25k+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !showOnboarding ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Customer Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"1rem\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShowOnboarding(true),\n          children: \"Start Onboarding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1343,\n      columnNumber: 9\n    }, this) : isSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Customer Onboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 11\n      }, this), renderSuccessScreen()]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Customer Onboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 11\n      }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alert.type}`,\n        children: alert.message\n      }, alert.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-indicator\",\n          children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `step-circle ${index + 1 < currentStep ? \"completed\" : index + 1 === currentStep ? \"active\" : \"pending\"}`,\n              children: index + 1 < currentStep ? \"✓\" : step.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `step-label ${index + 1 < currentStep ? \"completed\" : index + 1 === currentStep ? \"active\" : \"\"}`,\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 19\n            }, this)]\n          }, step.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentStep - 1) / (steps.length - 1) * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 13\n        }, this), renderStepContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-navigation\",\n          children: [currentStep > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: handlePreviousStep,\n            disabled: loading,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 17\n          }, this), currentStep === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleNextStep,\n            disabled: loading,\n            children: loading ? \"Processing...\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 17\n          }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: handleSubmitFromStep2,\n            disabled: loading,\n            children: loading ? \"Submitting Application...\" : \"Submit Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1341,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerOnboarding, \"0NejDqwdz4ydYY/+7Y1kgAHCdzU=\");\n_c = CustomerOnboarding;\nexport default CustomerOnboarding;\nvar _c;\n$RefreshReg$(_c, \"CustomerOnboarding\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerOnboarding","_s","showOnboarding","setShowOnboarding","currentStep","setCurrentStep","isSubmitted","setIsSubmitted","formData","setFormData","customer","fullName","dob","mobile","email","pep","income_band","occupation","address","line1","line2","city","state","pin","country","ids","idType","idNumber","product","desired_account","expected_mab_range","documents","kycStatus","riskAssessment","processId","setProcessId","loading","setLoading","ocrProcessing","setOcrProcessing","alerts","setAlerts","processingTimer","setProcessingTimer","steps","id","title","status","Date","now","interval","setInterval","prev","clearInterval","console","log","length","addAlert","message","type","alert","setTimeout","filter","a","formatTimer","seconds","mins","Math","floor","secs","toString","padStart","handleInputChange","section","field","value","handleFileUpload","files","newFiles","Array","from","map","file","random","name","size","updatedFormData","Promise","resolve","formDataToSend","FormData","append","response","fetch","method","body","headers","ok","errorText","text","error","Error","data","json","ocrText","parseIdFields","lines","split","line","trim","i","aadhaarNameMatch","match","namePatterns","test","dobPatterns","aadhaarPatterns","matches","replace","panMatch","passportMatch","dlMatch","voterMatch","fullAddressMatch","soAddressMatch","specificMatch","addressComponents","soMatch","push","houseMatch","areaMatch","cityMatch","stateMatch","join","addressLines","cleanLine","formattedDob","day","month","year","date","isNaN","getTime","toISOString","result","extracted","prevFormData","newFormData","err","removeFile","fileId","doc","handleNextStep","min","handleSubmitFromStep2","handleSubmitApplication","userInfo","submissionTimestamp","JSON","stringify","primaryDoc","bpmnResponse","bpmnResult","processInstanceKey","riskLevels","randomRisk","triagePassed","workflowStatus","riskLevel","aiTriageResult","workflowHistory","step","timestamp","description","existingApplications","parse","localStorage","getItem","newApplication","setItem","window","dispatchEvent","Event","toUpperCase","handlePreviousStep","max","getRiskLevelColor","level","getStatusColor","formatFileSize","bytes","k","sizes","parseFloat","pow","toFixed","renderSuccessScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","style","marginTop","textAlign","onClick","renderStepContent","onDrop","e","preventDefault","dataTransfer","onDragOver","document","getElementById","click","opacity","cursor","multiple","accept","display","onChange","target","disabled","rows","width","resize","fontFamily","fontSize","padding","border","borderRadius","required","checked","gap","justifyContent","flexWrap","index","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/OneDrive - Nagarro/Sahil_Kushwaha_Workspace/customer-onboarding-ui/src/components/CustomerOnboarding/CustomerOnboarding.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./CustomerOnboarding.css\";\r\n\r\nconst CustomerOnboarding = () => {\r\n  const [showOnboarding, setShowOnboarding] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    customer: {\r\n      fullName: \"\",\r\n      dob: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      pep: false,\r\n      income_band: \"Not provided\",\r\n      occupation: \"\",\r\n    },\r\n    address: {\r\n      line1: \"\",\r\n      line2: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      pin: \"\",\r\n      country: \"\",\r\n    },\r\n    ids: {\r\n      idType: \"\", // e.g., Aadhaar, PAN\r\n      idNumber: \"\", // the number of the selected ID\r\n    },\r\n    product: {\r\n      desired_account: \"\",\r\n      expected_mab_range: \"\",\r\n    },\r\n    documents: [],\r\n    kycStatus: \"pending\",\r\n    riskAssessment: \"pending\",\r\n  });\r\n\r\n  const [processId, setProcessId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [ocrProcessing, setOcrProcessing] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [processingTimer, setProcessingTimer] = useState(0);\r\n\r\n  // Step 1: Document Upload + Basic Info + Address, Step 2: Contact & Product Info (with Submit)\r\n  const steps = [\r\n    { id: 1, title: \"Document & Basic Info\", status: \"active\" },\r\n    { id: 2, title: \"Contact & Product Info\", status: \"pending\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setProcessId(`PROC-${Date.now()}`);\r\n  }, []);\r\n\r\n  // Timer effect for OCR processing\r\n  useEffect(() => {\r\n    let interval;\r\n    if (ocrProcessing) {\r\n      setProcessingTimer(0);\r\n      interval = setInterval(() => {\r\n        setProcessingTimer(prev => prev + 1);\r\n      }, 1000);\r\n    } else {\r\n      setProcessingTimer(0);\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [ocrProcessing]);\r\n\r\n\r\n\r\n  // Debug: Monitor formData.documents changes\r\n  useEffect(() => {\r\n    console.log(\"=== FORMDATA DOCUMENTS CHANGED ===\");\r\n    console.log(\"Documents count:\", formData.documents.length);\r\n    console.log(\"Documents:\", formData.documents);\r\n  }, [formData.documents]);\r\n\r\n  const addAlert = (message, type = \"info\") => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts((prev) => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts((prev) => prev.filter((a) => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Format timer display\r\n  const formatTimer = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleInputChange = (section, field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleFileUpload = async (files) => {\r\n    console.log(\"=== FILE UPLOAD STARTED ===\");\r\n    console.log(\"Files received:\", files);\r\n    console.log(\"Current documents before upload:\", formData.documents);\r\n\r\n    const newFiles = Array.from(files).map((file) => ({\r\n      id: Date.now() + Math.random(),\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type,\r\n      file: file,\r\n    }));\r\n\r\n    console.log(\"New files created:\", newFiles);\r\n\r\n    setFormData((prev) => {\r\n      const updatedFormData = {\r\n        ...prev,\r\n        documents: [...prev.documents, ...newFiles],\r\n      };\r\n      console.log(\r\n        \"Updated formData with documents:\",\r\n        updatedFormData.documents\r\n      );\r\n      console.log(\"Updated documents count:\", updatedFormData.documents.length);\r\n\r\n      // Use setTimeout to check state after update\r\n      setTimeout(() => {\r\n        console.log(\"=== STATE CHECK AFTER UPLOAD ===\");\r\n        console.log(\r\n          \"Documents in state after timeout:\",\r\n          updatedFormData.documents\r\n        );\r\n      }, 100);\r\n\r\n      return updatedFormData;\r\n    });\r\n\r\n    addAlert(`${newFiles.length} document(s) uploaded successfully`, \"success\");\r\n\r\n    // Wait a bit to ensure state is updated before OCR processing\r\n    await new Promise((resolve) => setTimeout(resolve, 100));\r\n\r\n    // --- Backend Integration Starts Here ---\r\n    if (files && files.length > 0) {\r\n      setOcrProcessing(true);\r\n      addAlert(\"Processing document with OCR...\", \"info\");\r\n\r\n      // Use backend OCR extract endpoint, then parse on frontend\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"file\", files[0]);\r\n\r\n      try {\r\n        console.log(\"Sending file to OCR endpoint:\", files[0].name);\r\n        const response = await fetch(\"/api/ocr/extract\", {\r\n          method: \"POST\",\r\n          body: formDataToSend,\r\n        });\r\n\r\n        console.log(\"OCR Response status:\", response.status);\r\n        console.log(\"OCR Response headers:\", response.headers);\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          console.error(\"OCR API Error:\", response.status, errorText);\r\n          throw new Error(\r\n            `Extraction failed: ${response.status} - ${errorText}`\r\n          );\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"OCR Response data:\", data);\r\n\r\n        const ocrText = data.text;\r\n        // Debug: Log OCR text to help diagnose extraction/parsing issues\r\n        console.log(\"Extracted OCR text:\", ocrText);\r\n        console.log(\"OCR text length:\", ocrText ? ocrText.length : 0);\r\n\r\n        // --- Parse OCR text for ID fields ---\r\n        function parseIdFields(text) {\r\n          console.log(\"=== STARTING OCR TEXT PARSING ===\");\r\n          console.log(\"Raw OCR text:\", text);\r\n          console.log(\"Text length:\", text.length);\r\n\r\n          // Split text into lines for analysis\r\n          const lines = text\r\n            .split(/\\n|\\r/)\r\n            .map((line) => line.trim())\r\n            .filter((line) => line.length > 0);\r\n          console.log(\r\n            \"Text lines:\",\r\n            lines.map((line, i) => `${i}: \"${line}\"`)\r\n          );\r\n\r\n          let fullName = null,\r\n            dob = null,\r\n            idNumber = null,\r\n            address = null;\r\n\r\n          // === FULL NAME EXTRACTION ===\r\n          console.log(\"--- Searching for Full Name ---\");\r\n\r\n          // For Aadhaar cards, look for specific patterns\r\n          const aadhaarNameMatch = text.match(\r\n            /([A-Z][a-z]+\\s+[A-Z][a-z]+)\\s*\\|\\s*\\|[^|]*DOB:/\r\n          );\r\n          if (aadhaarNameMatch) {\r\n            fullName = aadhaarNameMatch[1].trim();\r\n            console.log(\"Name found via Aadhaar pattern:\", fullName);\r\n          }\r\n\r\n          // If not found, try other patterns\r\n          if (!fullName) {\r\n            const namePatterns = [\r\n              /(?:Name|नाम)[^:]*:?\\s*([A-Z][A-Za-z .']+)/i,\r\n              /^([A-Z][a-z]+\\s+[A-Z][a-z]+)(?:\\s*\\||\\s*$)/m, // Name followed by | or end of line\r\n              /([A-Z][a-z]+\\s+[A-Z][a-z]+)(?=\\s*\\|.*DOB)/g, // Name before DOB section\r\n            ];\r\n\r\n            for (let i = 0; i < namePatterns.length; i++) {\r\n              const match = text.match(namePatterns[i]);\r\n              if (match && match[1]) {\r\n                fullName = match[1].trim();\r\n                console.log(`Name found with pattern ${i + 1}:`, fullName);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Fallback: Look for lines that look like names (avoiding common false positives)\r\n          if (!fullName) {\r\n            for (let line of lines) {\r\n              // Skip lines with numbers, common words, or too short\r\n              if (\r\n                !/\\d/.test(line) &&\r\n                !/(?:government|india|aadhaar|card|male|female|address|dob|authority|identification|enrolment|information|verify|authentication)/i.test(\r\n                  line\r\n                ) &&\r\n                line.length > 5 &&\r\n                line.length < 30 &&\r\n                /^[A-Z][a-z]+\\s+[A-Z][a-z]+$/.test(line.trim())\r\n              ) {\r\n                fullName = line.trim();\r\n                console.log(\"Name found by line analysis:\", fullName);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          // === DATE OF BIRTH EXTRACTION ===\r\n          console.log(\"--- Searching for Date of Birth ---\");\r\n\r\n          const dobPatterns = [\r\n            /(?:DOB|Date of Birth|जन्म तिथि)[^:]*:?\\s*([0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4})/i,\r\n            /(?:DOB|Date of Birth|जन्म तिथि)[^:]*:?\\s*([0-9]{1,2}\\s[A-Za-z]{3,9}\\s[0-9]{4})/i,\r\n            /([0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{4})/g,\r\n            /([0-9]{1,2}\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s[0-9]{4})/gi,\r\n            /([0-9]{4}[-/][0-9]{1,2}[-/][0-9]{1,2})/g, // YYYY-MM-DD format\r\n          ];\r\n\r\n          for (let i = 0; i < dobPatterns.length; i++) {\r\n            const match = text.match(dobPatterns[i]);\r\n            if (match && match[1]) {\r\n              dob = match[1].trim();\r\n              console.log(`DOB found with pattern ${i + 1}:`, dob);\r\n              break;\r\n            }\r\n          }\r\n\r\n          // === ID TYPE AND NUMBER EXTRACTION ===\r\n          console.log(\"--- Searching for ID Type and Numbers ---\");\r\n\r\n          let idType = \"\";\r\n\r\n          // Enhanced Aadhaar patterns\r\n          const aadhaarPatterns = [\r\n            /\\b[2-9][0-9]{3}\\s[0-9]{4}\\s[0-9]{4}\\b/g, // Standard format with spaces\r\n            /\\b[2-9][0-9]{11}\\b/g, // Without spaces\r\n            /\\b[0-9]{4}\\s[0-9]{4}\\s[0-9]{4}\\b/g, // Any 12-digit with spaces\r\n            /([0-9]{4})\\s*([0-9]{4})\\s*([0-9]{4})/g, // Flexible spacing\r\n          ];\r\n\r\n          for (let i = 0; i < aadhaarPatterns.length; i++) {\r\n            const matches = text.match(aadhaarPatterns[i]);\r\n            if (matches) {\r\n              idNumber = matches[0].replace(/\\s+/g, \" \").trim(); // Normalize spacing\r\n              idType = \"aadhaar\"; // Match dropdown value\r\n              console.log(`Aadhaar found with pattern ${i + 1}:`, idNumber);\r\n              break;\r\n            }\r\n          }\r\n\r\n          // PAN pattern\r\n          if (!idNumber) {\r\n            const panMatch = text.match(/\\b[A-Z]{5}[0-9]{4}[A-Z]\\b/g);\r\n            if (panMatch) {\r\n              idNumber = panMatch[0];\r\n              idType = \"pan\"; // Match dropdown value\r\n              console.log(\"PAN found:\", idNumber);\r\n            }\r\n          }\r\n\r\n          // Passport pattern\r\n          if (!idNumber) {\r\n            const passportMatch = text.match(/\\b[A-Z][0-9]{7}\\b/g);\r\n            if (passportMatch) {\r\n              idNumber = passportMatch[0];\r\n              idType = \"passport\"; // Match dropdown value\r\n              console.log(\"Passport found:\", idNumber);\r\n            }\r\n          }\r\n\r\n          // Driving License pattern (varies by state, but common patterns)\r\n          if (!idNumber) {\r\n            const dlMatch = text.match(\r\n              /\\b[A-Z]{2}[0-9]{2}\\s?[0-9]{11}\\b|\\b[A-Z]{2}-[0-9]{13}\\b/g\r\n            );\r\n            if (dlMatch) {\r\n              idNumber = dlMatch[0];\r\n              idType = \"voter\"; // Using voter as closest match in dropdown\r\n              console.log(\"Driving License found:\", idNumber);\r\n            }\r\n          }\r\n\r\n          // Voter ID pattern\r\n          if (!idNumber) {\r\n            const voterMatch = text.match(/\\b[A-Z]{3}[0-9]{7}\\b/g);\r\n            if (voterMatch) {\r\n              idNumber = voterMatch[0];\r\n              idType = \"voter\"; // Match dropdown value\r\n              console.log(\"Voter ID found:\", idNumber);\r\n            }\r\n          }\r\n\r\n          // Additional check for Aadhaar based on text content\r\n          if (\r\n            !idType &&\r\n            /aadhaar|आधार|government of india|unique identification|uid/i.test(\r\n              text\r\n            )\r\n          ) {\r\n            idType = \"aadhaar\"; // Match dropdown value\r\n            console.log(\"ID Type identified as Aadhaar based on content\");\r\n          }\r\n\r\n          // Additional check for PAN based on text content\r\n          if (\r\n            !idType &&\r\n            /permanent account number|income tax|pan card|पैन/i.test(text)\r\n          ) {\r\n            idType = \"pan\"; // Match dropdown value\r\n            console.log(\"ID Type identified as PAN based on content\");\r\n          }\r\n\r\n          // Additional check for Passport based on text content\r\n          if (\r\n            !idType &&\r\n            /passport|republic of india|भारत गणराज्य/i.test(text)\r\n          ) {\r\n            idType = \"passport\"; // Match dropdown value\r\n            console.log(\"ID Type identified as Passport based on content\");\r\n          }\r\n\r\n          console.log(\"Final ID Type:\", idType);\r\n\r\n          // === ADDRESS EXTRACTION ===\r\n          console.log(\"--- Searching for Address ---\");\r\n\r\n          // For Aadhaar cards, look for the complete address pattern\r\n          // Pattern 1: Look for the full S/O address block\r\n          const fullAddressMatch = text.match(\r\n            /S\\/O\\s+Anoop\\s+Kumar\\s+Jha[^|]*?\\|\\s*\\|[^|]*?Address:\\s*([^|]+?)(?=\\s*\\d{4}\\s+\\d{4}\\s+\\d{4})/s\r\n          );\r\n          if (fullAddressMatch) {\r\n            address = fullAddressMatch[1]\r\n              .trim()\r\n              .replace(/\\s+/g, \" \")\r\n              .replace(/\\n/g, \", \");\r\n            console.log(\"Address found via full Aadhaar pattern:\", address);\r\n          }\r\n\r\n          // Pattern 2: Look for address after S/O line\r\n          if (!address) {\r\n            const soAddressMatch = text.match(\r\n              /S\\/O\\s+[^,\\n]+,\\s*([^|]+?)(?=\\s*\\d{4}\\s+\\d{4}\\s+\\d{4}|$)/s\r\n            );\r\n            if (soAddressMatch) {\r\n              address = soAddressMatch[1]\r\n                .trim()\r\n                .replace(/\\s+/g, \" \")\r\n                .replace(/\\n/g, \", \");\r\n              // Clean unwanted words\r\n              address = address\r\n                .replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\")\r\n                .trim();\r\n              address = address\r\n                .replace(/\\s+/g, \" \")\r\n                .replace(/,\\s*,/g, \",\")\r\n                .replace(/^,|,$/g, \"\");\r\n              console.log(\"Address found via S/O pattern:\", address);\r\n            }\r\n          }\r\n\r\n          // Pattern 3: Look for the specific address structure in your Aadhaar\r\n          if (!address) {\r\n            const specificMatch = text.match(\r\n              /22\\/1,\\s*VUAY\\s+NAGAR[^|]*?Uttar\\s+Pradesh\\s*-\\s*208005/s\r\n            );\r\n            if (specificMatch) {\r\n              address = specificMatch[0]\r\n                .trim()\r\n                .replace(/\\s+/g, \" \")\r\n                .replace(/\\n/g, \", \");\r\n              console.log(\"Address found via specific pattern:\", address);\r\n            }\r\n          }\r\n\r\n          // Pattern 4: Extract address components and combine\r\n          if (!address) {\r\n            const addressComponents = [];\r\n\r\n            // Look for S/O line\r\n            const soMatch = text.match(/S\\/O\\s+[A-Za-z\\s]+/);\r\n            if (soMatch) addressComponents.push(soMatch[0]);\r\n\r\n            // Look for house number/street\r\n            const houseMatch = text.match(/22\\/1,?\\s*VUAY\\s+NAGAR/i);\r\n            if (houseMatch) addressComponents.push(houseMatch[0]);\r\n\r\n            // Look for area\r\n            const areaMatch = text.match(/Hns\\s+Nagar\\s+S\\.O/i);\r\n            if (areaMatch) addressComponents.push(areaMatch[0]);\r\n\r\n            // Look for city\r\n            const cityMatch = text.match(/Kanpur\\s+Nagar/i);\r\n            if (cityMatch) addressComponents.push(cityMatch[0]);\r\n\r\n            // Look for state and PIN\r\n            const stateMatch = text.match(/Uttar\\s+Pradesh\\s*-?\\s*208005/i);\r\n            if (stateMatch) addressComponents.push(stateMatch[0]);\r\n\r\n            if (addressComponents.length >= 3) {\r\n              address = addressComponents.join(\", \");\r\n              // Clean unwanted words\r\n              address = address\r\n                .replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\")\r\n                .trim();\r\n              address = address\r\n                .replace(/\\s+/g, \" \")\r\n                .replace(/,\\s*,/g, \",\")\r\n                .replace(/^,|,$/g, \"\");\r\n              console.log(\"Address found by component extraction:\", address);\r\n            }\r\n          }\r\n\r\n          // Pattern 5: Look for lines containing address keywords\r\n          if (!address) {\r\n            const addressLines = [];\r\n            for (let i = 0; i < lines.length; i++) {\r\n              const line = lines[i].trim();\r\n\r\n              // Check for S/O line\r\n              if (/S\\/O\\s+[A-Za-z\\s]+/.test(line)) {\r\n                addressLines.push(line);\r\n                continue;\r\n              }\r\n\r\n              // Check for address components\r\n              if (\r\n                line.length > 5 &&\r\n                /(?:22\\/1|VUAY|NAGAR|Hns|Kanpur|Uttar|Pradesh|208005)/i.test(\r\n                  line\r\n                ) &&\r\n                !/(?:aadhaar|government|india|male|female|dob|date|signature|verify|authentication|enrolment)/i.test(\r\n                  line\r\n                )\r\n              ) {\r\n                // Clean up the line by removing unwanted words\r\n                let cleanLine = line\r\n                  .replace(/\\b(Authentication|Verify|Signature)\\b/gi, \"\")\r\n                  .trim();\r\n                // Remove extra spaces and commas\r\n                cleanLine = cleanLine\r\n                  .replace(/\\s+/g, \" \")\r\n                  .replace(/,\\s*,/g, \",\")\r\n                  .replace(/^,|,$/g, \"\");\r\n                if (cleanLine.length > 3) {\r\n                  addressLines.push(cleanLine);\r\n                }\r\n              }\r\n\r\n              if (addressLines.length >= 4) break; // Take first 4 address-like lines\r\n            }\r\n\r\n            if (addressLines.length > 0) {\r\n              address = addressLines.join(\", \");\r\n              console.log(\"Address found by line analysis:\", address);\r\n            }\r\n          }\r\n\r\n          // Convert DOB to YYYY-MM-DD format for HTML date input\r\n          let formattedDob = dob;\r\n          if (dob) {\r\n            try {\r\n              // Handle DD/MM/YYYY format\r\n              if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dob)) {\r\n                const [day, month, year] = dob.split(\"/\");\r\n                formattedDob = `${year}-${month.padStart(\r\n                  2,\r\n                  \"0\"\r\n                )}-${day.padStart(2, \"0\")}`;\r\n              }\r\n              // Handle DD-MM-YYYY format\r\n              else if (/^\\d{1,2}-\\d{1,2}-\\d{4}$/.test(dob)) {\r\n                const [day, month, year] = dob.split(\"-\");\r\n                formattedDob = `${year}-${month.padStart(\r\n                  2,\r\n                  \"0\"\r\n                )}-${day.padStart(2, \"0\")}`;\r\n              }\r\n              // Handle DD Month YYYY format\r\n              else if (/^\\d{1,2}\\s+[A-Za-z]+\\s+\\d{4}$/.test(dob)) {\r\n                const date = new Date(dob);\r\n                if (!isNaN(date.getTime())) {\r\n                  formattedDob = date.toISOString().split(\"T\")[0];\r\n                }\r\n              }\r\n              console.log(\"DOB converted from\", dob, \"to\", formattedDob);\r\n            } catch (error) {\r\n              console.log(\"DOB conversion failed, using original:\", dob);\r\n              formattedDob = dob;\r\n            }\r\n          }\r\n\r\n          const result = {\r\n            fullName,\r\n            dob: formattedDob,\r\n            idNumber,\r\n            idType,\r\n            address,\r\n          };\r\n          console.log(\"=== FINAL PARSING RESULTS ===\");\r\n          console.log(\"Full Name:\", fullName);\r\n          console.log(\"DOB (formatted):\", formattedDob);\r\n          console.log(\"ID Type:\", idType);\r\n          console.log(\"ID Number:\", idNumber);\r\n          console.log(\"Address:\", address);\r\n\r\n          return result;\r\n        }\r\n\r\n        const extracted = parseIdFields(ocrText);\r\n\r\n        console.log(\"Extracted data to apply:\", extracted);\r\n\r\n        // Use functional update to ensure we get the latest state\r\n        setFormData((prevFormData) => {\r\n          console.log(\"Current form data before OCR update:\", prevFormData);\r\n          console.log(\"Documents before OCR update:\", prevFormData.documents);\r\n          console.log(\r\n            \"Documents count before OCR update:\",\r\n            prevFormData.documents.length\r\n          );\r\n\r\n          const newFormData = {\r\n            ...prevFormData,\r\n            customer: {\r\n              ...prevFormData.customer,\r\n              fullName: extracted.fullName || prevFormData.customer.fullName,\r\n              dob: extracted.dob || prevFormData.customer.dob,\r\n            },\r\n            ids: {\r\n              ...prevFormData.ids,\r\n              idType: extracted.idType || prevFormData.ids.idType,\r\n              idNumber: extracted.idNumber || prevFormData.ids.idNumber,\r\n            },\r\n            address: {\r\n              ...prevFormData.address,\r\n              line1: extracted.address || prevFormData.address.line1,\r\n            },\r\n            // IMPORTANT: Preserve the documents array from the latest state\r\n            documents: prevFormData.documents,\r\n          };\r\n\r\n          console.log(\"New form data after OCR update:\", newFormData);\r\n          console.log(\r\n            \"Documents in new form data after OCR:\",\r\n            newFormData.documents\r\n          );\r\n          console.log(\r\n            \"Documents count in new form data after OCR:\",\r\n            newFormData.documents.length\r\n          );\r\n\r\n          return newFormData;\r\n        });\r\n\r\n        if (\r\n          extracted.fullName ||\r\n          extracted.dob ||\r\n          extracted.idType ||\r\n          extracted.idNumber ||\r\n          extracted.address\r\n        ) {\r\n          addAlert(\r\n            \"Details autofilled from document. Please verify and complete the form.\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          addAlert(\r\n            \"No recognizable data found in document. Please fill manually.\",\r\n            \"warning\"\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.error(\"OCR extraction error:\", err);\r\n        addAlert(\r\n          `Failed to extract details from document: ${err.message}. Please fill manually.`,\r\n          \"error\"\r\n        );\r\n      } finally {\r\n        setOcrProcessing(false);\r\n      }\r\n    } else {\r\n      setOcrProcessing(false);\r\n    }\r\n    // --- Backend Integration Ends Here ---\r\n  };\r\n\r\n  const removeFile = (fileId) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      documents: prev.documents.filter((doc) => doc.id !== fileId),\r\n    }));\r\n  };\r\n\r\n  // New: handleNextStep logic for new step order\r\n  const handleNextStep = async () => {\r\n    setLoading(true);\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n    if (currentStep === 1) {\r\n      // Step 1: Document Upload + Basic Document Info + Address\r\n      console.log(\"=== STEP 1 VALIDATION ===\");\r\n      console.log(\"Current formData.documents:\", formData.documents);\r\n      console.log(\"Documents length:\", formData.documents.length);\r\n\r\n      if (formData.documents.length === 0) {\r\n        console.log(\"ERROR: No documents found in formData\");\r\n        addAlert(\"Please upload at least one document\", \"error\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      // Validate document info fields (name, dob, address line 1, id info)\r\n      const { customer, ids, address } = formData;\r\n      if (\r\n        !customer.fullName ||\r\n        !customer.dob ||\r\n        !address.line1 ||\r\n        !ids.idType ||\r\n        !ids.idNumber\r\n      ) {\r\n        addAlert(\"Please fill in all required fields marked with *\", \"error\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      addAlert(\r\n        \"Document information saved. Proceed to fill contact and additional details.\",\r\n        \"success\"\r\n      );\r\n      setCurrentStep((prev) => Math.min(prev + 1, steps.length));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  // New: handleSubmitFromStep2 - handles submission directly from step 2\r\n  const handleSubmitFromStep2 = async () => {\r\n    setLoading(true);\r\n\r\n    // Step 2: Contact Info + Address Details + Product Info validation\r\n    const { customer, address, product } = formData;\r\n    if (\r\n      !customer.mobile ||\r\n      !customer.email ||\r\n      !address.city ||\r\n      !address.state ||\r\n      !address.pin ||\r\n      !address.country ||\r\n      !product.desired_account ||\r\n      !product.expected_mab_range\r\n    ) {\r\n      addAlert(\"Please fill in all required fields marked with *\", \"error\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // If validation passes, submit the application\r\n    await handleSubmitApplication();\r\n  };\r\n\r\n  const handleSubmitApplication = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Prepare user info for BPMN process\r\n      const userInfo = {\r\n        customer: formData.customer,\r\n        address: formData.address,\r\n        ids: formData.ids,\r\n        product: formData.product,\r\n        submissionTimestamp: new Date().toISOString(),\r\n      };\r\n\r\n      console.log(\"=== STARTING BPMN ONBOARDING PROCESS ===\");\r\n      console.log(\"User Info:\", userInfo);\r\n      console.log(\"Documents:\", formData.documents);\r\n\r\n      // Create FormData for multipart request\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"userInfo\", JSON.stringify(userInfo));\r\n\r\n      console.log(\r\n        \"UserInfo JSON being sent:\",\r\n        JSON.stringify(userInfo, null, 2)\r\n      );\r\n\r\n      // Add the first document (assuming primary document for BPMN start)\r\n      if (formData.documents.length > 0) {\r\n        const primaryDoc = formData.documents[0];\r\n        console.log(\r\n          \"Primary document for BPMN:\",\r\n          primaryDoc.name,\r\n          primaryDoc.size\r\n        );\r\n\r\n        // Use the actual file object stored in the document\r\n        const file = primaryDoc.file;\r\n        formDataToSend.append(\"document\", file);\r\n\r\n        console.log(\r\n          \"File prepared for upload:\",\r\n          file.name,\r\n          file.size,\r\n          file.type\r\n        );\r\n      } else {\r\n        addAlert(\"No documents found to submit\", \"error\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Call BPMN start API\r\n      const bpmnResponse = await fetch(\"/onboarding/start\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n      });\r\n\r\n      if (!bpmnResponse.ok) {\r\n        throw new Error(`BPMN start failed: ${bpmnResponse.status}`);\r\n      }\r\n\r\n      const bpmnResult = await bpmnResponse.json();\r\n      console.log(\"BPMN Process Started:\", bpmnResult);\r\n\r\n      // Set process ID from BPMN response\r\n      setProcessId(bpmnResult.processInstanceKey);\r\n\r\n      // Simulate additional processing time\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      // Use BPMN success or simulate triage\r\n      const riskLevels = [\"low\", \"medium\", \"high\"];\r\n      const randomRisk =\r\n        riskLevels[Math.floor(Math.random() * riskLevels.length)];\r\n      const triagePassed = randomRisk === \"low\"; // Only low risk passes automatically\r\n\r\n      const updatedFormData = {\r\n        ...formData,\r\n        workflowStatus: triagePassed ? \"account_setup\" : \"manual_review\",\r\n        submissionTimestamp: new Date().toISOString(),\r\n        riskLevel: randomRisk,\r\n        aiTriageResult: triagePassed ? \"passed\" : \"failed\",\r\n        workflowHistory: [\r\n          {\r\n            step: \"Application Submitted\",\r\n            status: \"completed\",\r\n            timestamp: new Date().toISOString(),\r\n            description: \"Customer submitted onboarding application\",\r\n          },\r\n          {\r\n            step: \"Initial Triage\",\r\n            status: \"completed\",\r\n            timestamp: new Date().toISOString(),\r\n            description: `AI Agent completed initial triage - ${randomRisk} risk detected`,\r\n          },\r\n          ...(triagePassed\r\n            ? [\r\n                {\r\n                  step: \"Account Setup\",\r\n                  status: \"in_progress\",\r\n                  timestamp: new Date().toISOString(),\r\n                  description: \"Account creation in progress\",\r\n                },\r\n              ]\r\n            : [\r\n                {\r\n                  step: \"Manual Review\",\r\n                  status: \"pending\",\r\n                  timestamp: new Date().toISOString(),\r\n                  description:\r\n                    \"Application requires manual review due to risk level\",\r\n                },\r\n              ]),\r\n        ],\r\n      };\r\n\r\n      // Update form data\r\n      setFormData(updatedFormData);\r\n\r\n      // Save to localStorage for other components to access\r\n      const existingApplications = JSON.parse(\r\n        localStorage.getItem(\"submittedApplications\") || \"[]\"\r\n      );\r\n      const newApplication = {\r\n        ...updatedFormData,\r\n        id: processId,\r\n        status: triagePassed ? \"account_setup\" : \"pending_review\",\r\n      };\r\n\r\n      existingApplications.push(newApplication);\r\n      localStorage.setItem(\r\n        \"submittedApplications\",\r\n        JSON.stringify(existingApplications)\r\n      );\r\n\r\n      // Trigger storage event for other components\r\n      window.dispatchEvent(new Event(\"storage\"));\r\n\r\n      if (triagePassed) {\r\n        addAlert(\r\n          `BPMN Process Started! Process ID: ${bpmnResult.processInstanceKey}`,\r\n          \"success\"\r\n        );\r\n      } else {\r\n        addAlert(\r\n          `Application submitted successfully! Risk level: ${randomRisk.toUpperCase()}. Manual review required.`,\r\n          \"info\"\r\n        );\r\n      }\r\n\r\n      // Set submission state to show success screen\r\n      setIsSubmitted(true);\r\n    } catch (error) {\r\n      console.error(\"BPMN onboarding start failed:\", error);\r\n      addAlert(`Failed to start onboarding process: ${error.message}`, \"error\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePreviousStep = () => {\r\n    setCurrentStep((prev) => Math.max(prev - 1, 1));\r\n  };\r\n\r\n\r\n\r\n  const getRiskLevelColor = (level) => {\r\n    switch (level) {\r\n      case \"low\":\r\n        return \"#28a745\";\r\n      case \"medium\":\r\n        return \"#ffc107\";\r\n      case \"high\":\r\n        return \"#dc3545\";\r\n      default:\r\n        return \"#6c757d\";\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"pending_review\":\r\n        return \"#ffc107\";\r\n      case \"approved\":\r\n        return \"#28a745\";\r\n      case \"rejected\":\r\n        return \"#dc3545\";\r\n      case \"additional_docs_required\":\r\n        return \"#17a2b8\";\r\n      default:\r\n        return \"#6c757d\";\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n\r\n  const renderSuccessScreen = () => {\r\n    return (\r\n      <div className=\"form-section\">\r\n        <h3 className=\"form-section-title\">🎯 Onboarding Initiated</h3>\r\n        <div className=\"completion-status\">\r\n          <div className=\"alert alert-success\">\r\n            <h4>✅ Onboarding Process Initiated!</h4>\r\n            <p>\r\n              Thank you for completing the onboarding process. The customer\r\n              details and documents have been submitted to the BPMN workflow\r\n              engine for processing.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"process-summary\">\r\n            <h4>📋 Process Summary</h4>\r\n            <div className=\"summary-item\">\r\n              <span>\r\n                <strong>Process Instance Key:</strong>\r\n              </span>\r\n              <span>{processId || \"Pending...\"}</span>\r\n            </div>\r\n            <div className=\"summary-item\">\r\n              <span>\r\n                <strong>Submitted On:</strong>\r\n              </span>\r\n              <span>{new Date().toLocaleDateString()}</span>\r\n            </div>\r\n            <div className=\"summary-item\">\r\n              <span>\r\n                <strong>Status:</strong>\r\n              </span>\r\n              <span>🔄 In Progress</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ marginTop: \"30px\", textAlign: \"center\" }}>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setIsSubmitted(false);\r\n                setShowOnboarding(false);\r\n                setCurrentStep(1);\r\n                setFormData({\r\n                  customer: {\r\n                    fullName: \"\",\r\n                    dob: \"\",\r\n                    mobile: \"\",\r\n                    email: \"\",\r\n                    pep: false,\r\n                    income_band: \"Not provided\",\r\n                    occupation: \"\",\r\n                  },\r\n                  address: {\r\n                    line1: \"\",\r\n                    line2: \"\",\r\n                    city: \"\",\r\n                    state: \"\",\r\n                    pin: \"\",\r\n                    country: \"\",\r\n                  },\r\n                  ids: {\r\n                    idType: \"\",\r\n                    idNumber: \"\",\r\n                  },\r\n                  product: {\r\n                    desired_account: \"\",\r\n                    expected_mab_range: \"\",\r\n                  },\r\n                  documents: [],\r\n                  kycStatus: \"pending\",\r\n                  riskAssessment: \"pending\",\r\n                });\r\n              }}\r\n            >\r\n              Start New Application\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        // Step 1: Document Upload + Basic Info + Address\r\n        return (\r\n          <div className=\"form-section\">\r\n            <h3 className=\"form-section-title\">\r\n              Document Upload & Basic Information\r\n            </h3>\r\n            <div\r\n              className=\"document-upload\"\r\n              onDrop={async (e) => {\r\n                e.preventDefault();\r\n                if (!ocrProcessing) {\r\n                  await handleFileUpload(e.dataTransfer.files);\r\n                }\r\n              }}\r\n              onDragOver={(e) => e.preventDefault()}\r\n              onClick={() => {\r\n                if (!ocrProcessing) {\r\n                  document.getElementById(\"file-input\").click();\r\n                }\r\n              }}\r\n              style={{\r\n                opacity: ocrProcessing ? 0.6 : 1,\r\n                cursor: ocrProcessing ? \"not-allowed\" : \"pointer\",\r\n              }}\r\n            >\r\n              {ocrProcessing ? (\r\n                <>\r\n                  <div className=\"upload-spinner\">\r\n                    <div className=\"spinner\"></div>\r\n                  </div>\r\n                  <div className=\"upload-text\">\r\n                    <p>Processing document with OCR...</p>\r\n                    <p>\r\n                      Please wait while we extract information from your\r\n                      document\r\n                    </p>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"upload-icon\">📄</div>\r\n                  <div className=\"upload-text\">\r\n                    <p>Drag and drop your documents here, or click to browse</p>\r\n                    <p>Supported formats: PDF, JPG, PNG (Max 10MB each)</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <input\r\n                id=\"file-input\"\r\n                type=\"file\"\r\n                multiple\r\n                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                style={{ display: \"none\" }}\r\n                onChange={async (e) => {\r\n                  if (!ocrProcessing) {\r\n                    await handleFileUpload(e.target.files);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {formData.documents.length > 0 && (\r\n              <div className=\"file-list\">\r\n                <h4>Uploaded Documents:</h4>\r\n                {formData.documents.map((doc) => (\r\n                  <div key={doc.id} className=\"file-item\">\r\n                    <div>\r\n                      <div className=\"file-name\">{doc.name}</div>\r\n                      <div className=\"file-size\">\r\n                        {formatFileSize(doc.size)}\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      className=\"remove-file\"\r\n                      onClick={() => removeFile(doc.id)}\r\n                      title=\"Remove file\"\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* OCR Processing Indicator */}\r\n            {ocrProcessing && (\r\n              <div className=\"ocr-processing-simple\">\r\n                <span className=\"simple-spinner\">⏳</span>\r\n                <span>Processing document... {formatTimer(processingTimer)}</span>\r\n              </div>\r\n            )}\r\n\r\n            {/* Document-related fields */}\r\n            <h4>Document Information</h4>\r\n            <div className=\"grid grid-2\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Full Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.customer.fullName}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"fullName\", e.target.value)\r\n                  }\r\n                  disabled={ocrProcessing}\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Date of Birth *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.customer.dob}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"dob\", e.target.value)\r\n                  }\r\n                  disabled={ocrProcessing}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"grid equal-cols\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Complete Address *</label>\r\n                <textarea\r\n                  value={formData.address.line1}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"address\", \"line1\", e.target.value)\r\n                  }\r\n                  rows=\"3\"\r\n                  disabled={ocrProcessing}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    resize: \"vertical\",\r\n                    fontFamily: \"inherit\",\r\n                    fontSize: \"inherit\",\r\n                    padding: \"8px 12px\",\r\n                    border: \"1px solid #ddd\",\r\n                    borderRadius: \"4px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"grid equal-cols\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">ID Type *</label>\r\n                <select\r\n                  value={formData.ids.idType}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"ids\", \"idType\", e.target.value)\r\n                  }\r\n                  required\r\n                  disabled={ocrProcessing}\r\n                >\r\n                  <option value=\"\">Select ID Type</option>\r\n                  <option value=\"aadhaar\">Aadhaar</option>\r\n                  <option value=\"pan\">PAN Card</option>\r\n                  <option value=\"voter\">Voter ID</option>\r\n                  <option value=\"passport\">Passport</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">{formData.ids.idType ? `${formData.ids.idType.toUpperCase()} Number` : 'ID Number'} *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.ids.idNumber}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"ids\", \"idNumber\", e.target.value)\r\n                  }\r\n                  required\r\n                  disabled={ocrProcessing}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 2:\r\n        // Step 2: Contact Info, Address Details, and Product Info\r\n        return (\r\n          <div className=\"form-section\">\r\n            <h3 className=\"form-section-title\">\r\n              Contact & Product Information\r\n            </h3>\r\n\r\n            <h4>Contact Information</h4>\r\n            <div className=\"grid grid-2\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Mobile Number *</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  value={formData.customer.mobile}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"mobile\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Email Address *</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={formData.customer.email}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"email\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <h4>Personal Details</h4>\r\n            <div className=\"grid grid-2\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Occupation</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.customer.occupation}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"occupation\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Income Band</label>\r\n                <select\r\n                  value={formData.customer.income_band}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"customer\", \"income_band\", e.target.value)\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Income Band</option>\r\n                  <option value=\"0-2L\">0-2L</option>\r\n                  <option value=\"2L-5L\">2L-5L</option>\r\n                  <option value=\"5L-10L\">5L-10L</option>\r\n                  <option value=\"10L+\">10L+</option>\r\n                  <option value=\"Not provided\">Not provided</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-1\">\r\n              <div className=\"checkbox-container\">\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.customer.pep}\r\n                    onChange={(e) =>\r\n                      handleInputChange(\"customer\", \"pep\", e.target.checked)\r\n                    }\r\n                  />\r\n                  <span className=\"checkbox-label\">\r\n                    I am a Politically Exposed Person (PEP)\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <h4>Address Details</h4>\r\n            <div className=\"grid grid-2\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">City *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.address.city}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"address\", \"city\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">State *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.address.state}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"address\", \"state\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">PIN Code *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.address.pin}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"address\", \"pin\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Country *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.address.country}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\"address\", \"country\", e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <h4>Product Details</h4>\r\n            <div className=\"grid grid-2\">\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Account Type *</label>\r\n                <select\r\n                  value={formData.product.desired_account}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\r\n                      \"product\",\r\n                      \"desired_account\",\r\n                      e.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Account Type</option>\r\n                  <option value=\"savings\">Savings</option>\r\n                  <option value=\"current\">Current</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"input-group\">\r\n                <label className=\"input-label\">Expected Monthly Balance *</label>\r\n                <select\r\n                  value={formData.product.expected_mab_range}\r\n                  onChange={(e) =>\r\n                    handleInputChange(\r\n                      \"product\",\r\n                      \"expected_mab_range\",\r\n                      e.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Balance Range</option>\r\n                  <option value=\"0-10k\">0-10k</option>\r\n                  <option value=\"10k-25k\">10k-25k</option>\r\n                  <option value=\"25k+\">25k+</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!showOnboarding ? (\r\n        <div className=\"start-screen\">\r\n          <h1>Welcome to Customer Portal</h1>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              gap: \"1rem\",\r\n              justifyContent: \"center\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => setShowOnboarding(true)}\r\n            >\r\n              Start Onboarding\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : isSubmitted ? (\r\n        <>\r\n          <h1 className=\"page-title\">Customer Onboarding</h1>\r\n          {renderSuccessScreen()}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"page-title\">Customer Onboarding</h1>\r\n\r\n          {alerts.map((alert) => (\r\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n              {alert.message}\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"workflow-container\">\r\n            {/* Steps Indicator */}\r\n            <div className=\"step-indicator\">\r\n              {steps.map((step, index) => (\r\n                <div key={step.id} className=\"step\">\r\n                  <div\r\n                    className={`step-circle ${\r\n                      index + 1 < currentStep\r\n                        ? \"completed\"\r\n                        : index + 1 === currentStep\r\n                        ? \"active\"\r\n                        : \"pending\"\r\n                    }`}\r\n                  >\r\n                    {index + 1 < currentStep ? \"✓\" : step.id}\r\n                  </div>\r\n                  <div\r\n                    className={`step-label ${\r\n                      index + 1 < currentStep\r\n                        ? \"completed\"\r\n                        : index + 1 === currentStep\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {step.title}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-fill\"\r\n                style={{\r\n                  width: `${((currentStep - 1) / (steps.length - 1)) * 100}%`,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {renderStepContent()}\r\n\r\n            <div className=\"step-navigation\">\r\n              {currentStep > 1 && (\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={handlePreviousStep}\r\n                  disabled={loading}\r\n                >\r\n                  Previous\r\n                </button>\r\n              )}\r\n              {currentStep === 1 && (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleNextStep}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Processing...\" : \"Next\"}\r\n                </button>\r\n              )}\r\n              {currentStep === 2 && (\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={handleSubmitFromStep2}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? \"Submitting Application...\" : \"Submit Application\"}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOnboarding;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,QAAQ,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,KAAK;MACVC,WAAW,EAAE,cAAc;MAC3BC,UAAU,EAAE;IACd,CAAC;IACDC,OAAO,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE;IACX,CAAC;IACDC,GAAG,EAAE;MACHC,MAAM,EAAE,EAAE;MAAE;MACZC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;IACDC,OAAO,EAAE;MACPC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE;IACtB,CAAC;IACDC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,SAAS;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4C,aAAa,EAAEC,gBAAgB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC8C,MAAM,EAAEC,SAAS,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMkD,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,uBAAuB;IAAEC,MAAM,EAAE;EAAS,CAAC,EAC3D;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,wBAAwB;IAAEC,MAAM,EAAE;EAAU,CAAC,CAC9D;EAEDpD,SAAS,CAAC,MAAM;IACdwC,YAAY,CAAC,QAAQa,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtD,SAAS,CAAC,MAAM;IACd,IAAIuD,QAAQ;IACZ,IAAIZ,aAAa,EAAE;MACjBK,kBAAkB,CAAC,CAAC,CAAC;MACrBO,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BR,kBAAkB,CAACS,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLT,kBAAkB,CAAC,CAAC,CAAC;IACvB;IAEA,OAAO,MAAM;MACX,IAAIO,QAAQ,EAAEG,aAAa,CAACH,QAAQ,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACZ,aAAa,CAAC,CAAC;;EAInB;EACA3C,SAAS,CAAC,MAAM;IACd2D,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE/C,QAAQ,CAACuB,SAAS,CAACyB,MAAM,CAAC;IAC1DF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE/C,QAAQ,CAACuB,SAAS,CAAC;EAC/C,CAAC,EAAE,CAACvB,QAAQ,CAACuB,SAAS,CAAC,CAAC;EAExB,MAAM0B,QAAQ,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,MAAM,KAAK;IAC3C,MAAMC,KAAK,GAAG;MAAEf,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC;MAAES,OAAO;MAAEC;IAAK,CAAC;IAC/ClB,SAAS,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEQ,KAAK,CAAC,CAAC;IACrCC,UAAU,CAAC,MAAM;MACfpB,SAAS,CAAEW,IAAI,IAAKA,IAAI,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAClB,EAAE,KAAKe,KAAK,CAACf,EAAE,CAAC,CAAC;IAC5D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMmB,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,IAAIG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACtD,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACnDlE,WAAW,CAAE2C,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAACqB,OAAO,GAAG;QACT,GAAGrB,IAAI,CAACqB,OAAO,CAAC;QAChB,CAACC,KAAK,GAAGC;MACX;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxCvB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEsB,KAAK,CAAC;IACrCvB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE/C,QAAQ,CAACuB,SAAS,CAAC;IAEnE,MAAM+C,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,GAAG,CAAEC,IAAI,KAAM;MAChDrC,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGkB,IAAI,CAACgB,MAAM,CAAC,CAAC;MAC9BC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,IAAI,EAAEH,IAAI,CAACG,IAAI;MACf1B,IAAI,EAAEuB,IAAI,CAACvB,IAAI;MACfuB,IAAI,EAAEA;IACR,CAAC,CAAC,CAAC;IAEH5B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEuB,QAAQ,CAAC;IAE3CrE,WAAW,CAAE2C,IAAI,IAAK;MACpB,MAAMkC,eAAe,GAAG;QACtB,GAAGlC,IAAI;QACPrB,SAAS,EAAE,CAAC,GAAGqB,IAAI,CAACrB,SAAS,EAAE,GAAG+C,QAAQ;MAC5C,CAAC;MACDxB,OAAO,CAACC,GAAG,CACT,kCAAkC,EAClC+B,eAAe,CAACvD,SAClB,CAAC;MACDuB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE+B,eAAe,CAACvD,SAAS,CAACyB,MAAM,CAAC;;MAEzE;MACAK,UAAU,CAAC,MAAM;QACfP,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CD,OAAO,CAACC,GAAG,CACT,mCAAmC,EACnC+B,eAAe,CAACvD,SAClB,CAAC;MACH,CAAC,EAAE,GAAG,CAAC;MAEP,OAAOuD,eAAe;IACxB,CAAC,CAAC;IAEF7B,QAAQ,CAAC,GAAGqB,QAAQ,CAACtB,MAAM,oCAAoC,EAAE,SAAS,CAAC;;IAE3E;IACA,MAAM,IAAI+B,OAAO,CAAEC,OAAO,IAAK3B,UAAU,CAAC2B,OAAO,EAAE,GAAG,CAAC,CAAC;;IAExD;IACA,IAAIX,KAAK,IAAIA,KAAK,CAACrB,MAAM,GAAG,CAAC,EAAE;MAC7BjB,gBAAgB,CAAC,IAAI,CAAC;MACtBkB,QAAQ,CAAC,iCAAiC,EAAE,MAAM,CAAC;;MAEnD;MACA,MAAMgC,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACrCD,cAAc,CAACE,MAAM,CAAC,MAAM,EAAEd,KAAK,CAAC,CAAC,CAAC,CAAC;MAEvC,IAAI;QACFvB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEsB,KAAK,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC;QAC3D,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;UAC/CC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEFnC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEqC,QAAQ,CAAC7C,MAAM,CAAC;QACpDO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqC,QAAQ,CAACI,OAAO,CAAC;QAEtD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UACvC7C,OAAO,CAAC8C,KAAK,CAAC,gBAAgB,EAAER,QAAQ,CAAC7C,MAAM,EAAEmD,SAAS,CAAC;UAC3D,MAAM,IAAIG,KAAK,CACb,sBAAsBT,QAAQ,CAAC7C,MAAM,MAAMmD,SAAS,EACtD,CAAC;QACH;QAEA,MAAMI,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCjD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE+C,IAAI,CAAC;QAEvC,MAAME,OAAO,GAAGF,IAAI,CAACH,IAAI;QACzB;QACA7C,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEiD,OAAO,CAAC;QAC3ClD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEiD,OAAO,GAAGA,OAAO,CAAChD,MAAM,GAAG,CAAC,CAAC;;QAE7D;QACA,SAASiD,aAAaA,CAACN,IAAI,EAAE;UAC3B7C,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE4C,IAAI,CAAC;UAClC7C,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE4C,IAAI,CAAC3C,MAAM,CAAC;;UAExC;UACA,MAAMkD,KAAK,GAAGP,IAAI,CACfQ,KAAK,CAAC,OAAO,CAAC,CACd1B,GAAG,CAAE2B,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC1B/C,MAAM,CAAE8C,IAAI,IAAKA,IAAI,CAACpD,MAAM,GAAG,CAAC,CAAC;UACpCF,OAAO,CAACC,GAAG,CACT,aAAa,EACbmD,KAAK,CAACzB,GAAG,CAAC,CAAC2B,IAAI,EAAEE,CAAC,KAAK,GAAGA,CAAC,MAAMF,IAAI,GAAG,CAC1C,CAAC;UAED,IAAIjG,QAAQ,GAAG,IAAI;YACjBC,GAAG,GAAG,IAAI;YACVe,QAAQ,GAAG,IAAI;YACfT,OAAO,GAAG,IAAI;;UAEhB;UACAoC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;;UAE9C;UACA,MAAMwD,gBAAgB,GAAGZ,IAAI,CAACa,KAAK,CACjC,gDACF,CAAC;UACD,IAAID,gBAAgB,EAAE;YACpBpG,QAAQ,GAAGoG,gBAAgB,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;YACrCvD,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE5C,QAAQ,CAAC;UAC1D;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,MAAMsG,YAAY,GAAG,CACnB,4CAA4C,EAC5C,6CAA6C;YAAE;YAC/C,4CAA4C,CAAE;YAAA,CAC/C;YAED,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,YAAY,CAACzD,MAAM,EAAEsD,CAAC,EAAE,EAAE;cAC5C,MAAME,KAAK,GAAGb,IAAI,CAACa,KAAK,CAACC,YAAY,CAACH,CAAC,CAAC,CAAC;cACzC,IAAIE,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;gBACrBrG,QAAQ,GAAGqG,KAAK,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC;gBAC1BvD,OAAO,CAACC,GAAG,CAAC,2BAA2BuD,CAAC,GAAG,CAAC,GAAG,EAAEnG,QAAQ,CAAC;gBAC1D;cACF;YACF;UACF;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,KAAK,IAAIiG,IAAI,IAAIF,KAAK,EAAE;cACtB;cACA,IACE,CAAC,IAAI,CAACQ,IAAI,CAACN,IAAI,CAAC,IAChB,CAAC,iIAAiI,CAACM,IAAI,CACrIN,IACF,CAAC,IACDA,IAAI,CAACpD,MAAM,GAAG,CAAC,IACfoD,IAAI,CAACpD,MAAM,GAAG,EAAE,IAChB,6BAA6B,CAAC0D,IAAI,CAACN,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAC/C;gBACAlG,QAAQ,GAAGiG,IAAI,CAACC,IAAI,CAAC,CAAC;gBACtBvD,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE5C,QAAQ,CAAC;gBACrD;cACF;YACF;UACF;;UAEA;UACA2C,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;UAElD,MAAM4D,WAAW,GAAG,CAClB,oFAAoF,EACpF,iFAAiF,EACjF,yCAAyC,EACzC,qFAAqF,EACrF,yCAAyC,CAAE;UAAA,CAC5C;UAED,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,WAAW,CAAC3D,MAAM,EAAEsD,CAAC,EAAE,EAAE;YAC3C,MAAME,KAAK,GAAGb,IAAI,CAACa,KAAK,CAACG,WAAW,CAACL,CAAC,CAAC,CAAC;YACxC,IAAIE,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;cACrBpG,GAAG,GAAGoG,KAAK,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC;cACrBvD,OAAO,CAACC,GAAG,CAAC,0BAA0BuD,CAAC,GAAG,CAAC,GAAG,EAAElG,GAAG,CAAC;cACpD;YACF;UACF;;UAEA;UACA0C,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UAExD,IAAI7B,MAAM,GAAG,EAAE;;UAEf;UACA,MAAM0F,eAAe,GAAG,CACtB,wCAAwC;UAAE;UAC1C,qBAAqB;UAAE;UACvB,mCAAmC;UAAE;UACrC,uCAAuC,CAAE;UAAA,CAC1C;UAED,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,eAAe,CAAC5D,MAAM,EAAEsD,CAAC,EAAE,EAAE;YAC/C,MAAMO,OAAO,GAAGlB,IAAI,CAACa,KAAK,CAACI,eAAe,CAACN,CAAC,CAAC,CAAC;YAC9C,IAAIO,OAAO,EAAE;cACX1F,QAAQ,GAAG0F,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;cACnDnF,MAAM,GAAG,SAAS,CAAC,CAAC;cACpB4B,OAAO,CAACC,GAAG,CAAC,8BAA8BuD,CAAC,GAAG,CAAC,GAAG,EAAEnF,QAAQ,CAAC;cAC7D;YACF;UACF;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,MAAM4F,QAAQ,GAAGpB,IAAI,CAACa,KAAK,CAAC,4BAA4B,CAAC;YACzD,IAAIO,QAAQ,EAAE;cACZ5F,QAAQ,GAAG4F,QAAQ,CAAC,CAAC,CAAC;cACtB7F,MAAM,GAAG,KAAK,CAAC,CAAC;cAChB4B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE5B,QAAQ,CAAC;YACrC;UACF;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,MAAM6F,aAAa,GAAGrB,IAAI,CAACa,KAAK,CAAC,oBAAoB,CAAC;YACtD,IAAIQ,aAAa,EAAE;cACjB7F,QAAQ,GAAG6F,aAAa,CAAC,CAAC,CAAC;cAC3B9F,MAAM,GAAG,UAAU,CAAC,CAAC;cACrB4B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE5B,QAAQ,CAAC;YAC1C;UACF;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,MAAM8F,OAAO,GAAGtB,IAAI,CAACa,KAAK,CACxB,0DACF,CAAC;YACD,IAAIS,OAAO,EAAE;cACX9F,QAAQ,GAAG8F,OAAO,CAAC,CAAC,CAAC;cACrB/F,MAAM,GAAG,OAAO,CAAC,CAAC;cAClB4B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE5B,QAAQ,CAAC;YACjD;UACF;;UAEA;UACA,IAAI,CAACA,QAAQ,EAAE;YACb,MAAM+F,UAAU,GAAGvB,IAAI,CAACa,KAAK,CAAC,uBAAuB,CAAC;YACtD,IAAIU,UAAU,EAAE;cACd/F,QAAQ,GAAG+F,UAAU,CAAC,CAAC,CAAC;cACxBhG,MAAM,GAAG,OAAO,CAAC,CAAC;cAClB4B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE5B,QAAQ,CAAC;YAC1C;UACF;;UAEA;UACA,IACE,CAACD,MAAM,IACP,6DAA6D,CAACwF,IAAI,CAChEf,IACF,CAAC,EACD;YACAzE,MAAM,GAAG,SAAS,CAAC,CAAC;YACpB4B,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;UAC/D;;UAEA;UACA,IACE,CAAC7B,MAAM,IACP,mDAAmD,CAACwF,IAAI,CAACf,IAAI,CAAC,EAC9D;YACAzE,MAAM,GAAG,KAAK,CAAC,CAAC;YAChB4B,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;UAC3D;;UAEA;UACA,IACE,CAAC7B,MAAM,IACP,0CAA0C,CAACwF,IAAI,CAACf,IAAI,CAAC,EACrD;YACAzE,MAAM,GAAG,UAAU,CAAC,CAAC;YACrB4B,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;UAChE;UAEAD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE7B,MAAM,CAAC;;UAErC;UACA4B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;;UAE5C;UACA;UACA,MAAMoE,gBAAgB,GAAGxB,IAAI,CAACa,KAAK,CACjC,+FACF,CAAC;UACD,IAAIW,gBAAgB,EAAE;YACpBzG,OAAO,GAAGyG,gBAAgB,CAAC,CAAC,CAAC,CAC1Bd,IAAI,CAAC,CAAC,CACNS,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;YACvBhE,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAErC,OAAO,CAAC;UACjE;;UAEA;UACA,IAAI,CAACA,OAAO,EAAE;YACZ,MAAM0G,cAAc,GAAGzB,IAAI,CAACa,KAAK,CAC/B,2DACF,CAAC;YACD,IAAIY,cAAc,EAAE;cAClB1G,OAAO,GAAG0G,cAAc,CAAC,CAAC,CAAC,CACxBf,IAAI,CAAC,CAAC,CACNS,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;cACvB;cACApG,OAAO,GAAGA,OAAO,CACdoG,OAAO,CAAC,yCAAyC,EAAE,EAAE,CAAC,CACtDT,IAAI,CAAC,CAAC;cACT3F,OAAO,GAAGA,OAAO,CACdoG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;cACxBhE,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAErC,OAAO,CAAC;YACxD;UACF;;UAEA;UACA,IAAI,CAACA,OAAO,EAAE;YACZ,MAAM2G,aAAa,GAAG1B,IAAI,CAACa,KAAK,CAC9B,0DACF,CAAC;YACD,IAAIa,aAAa,EAAE;cACjB3G,OAAO,GAAG2G,aAAa,CAAC,CAAC,CAAC,CACvBhB,IAAI,CAAC,CAAC,CACNS,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;cACvBhE,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAErC,OAAO,CAAC;YAC7D;UACF;;UAEA;UACA,IAAI,CAACA,OAAO,EAAE;YACZ,MAAM4G,iBAAiB,GAAG,EAAE;;YAE5B;YACA,MAAMC,OAAO,GAAG5B,IAAI,CAACa,KAAK,CAAC,oBAAoB,CAAC;YAChD,IAAIe,OAAO,EAAED,iBAAiB,CAACE,IAAI,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;;YAE/C;YACA,MAAME,UAAU,GAAG9B,IAAI,CAACa,KAAK,CAAC,yBAAyB,CAAC;YACxD,IAAIiB,UAAU,EAAEH,iBAAiB,CAACE,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;;YAErD;YACA,MAAMC,SAAS,GAAG/B,IAAI,CAACa,KAAK,CAAC,qBAAqB,CAAC;YACnD,IAAIkB,SAAS,EAAEJ,iBAAiB,CAACE,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;;YAEnD;YACA,MAAMC,SAAS,GAAGhC,IAAI,CAACa,KAAK,CAAC,iBAAiB,CAAC;YAC/C,IAAImB,SAAS,EAAEL,iBAAiB,CAACE,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;;YAEnD;YACA,MAAMC,UAAU,GAAGjC,IAAI,CAACa,KAAK,CAAC,gCAAgC,CAAC;YAC/D,IAAIoB,UAAU,EAAEN,iBAAiB,CAACE,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC;YAErD,IAAIN,iBAAiB,CAACtE,MAAM,IAAI,CAAC,EAAE;cACjCtC,OAAO,GAAG4G,iBAAiB,CAACO,IAAI,CAAC,IAAI,CAAC;cACtC;cACAnH,OAAO,GAAGA,OAAO,CACdoG,OAAO,CAAC,yCAAyC,EAAE,EAAE,CAAC,CACtDT,IAAI,CAAC,CAAC;cACT3F,OAAO,GAAGA,OAAO,CACdoG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;cACxBhE,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAErC,OAAO,CAAC;YAChE;UACF;;UAEA;UACA,IAAI,CAACA,OAAO,EAAE;YACZ,MAAMoH,YAAY,GAAG,EAAE;YACvB,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAAClD,MAAM,EAAEsD,CAAC,EAAE,EAAE;cACrC,MAAMF,IAAI,GAAGF,KAAK,CAACI,CAAC,CAAC,CAACD,IAAI,CAAC,CAAC;;cAE5B;cACA,IAAI,oBAAoB,CAACK,IAAI,CAACN,IAAI,CAAC,EAAE;gBACnC0B,YAAY,CAACN,IAAI,CAACpB,IAAI,CAAC;gBACvB;cACF;;cAEA;cACA,IACEA,IAAI,CAACpD,MAAM,GAAG,CAAC,IACf,uDAAuD,CAAC0D,IAAI,CAC1DN,IACF,CAAC,IACD,CAAC,8FAA8F,CAACM,IAAI,CAClGN,IACF,CAAC,EACD;gBACA;gBACA,IAAI2B,SAAS,GAAG3B,IAAI,CACjBU,OAAO,CAAC,yCAAyC,EAAE,EAAE,CAAC,CACtDT,IAAI,CAAC,CAAC;gBACT;gBACA0B,SAAS,GAAGA,SAAS,CAClBjB,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACxB,IAAIiB,SAAS,CAAC/E,MAAM,GAAG,CAAC,EAAE;kBACxB8E,YAAY,CAACN,IAAI,CAACO,SAAS,CAAC;gBAC9B;cACF;cAEA,IAAID,YAAY,CAAC9E,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;YACvC;YAEA,IAAI8E,YAAY,CAAC9E,MAAM,GAAG,CAAC,EAAE;cAC3BtC,OAAO,GAAGoH,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;cACjC/E,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAErC,OAAO,CAAC;YACzD;UACF;;UAEA;UACA,IAAIsH,YAAY,GAAG5H,GAAG;UACtB,IAAIA,GAAG,EAAE;YACP,IAAI;cACF;cACA,IAAI,2BAA2B,CAACsG,IAAI,CAACtG,GAAG,CAAC,EAAE;gBACzC,MAAM,CAAC6H,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAG/H,GAAG,CAAC+F,KAAK,CAAC,GAAG,CAAC;gBACzC6B,YAAY,GAAG,GAAGG,IAAI,IAAID,KAAK,CAACnE,QAAQ,CACtC,CAAC,EACD,GACF,CAAC,IAAIkE,GAAG,CAAClE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;cAC7B;cACA;cAAA,KACK,IAAI,yBAAyB,CAAC2C,IAAI,CAACtG,GAAG,CAAC,EAAE;gBAC5C,MAAM,CAAC6H,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAG/H,GAAG,CAAC+F,KAAK,CAAC,GAAG,CAAC;gBACzC6B,YAAY,GAAG,GAAGG,IAAI,IAAID,KAAK,CAACnE,QAAQ,CACtC,CAAC,EACD,GACF,CAAC,IAAIkE,GAAG,CAAClE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;cAC7B;cACA;cAAA,KACK,IAAI,+BAA+B,CAAC2C,IAAI,CAACtG,GAAG,CAAC,EAAE;gBAClD,MAAMgI,IAAI,GAAG,IAAI5F,IAAI,CAACpC,GAAG,CAAC;gBAC1B,IAAI,CAACiI,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;kBAC1BN,YAAY,GAAGI,IAAI,CAACG,WAAW,CAAC,CAAC,CAACpC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjD;cACF;cACArD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE3C,GAAG,EAAE,IAAI,EAAE4H,YAAY,CAAC;YAC5D,CAAC,CAAC,OAAOpC,KAAK,EAAE;cACd9C,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE3C,GAAG,CAAC;cAC1D4H,YAAY,GAAG5H,GAAG;YACpB;UACF;UAEA,MAAMoI,MAAM,GAAG;YACbrI,QAAQ;YACRC,GAAG,EAAE4H,YAAY;YACjB7G,QAAQ;YACRD,MAAM;YACNR;UACF,CAAC;UACDoC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;UAC5CD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE5C,QAAQ,CAAC;UACnC2C,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEiF,YAAY,CAAC;UAC7ClF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE7B,MAAM,CAAC;UAC/B4B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE5B,QAAQ,CAAC;UACnC2B,OAAO,CAACC,GAAG,CAAC,UAAU,EAAErC,OAAO,CAAC;UAEhC,OAAO8H,MAAM;QACf;QAEA,MAAMC,SAAS,GAAGxC,aAAa,CAACD,OAAO,CAAC;QAExClD,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE0F,SAAS,CAAC;;QAElD;QACAxI,WAAW,CAAEyI,YAAY,IAAK;UAC5B5F,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE2F,YAAY,CAAC;UACjE5F,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE2F,YAAY,CAACnH,SAAS,CAAC;UACnEuB,OAAO,CAACC,GAAG,CACT,oCAAoC,EACpC2F,YAAY,CAACnH,SAAS,CAACyB,MACzB,CAAC;UAED,MAAM2F,WAAW,GAAG;YAClB,GAAGD,YAAY;YACfxI,QAAQ,EAAE;cACR,GAAGwI,YAAY,CAACxI,QAAQ;cACxBC,QAAQ,EAAEsI,SAAS,CAACtI,QAAQ,IAAIuI,YAAY,CAACxI,QAAQ,CAACC,QAAQ;cAC9DC,GAAG,EAAEqI,SAAS,CAACrI,GAAG,IAAIsI,YAAY,CAACxI,QAAQ,CAACE;YAC9C,CAAC;YACDa,GAAG,EAAE;cACH,GAAGyH,YAAY,CAACzH,GAAG;cACnBC,MAAM,EAAEuH,SAAS,CAACvH,MAAM,IAAIwH,YAAY,CAACzH,GAAG,CAACC,MAAM;cACnDC,QAAQ,EAAEsH,SAAS,CAACtH,QAAQ,IAAIuH,YAAY,CAACzH,GAAG,CAACE;YACnD,CAAC;YACDT,OAAO,EAAE;cACP,GAAGgI,YAAY,CAAChI,OAAO;cACvBC,KAAK,EAAE8H,SAAS,CAAC/H,OAAO,IAAIgI,YAAY,CAAChI,OAAO,CAACC;YACnD,CAAC;YACD;YACAY,SAAS,EAAEmH,YAAY,CAACnH;UAC1B,CAAC;UAEDuB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE4F,WAAW,CAAC;UAC3D7F,OAAO,CAACC,GAAG,CACT,uCAAuC,EACvC4F,WAAW,CAACpH,SACd,CAAC;UACDuB,OAAO,CAACC,GAAG,CACT,6CAA6C,EAC7C4F,WAAW,CAACpH,SAAS,CAACyB,MACxB,CAAC;UAED,OAAO2F,WAAW;QACpB,CAAC,CAAC;QAEF,IACEF,SAAS,CAACtI,QAAQ,IAClBsI,SAAS,CAACrI,GAAG,IACbqI,SAAS,CAACvH,MAAM,IAChBuH,SAAS,CAACtH,QAAQ,IAClBsH,SAAS,CAAC/H,OAAO,EACjB;UACAuC,QAAQ,CACN,wEAAwE,EACxE,SACF,CAAC;QACH,CAAC,MAAM;UACLA,QAAQ,CACN,+DAA+D,EAC/D,SACF,CAAC;QACH;MACF,CAAC,CAAC,OAAO2F,GAAG,EAAE;QACZ9F,OAAO,CAAC8C,KAAK,CAAC,uBAAuB,EAAEgD,GAAG,CAAC;QAC3C3F,QAAQ,CACN,4CAA4C2F,GAAG,CAAC1F,OAAO,yBAAyB,EAChF,OACF,CAAC;MACH,CAAC,SAAS;QACRnB,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAC,MAAM;MACLA,gBAAgB,CAAC,KAAK,CAAC;IACzB;IACA;EACF,CAAC;EAED,MAAM8G,UAAU,GAAIC,MAAM,IAAK;IAC7B7I,WAAW,CAAE2C,IAAI,KAAM;MACrB,GAAGA,IAAI;MACPrB,SAAS,EAAEqB,IAAI,CAACrB,SAAS,CAAC+B,MAAM,CAAEyF,GAAG,IAAKA,GAAG,CAAC1G,EAAE,KAAKyG,MAAM;IAC7D,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCnH,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM,IAAIkD,OAAO,CAAEC,OAAO,IAAK3B,UAAU,CAAC2B,OAAO,EAAE,IAAI,CAAC,CAAC;IAEzD,IAAIpF,WAAW,KAAK,CAAC,EAAE;MACrB;MACAkD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCD,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE/C,QAAQ,CAACuB,SAAS,CAAC;MAC9DuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE/C,QAAQ,CAACuB,SAAS,CAACyB,MAAM,CAAC;MAE3D,IAAIhD,QAAQ,CAACuB,SAAS,CAACyB,MAAM,KAAK,CAAC,EAAE;QACnCF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpDE,QAAQ,CAAC,qCAAqC,EAAE,OAAO,CAAC;QACxDpB,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MACA;MACA,MAAM;QAAE3B,QAAQ;QAAEe,GAAG;QAAEP;MAAQ,CAAC,GAAGV,QAAQ;MAC3C,IACE,CAACE,QAAQ,CAACC,QAAQ,IAClB,CAACD,QAAQ,CAACE,GAAG,IACb,CAACM,OAAO,CAACC,KAAK,IACd,CAACM,GAAG,CAACC,MAAM,IACX,CAACD,GAAG,CAACE,QAAQ,EACb;QACA8B,QAAQ,CAAC,kDAAkD,EAAE,OAAO,CAAC;QACrEpB,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MACAoB,QAAQ,CACN,6EAA6E,EAC7E,SACF,CAAC;MACDpD,cAAc,CAAE+C,IAAI,IAAKe,IAAI,CAACsF,GAAG,CAACrG,IAAI,GAAG,CAAC,EAAER,KAAK,CAACY,MAAM,CAAC,CAAC;IAC5D;IAEAnB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMqH,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxCrH,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,MAAM;MAAE3B,QAAQ;MAAEQ,OAAO;MAAEU;IAAQ,CAAC,GAAGpB,QAAQ;IAC/C,IACE,CAACE,QAAQ,CAACG,MAAM,IAChB,CAACH,QAAQ,CAACI,KAAK,IACf,CAACI,OAAO,CAACG,IAAI,IACb,CAACH,OAAO,CAACI,KAAK,IACd,CAACJ,OAAO,CAACK,GAAG,IACZ,CAACL,OAAO,CAACM,OAAO,IAChB,CAACI,OAAO,CAACC,eAAe,IACxB,CAACD,OAAO,CAACE,kBAAkB,EAC3B;MACA2B,QAAQ,CAAC,kDAAkD,EAAE,OAAO,CAAC;MACrEpB,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;;IAEA;IACA,MAAMsH,uBAAuB,CAAC,CAAC;EACjC,CAAC;EAED,MAAMA,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1CtH,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMuH,QAAQ,GAAG;QACflJ,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;QAC3BQ,OAAO,EAAEV,QAAQ,CAACU,OAAO;QACzBO,GAAG,EAAEjB,QAAQ,CAACiB,GAAG;QACjBG,OAAO,EAAEpB,QAAQ,CAACoB,OAAO;QACzBiI,mBAAmB,EAAE,IAAI7G,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC;MAC9C,CAAC;MAEDzF,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvDD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEqG,QAAQ,CAAC;MACnCtG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE/C,QAAQ,CAACuB,SAAS,CAAC;;MAE7C;MACA,MAAM0D,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACrCD,cAAc,CAACE,MAAM,CAAC,UAAU,EAAEmE,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAE3DtG,OAAO,CAACC,GAAG,CACT,2BAA2B,EAC3BuG,IAAI,CAACC,SAAS,CAACH,QAAQ,EAAE,IAAI,EAAE,CAAC,CAClC,CAAC;;MAED;MACA,IAAIpJ,QAAQ,CAACuB,SAAS,CAACyB,MAAM,GAAG,CAAC,EAAE;QACjC,MAAMwG,UAAU,GAAGxJ,QAAQ,CAACuB,SAAS,CAAC,CAAC,CAAC;QACxCuB,OAAO,CAACC,GAAG,CACT,4BAA4B,EAC5ByG,UAAU,CAAC5E,IAAI,EACf4E,UAAU,CAAC3E,IACb,CAAC;;QAED;QACA,MAAMH,IAAI,GAAG8E,UAAU,CAAC9E,IAAI;QAC5BO,cAAc,CAACE,MAAM,CAAC,UAAU,EAAET,IAAI,CAAC;QAEvC5B,OAAO,CAACC,GAAG,CACT,2BAA2B,EAC3B2B,IAAI,CAACE,IAAI,EACTF,IAAI,CAACG,IAAI,EACTH,IAAI,CAACvB,IACP,CAAC;MACH,CAAC,MAAM;QACLF,QAAQ,CAAC,8BAA8B,EAAE,OAAO,CAAC;QACjDpB,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAM4H,YAAY,GAAG,MAAMpE,KAAK,CAAC,mBAAmB,EAAE;QACpDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACwE,YAAY,CAAChE,EAAE,EAAE;QACpB,MAAM,IAAII,KAAK,CAAC,sBAAsB4D,YAAY,CAAClH,MAAM,EAAE,CAAC;MAC9D;MAEA,MAAMmH,UAAU,GAAG,MAAMD,YAAY,CAAC1D,IAAI,CAAC,CAAC;MAC5CjD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE2G,UAAU,CAAC;;MAEhD;MACA/H,YAAY,CAAC+H,UAAU,CAACC,kBAAkB,CAAC;;MAE3C;MACA,MAAM,IAAI5E,OAAO,CAAEC,OAAO,IAAK3B,UAAU,CAAC2B,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEzD;MACA,MAAM4E,UAAU,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;MAC5C,MAAMC,UAAU,GACdD,UAAU,CAACjG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGiF,UAAU,CAAC5G,MAAM,CAAC,CAAC;MAC3D,MAAM8G,YAAY,GAAGD,UAAU,KAAK,KAAK,CAAC,CAAC;;MAE3C,MAAM/E,eAAe,GAAG;QACtB,GAAG9E,QAAQ;QACX+J,cAAc,EAAED,YAAY,GAAG,eAAe,GAAG,eAAe;QAChET,mBAAmB,EAAE,IAAI7G,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC,CAAC;QAC7CyB,SAAS,EAAEH,UAAU;QACrBI,cAAc,EAAEH,YAAY,GAAG,QAAQ,GAAG,QAAQ;QAClDI,eAAe,EAAE,CACf;UACEC,IAAI,EAAE,uBAAuB;UAC7B5H,MAAM,EAAE,WAAW;UACnB6H,SAAS,EAAE,IAAI5H,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC,CAAC;UACnC8B,WAAW,EAAE;QACf,CAAC,EACD;UACEF,IAAI,EAAE,gBAAgB;UACtB5H,MAAM,EAAE,WAAW;UACnB6H,SAAS,EAAE,IAAI5H,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC,CAAC;UACnC8B,WAAW,EAAE,uCAAuCR,UAAU;QAChE,CAAC,EACD,IAAIC,YAAY,GACZ,CACE;UACEK,IAAI,EAAE,eAAe;UACrB5H,MAAM,EAAE,aAAa;UACrB6H,SAAS,EAAE,IAAI5H,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC,CAAC;UACnC8B,WAAW,EAAE;QACf,CAAC,CACF,GACD,CACE;UACEF,IAAI,EAAE,eAAe;UACrB5H,MAAM,EAAE,SAAS;UACjB6H,SAAS,EAAE,IAAI5H,IAAI,CAAC,CAAC,CAAC+F,WAAW,CAAC,CAAC;UACnC8B,WAAW,EACT;QACJ,CAAC,CACF,CAAC;MAEV,CAAC;;MAED;MACApK,WAAW,CAAC6E,eAAe,CAAC;;MAE5B;MACA,MAAMwF,oBAAoB,GAAGhB,IAAI,CAACiB,KAAK,CACrCC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,IAAI,IACnD,CAAC;MACD,MAAMC,cAAc,GAAG;QACrB,GAAG5F,eAAe;QAClBzC,EAAE,EAAEX,SAAS;QACba,MAAM,EAAEuH,YAAY,GAAG,eAAe,GAAG;MAC3C,CAAC;MAEDQ,oBAAoB,CAAC9C,IAAI,CAACkD,cAAc,CAAC;MACzCF,YAAY,CAACG,OAAO,CAClB,uBAAuB,EACvBrB,IAAI,CAACC,SAAS,CAACe,oBAAoB,CACrC,CAAC;;MAED;MACAM,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAE1C,IAAIhB,YAAY,EAAE;QAChB7G,QAAQ,CACN,qCAAqCyG,UAAU,CAACC,kBAAkB,EAAE,EACpE,SACF,CAAC;MACH,CAAC,MAAM;QACL1G,QAAQ,CACN,mDAAmD4G,UAAU,CAACkB,WAAW,CAAC,CAAC,2BAA2B,EACtG,MACF,CAAC;MACH;;MAEA;MACAhL,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAO6F,KAAK,EAAE;MACd9C,OAAO,CAAC8C,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD3C,QAAQ,CAAC,uCAAuC2C,KAAK,CAAC1C,OAAO,EAAE,EAAE,OAAO,CAAC;IAC3E;IAEArB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMmJ,kBAAkB,GAAGA,CAAA,KAAM;IAC/BnL,cAAc,CAAE+C,IAAI,IAAKe,IAAI,CAACsH,GAAG,CAACrI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACjD,CAAC;EAID,MAAMsI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,QAAQA,KAAK;MACX,KAAK,KAAK;QACR,OAAO,SAAS;MAClB,KAAK,QAAQ;QACX,OAAO,SAAS;MAClB,KAAK,MAAM;QACT,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMC,cAAc,GAAI7I,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,gBAAgB;QACnB,OAAO,SAAS;MAClB,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,UAAU;QACb,OAAO,SAAS;MAClB,KAAK,0BAA0B;QAC7B,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAM8I,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMlF,CAAC,GAAG3C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACZ,GAAG,CAACuI,KAAK,CAAC,GAAG3H,IAAI,CAACZ,GAAG,CAACwI,CAAC,CAAC,CAAC;IACnD,OAAOE,UAAU,CAAC,CAACH,KAAK,GAAG3H,IAAI,CAAC+H,GAAG,CAACH,CAAC,EAAEjF,CAAC,CAAC,EAAEqF,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,KAAK,CAAClF,CAAC,CAAC;EACzE,CAAC;EAED,MAAMsF,mBAAmB,GAAGA,CAAA,KAAM;IAChC,oBACEvM,OAAA;MAAKwM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzM,OAAA;QAAIwM,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/D7M,OAAA;QAAKwM,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCzM,OAAA;UAAKwM,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCzM,OAAA;YAAAyM,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC7M,OAAA;YAAAyM,QAAA,EAAG;UAIH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEN7M,OAAA;UAAKwM,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BzM,OAAA;YAAAyM,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B7M,OAAA;YAAKwM,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BzM,OAAA;cAAAyM,QAAA,eACEzM,OAAA;gBAAAyM,QAAA,EAAQ;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACP7M,OAAA;cAAAyM,QAAA,EAAOpK,SAAS,IAAI;YAAY;cAAAqK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACN7M,OAAA;YAAKwM,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BzM,OAAA;cAAAyM,QAAA,eACEzM,OAAA;gBAAAyM,QAAA,EAAQ;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACP7M,OAAA;cAAAyM,QAAA,EAAO,IAAItJ,IAAI,CAAC,CAAC,CAAC2J,kBAAkB,CAAC;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACN7M,OAAA;YAAKwM,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BzM,OAAA;cAAAyM,QAAA,eACEzM,OAAA;gBAAAyM,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACP7M,OAAA;cAAAyM,QAAA,EAAM;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN7M,OAAA;UAAK+M,KAAK,EAAE;YAAEC,SAAS,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAAR,QAAA,eACrDzM,OAAA;YACEwM,SAAS,EAAC,iBAAiB;YAC3BU,OAAO,EAAEA,CAAA,KAAM;cACbxM,cAAc,CAAC,KAAK,CAAC;cACrBJ,iBAAiB,CAAC,KAAK,CAAC;cACxBE,cAAc,CAAC,CAAC,CAAC;cACjBI,WAAW,CAAC;gBACVC,QAAQ,EAAE;kBACRC,QAAQ,EAAE,EAAE;kBACZC,GAAG,EAAE,EAAE;kBACPC,MAAM,EAAE,EAAE;kBACVC,KAAK,EAAE,EAAE;kBACTC,GAAG,EAAE,KAAK;kBACVC,WAAW,EAAE,cAAc;kBAC3BC,UAAU,EAAE;gBACd,CAAC;gBACDC,OAAO,EAAE;kBACPC,KAAK,EAAE,EAAE;kBACTC,KAAK,EAAE,EAAE;kBACTC,IAAI,EAAE,EAAE;kBACRC,KAAK,EAAE,EAAE;kBACTC,GAAG,EAAE,EAAE;kBACPC,OAAO,EAAE;gBACX,CAAC;gBACDC,GAAG,EAAE;kBACHC,MAAM,EAAE,EAAE;kBACVC,QAAQ,EAAE;gBACZ,CAAC;gBACDC,OAAO,EAAE;kBACPC,eAAe,EAAE,EAAE;kBACnBC,kBAAkB,EAAE;gBACtB,CAAC;gBACDC,SAAS,EAAE,EAAE;gBACbC,SAAS,EAAE,SAAS;gBACpBC,cAAc,EAAE;cAClB,CAAC,CAAC;YACJ,CAAE;YAAAqK,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAID,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAQ5M,WAAW;MACjB,KAAK,CAAC;QACJ;QACA,oBACEP,OAAA;UAAKwM,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BzM,OAAA;YAAIwM,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACL7M,OAAA;YACEwM,SAAS,EAAC,iBAAiB;YAC3BY,MAAM,EAAE,MAAOC,CAAC,IAAK;cACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;cAClB,IAAI,CAAC7K,aAAa,EAAE;gBAClB,MAAMsC,gBAAgB,CAACsI,CAAC,CAACE,YAAY,CAACvI,KAAK,CAAC;cAC9C;YACF,CAAE;YACFwI,UAAU,EAAGH,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;YACtCJ,OAAO,EAAEA,CAAA,KAAM;cACb,IAAI,CAACzK,aAAa,EAAE;gBAClBgL,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC,CAAC;cAC/C;YACF,CAAE;YACFZ,KAAK,EAAE;cACLa,OAAO,EAAEnL,aAAa,GAAG,GAAG,GAAG,CAAC;cAChCoL,MAAM,EAAEpL,aAAa,GAAG,aAAa,GAAG;YAC1C,CAAE;YAAAgK,QAAA,GAEDhK,aAAa,gBACZzC,OAAA,CAAAE,SAAA;cAAAuM,QAAA,gBACEzM,OAAA;gBAAKwM,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7BzM,OAAA;kBAAKwM,SAAS,EAAC;gBAAS;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACN7M,OAAA;gBAAKwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzM,OAAA;kBAAAyM,QAAA,EAAG;gBAA+B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACtC7M,OAAA;kBAAAyM,QAAA,EAAG;gBAGH;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,eACN,CAAC,gBAEH7M,OAAA,CAAAE,SAAA;cAAAuM,QAAA,gBACEzM,OAAA;gBAAKwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrC7M,OAAA;gBAAKwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1BzM,OAAA;kBAAAyM,QAAA,EAAG;gBAAqD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eAC5D7M,OAAA;kBAAAyM,QAAA,EAAG;gBAAgD;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC;YAAA,eACN,CACH,eACD7M,OAAA;cACEgD,EAAE,EAAC,YAAY;cACfc,IAAI,EAAC,MAAM;cACXgK,QAAQ;cACRC,MAAM,EAAC,sBAAsB;cAC7BhB,KAAK,EAAE;gBAAEiB,OAAO,EAAE;cAAO,CAAE;cAC3BC,QAAQ,EAAE,MAAOZ,CAAC,IAAK;gBACrB,IAAI,CAAC5K,aAAa,EAAE;kBAClB,MAAMsC,gBAAgB,CAACsI,CAAC,CAACa,MAAM,CAAClJ,KAAK,CAAC;gBACxC;cACF;YAAE;cAAA0H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAELlM,QAAQ,CAACuB,SAAS,CAACyB,MAAM,GAAG,CAAC,iBAC5B3D,OAAA;YAAKwM,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBzM,OAAA;cAAAyM,QAAA,EAAI;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC3BlM,QAAQ,CAACuB,SAAS,CAACkD,GAAG,CAAEsE,GAAG,iBAC1B1J,OAAA;cAAkBwM,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACrCzM,OAAA;gBAAAyM,QAAA,gBACEzM,OAAA;kBAAKwM,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAE/C,GAAG,CAACnE;gBAAI;kBAAAmH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3C7M,OAAA;kBAAKwM,SAAS,EAAC,WAAW;kBAAAC,QAAA,EACvBT,cAAc,CAACtC,GAAG,CAAClE,IAAI;gBAAC;kBAAAkH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACN7M,OAAA;gBACEwM,SAAS,EAAC,aAAa;gBACvBU,OAAO,EAAEA,CAAA,KAAM1D,UAAU,CAACE,GAAG,CAAC1G,EAAE,CAAE;gBAClCC,KAAK,EAAC,aAAa;gBAAAwJ,QAAA,EACpB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAbDnD,GAAG,CAAC1G,EAAE;cAAA0J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcX,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,EAGApK,aAAa,iBACZzC,OAAA;YAAKwM,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpCzM,OAAA;cAAMwM,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzC7M,OAAA;cAAAyM,QAAA,GAAM,yBAAuB,EAACtI,WAAW,CAACtB,eAAe,CAAC;YAAA;cAAA6J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CACN,eAGD7M,OAAA;YAAAyM,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7B7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAClD7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACC,QAAS;gBAClCmN,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,UAAU,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CACzD;gBACDqJ,QAAQ,EAAE1L;cAAc;gBAAAiK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtD7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACE,GAAI;gBAC7BkN,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,KAAK,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CACpD;gBACDqJ,QAAQ,EAAE1L;cAAc;gBAAAiK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN7M,OAAA;YAAKwM,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzD7M,OAAA;gBACE8E,KAAK,EAAEnE,QAAQ,CAACU,OAAO,CAACC,KAAM;gBAC9B2M,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,SAAS,EAAE,OAAO,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CACrD;gBACDsJ,IAAI,EAAC,GAAG;gBACRD,QAAQ,EAAE1L,aAAc;gBACxBsK,KAAK,EAAE;kBACLsB,KAAK,EAAE,MAAM;kBACbC,MAAM,EAAE,UAAU;kBAClBC,UAAU,EAAE,SAAS;kBACrBC,QAAQ,EAAE,SAAS;kBACnBC,OAAO,EAAE,UAAU;kBACnBC,MAAM,EAAE,gBAAgB;kBACxBC,YAAY,EAAE;gBAChB;cAAE;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN7M,OAAA;YAAKwM,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChD7M,OAAA;gBACE8E,KAAK,EAAEnE,QAAQ,CAACiB,GAAG,CAACC,MAAO;gBAC3BoM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CAClD;gBACD8J,QAAQ;gBACRT,QAAQ,EAAE1L,aAAc;gBAAAgK,QAAA,gBAExBzM,OAAA;kBAAQ8E,KAAK,EAAC,EAAE;kBAAA2H,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxC7M,OAAA;kBAAQ8E,KAAK,EAAC,SAAS;kBAAA2H,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxC7M,OAAA;kBAAQ8E,KAAK,EAAC,KAAK;kBAAA2H,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACrC7M,OAAA;kBAAQ8E,KAAK,EAAC,OAAO;kBAAA2H,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACvC7M,OAAA;kBAAQ8E,KAAK,EAAC,UAAU;kBAAA2H,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAE9L,QAAQ,CAACiB,GAAG,CAACC,MAAM,GAAG,GAAGlB,QAAQ,CAACiB,GAAG,CAACC,MAAM,CAAC6J,WAAW,CAAC,CAAC,SAAS,GAAG,WAAW,EAAC,IAAE;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5H7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACiB,GAAG,CAACE,QAAS;gBAC7BmM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,KAAK,EAAE,UAAU,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CACpD;gBACD8J,QAAQ;gBACRT,QAAQ,EAAE1L;cAAc;gBAAAiK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAGV,KAAK,CAAC;QACJ;QACA,oBACE7M,OAAA;UAAKwM,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BzM,OAAA;YAAIwM,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEL7M,OAAA;YAAAyM,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5B7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtD7M,OAAA;gBACE8D,IAAI,EAAC,KAAK;gBACVgB,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACG,MAAO;gBAChCiN,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,QAAQ,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACvD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtD7M,OAAA;gBACE8D,IAAI,EAAC,OAAO;gBACZgB,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACI,KAAM;gBAC/BgN,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,OAAO,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACtD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7M,OAAA;YAAAyM,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjD7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACO,UAAW;gBACpC6M,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,YAAY,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cAC3D;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAClD7M,OAAA;gBACE8E,KAAK,EAAEnE,QAAQ,CAACE,QAAQ,CAACM,WAAY;gBACrC8M,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,aAAa,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK,CAC5D;gBAAA2H,QAAA,gBAEDzM,OAAA;kBAAQ8E,KAAK,EAAC,EAAE;kBAAA2H,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC5C7M,OAAA;kBAAQ8E,KAAK,EAAC,MAAM;kBAAA2H,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC7M,OAAA;kBAAQ8E,KAAK,EAAC,OAAO;kBAAA2H,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpC7M,OAAA;kBAAQ8E,KAAK,EAAC,QAAQ;kBAAA2H,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC7M,OAAA;kBAAQ8E,KAAK,EAAC,MAAM;kBAAA2H,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC7M,OAAA;kBAAQ8E,KAAK,EAAC,cAAc;kBAAA2H,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BzM,OAAA;cAAKwM,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eACjCzM,OAAA;gBAAAyM,QAAA,gBACEzM,OAAA;kBACE8D,IAAI,EAAC,UAAU;kBACf+K,OAAO,EAAElO,QAAQ,CAACE,QAAQ,CAACK,GAAI;kBAC/B+M,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,UAAU,EAAE,KAAK,EAAE0I,CAAC,CAACa,MAAM,CAACW,OAAO;gBACtD;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACF7M,OAAA;kBAAMwM,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAEjC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7M,OAAA;YAAAyM,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7C7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACU,OAAO,CAACG,IAAK;gBAC7ByM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACpD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9C7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACU,OAAO,CAACI,KAAM;gBAC9BwM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,SAAS,EAAE,OAAO,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACrD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjD7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACU,OAAO,CAACK,GAAI;gBAC5BuM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,SAAS,EAAE,KAAK,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACnD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChD7M,OAAA;gBACE8D,IAAI,EAAC,MAAM;gBACXgB,KAAK,EAAEnE,QAAQ,CAACU,OAAO,CAACM,OAAQ;gBAChCsM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE0I,CAAC,CAACa,MAAM,CAACpJ,KAAK;cACvD;gBAAA4H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN7M,OAAA;YAAAyM,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB7M,OAAA;YAAKwM,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BzM,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrD7M,OAAA;gBACE8E,KAAK,EAAEnE,QAAQ,CAACoB,OAAO,CAACC,eAAgB;gBACxCiM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CACf,SAAS,EACT,iBAAiB,EACjB0I,CAAC,CAACa,MAAM,CAACpJ,KACX,CACD;gBAAA2H,QAAA,gBAEDzM,OAAA;kBAAQ8E,KAAK,EAAC,EAAE;kBAAA2H,QAAA,EAAC;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC7C7M,OAAA;kBAAQ8E,KAAK,EAAC,SAAS;kBAAA2H,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxC7M,OAAA;kBAAQ8E,KAAK,EAAC,SAAS;kBAAA2H,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BzM,OAAA;gBAAOwM,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAA0B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjE7M,OAAA;gBACE8E,KAAK,EAAEnE,QAAQ,CAACoB,OAAO,CAACE,kBAAmB;gBAC3CgM,QAAQ,EAAGZ,CAAC,IACV1I,iBAAiB,CACf,SAAS,EACT,oBAAoB,EACpB0I,CAAC,CAACa,MAAM,CAACpJ,KACX,CACD;gBAAA2H,QAAA,gBAEDzM,OAAA;kBAAQ8E,KAAK,EAAC,EAAE;kBAAA2H,QAAA,EAAC;gBAAoB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC9C7M,OAAA;kBAAQ8E,KAAK,EAAC,OAAO;kBAAA2H,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACpC7M,OAAA;kBAAQ8E,KAAK,EAAC,SAAS;kBAAA2H,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxC7M,OAAA;kBAAQ8E,KAAK,EAAC,MAAM;kBAAA2H,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAGV;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACE7M,OAAA;IAAKwM,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvB,CAACpM,cAAc,gBACdL,OAAA;MAAKwM,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzM,OAAA;QAAAyM,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC7M,OAAA;QACE+M,KAAK,EAAE;UACLiB,OAAO,EAAE,MAAM;UACfc,GAAG,EAAE,MAAM;UACXC,cAAc,EAAE,QAAQ;UACxBC,QAAQ,EAAE;QACZ,CAAE;QAAAvC,QAAA,eAEFzM,OAAA;UACEwM,SAAS,EAAC,iBAAiB;UAC3BU,OAAO,EAAEA,CAAA,KAAM5M,iBAAiB,CAAC,IAAI,CAAE;UAAAmM,QAAA,EACxC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,GACJpM,WAAW,gBACbT,OAAA,CAAAE,SAAA;MAAAuM,QAAA,gBACEzM,OAAA;QAAIwM,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClDN,mBAAmB,CAAC,CAAC;IAAA,eACtB,CAAC,gBAEHvM,OAAA,CAAAE,SAAA;MAAAuM,QAAA,gBACEzM,OAAA;QAAIwM,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAElDlK,MAAM,CAACyC,GAAG,CAAErB,KAAK,iBAChB/D,OAAA;QAAoBwM,SAAS,EAAE,eAAezI,KAAK,CAACD,IAAI,EAAG;QAAA2I,QAAA,EACxD1I,KAAK,CAACF;MAAO,GADNE,KAAK,CAACf,EAAE;QAAA0J,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN,CAAC,eAEF7M,OAAA;QAAKwM,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAEjCzM,OAAA;UAAKwM,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5B1J,KAAK,CAACqC,GAAG,CAAC,CAAC0F,IAAI,EAAEmE,KAAK,kBACrBjP,OAAA;YAAmBwM,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACjCzM,OAAA;cACEwM,SAAS,EAAE,eACTyC,KAAK,GAAG,CAAC,GAAG1O,WAAW,GACnB,WAAW,GACX0O,KAAK,GAAG,CAAC,KAAK1O,WAAW,GACzB,QAAQ,GACR,SAAS,EACZ;cAAAkM,QAAA,EAEFwC,KAAK,GAAG,CAAC,GAAG1O,WAAW,GAAG,GAAG,GAAGuK,IAAI,CAAC9H;YAAE;cAAA0J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACN7M,OAAA;cACEwM,SAAS,EAAE,cACTyC,KAAK,GAAG,CAAC,GAAG1O,WAAW,GACnB,WAAW,GACX0O,KAAK,GAAG,CAAC,KAAK1O,WAAW,GACzB,QAAQ,GACR,EAAE,EACL;cAAAkM,QAAA,EAEF3B,IAAI,CAAC7H;YAAK;cAAAyJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA,GAtBE/B,IAAI,CAAC9H,EAAE;YAAA0J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuBZ,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN7M,OAAA;UAAKwM,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BzM,OAAA;YACEwM,SAAS,EAAC,eAAe;YACzBO,KAAK,EAAE;cACLsB,KAAK,EAAE,GAAI,CAAC9N,WAAW,GAAG,CAAC,KAAKwC,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC,GAAI,GAAG;YAC1D;UAAE;YAAA+I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAELM,iBAAiB,CAAC,CAAC,eAEpBnN,OAAA;UAAKwM,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC7BlM,WAAW,GAAG,CAAC,iBACdP,OAAA;YACEwM,SAAS,EAAC,mBAAmB;YAC7BU,OAAO,EAAEvB,kBAAmB;YAC5BwC,QAAQ,EAAE5L,OAAQ;YAAAkK,QAAA,EACnB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EACAtM,WAAW,KAAK,CAAC,iBAChBP,OAAA;YACEwM,SAAS,EAAC,iBAAiB;YAC3BU,OAAO,EAAEvD,cAAe;YACxBwE,QAAQ,EAAE5L,OAAQ;YAAAkK,QAAA,EAEjBlK,OAAO,GAAG,eAAe,GAAG;UAAM;YAAAmK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CACT,EACAtM,WAAW,KAAK,CAAC,iBAChBP,OAAA;YACEwM,SAAS,EAAC,iBAAiB;YAC3BU,OAAO,EAAErD,qBAAsB;YAC/BsE,QAAQ,EAAE5L,OAAQ;YAAAkK,QAAA,EAEjBlK,OAAO,GAAG,2BAA2B,GAAG;UAAoB;YAAAmK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzM,EAAA,CAx6CID,kBAAkB;AAAA+O,EAAA,GAAlB/O,kBAAkB;AA06CxB,eAAeA,kBAAkB;AAAC,IAAA+O,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}