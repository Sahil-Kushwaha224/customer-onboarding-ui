{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahilkushwaha\\\\OneDrive - Nagarro\\\\Sahil_Kushwaha_Workspace\\\\customer-onboarding-ui\\\\src\\\\components\\\\OpenTask\\\\OpenTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './OpenTask.css';\nimport tasklistApi from '../../services/tasklistApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OpenTask = () => {\n  _s();\n  const [openTasks, setOpenTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const [taskVariables, setTaskVariables] = useState({});\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [assigneeName, setAssigneeName] = useState('');\n  const [pendingChanges, setPendingChanges] = useState({}); // Store pending field changes\n\n  // Load open tasks from tasklist backend\n  useEffect(() => {\n    const loadOpenTasks = async () => {\n      setLoading(true);\n      try {\n        console.log('Loading tasks from tasklist backend...');\n\n        // Get open tasks from tasklist API\n        const tasks = await tasklistApi.getOpenTasks();\n        console.log('Tasks from tasklist API:', tasks);\n\n        // Transform tasks to match the expected format\n        const openTasksData = tasks.map(task => {\n          var _variables$customerNa, _variables$fullName, _variables$fullName2, _variables$customerNa2, _variables$dob, _variables$mobile, _variables$email, _variables$occupation, _variables$income_ban, _variables$pep, _variables$address, _variables$product, _variables$ids, _variables$income_ban2, _variables$pep2;\n          // Get task variables for customer data\n          const variables = task.variables || {};\n          return {\n            id: task.id,\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\n            creationDate: (_variables$userInfo => {\n              // Try to get submission timestamp from userInfo first\n              const userInfo = ((_variables$userInfo = variables.userInfo) === null || _variables$userInfo === void 0 ? void 0 : _variables$userInfo.value) || {};\n              if (userInfo.submissionTimestamp) {\n                return new Date(userInfo.submissionTimestamp).toLocaleDateString();\n              }\n              // Fallback to task creation time\n              if (task.creationTime) {\n                return new Date(task.creationTime).toLocaleDateString();\n              }\n              // Last fallback to current date\n              return new Date().toLocaleDateString();\n            })(),\n            creationTime: task.creationTime,\n            completionTime: task.completionTime,\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\n            assignedTo: task.assignee || null,\n            isAssigned: !!task.assignee,\n            processInstanceKey: task.processInstanceKey,\n            processDefinitionId: task.processDefinitionId,\n            processName: task.processName,\n            taskDefinitionId: task.taskDefinitionId,\n            state: task.state || task.taskState,\n            priority: task.priority,\n            dueDate: task.dueDate,\n            followUpDate: task.followUpDate,\n            formKey: task.formKey,\n            candidateGroups: task.candidateGroups || [],\n            candidateUsers: task.candidateUsers || [],\n            sortValues: task.sortValues,\n            isFirst: task.isFirst,\n            // Customer data from task variables\n            customerName: ((_variables$customerNa = variables.customerName) === null || _variables$customerNa === void 0 ? void 0 : _variables$customerNa.value) || ((_variables$fullName = variables.fullName) === null || _variables$fullName === void 0 ? void 0 : _variables$fullName.value) || 'Unknown Customer',\n            customerData: {\n              fullName: ((_variables$fullName2 = variables.fullName) === null || _variables$fullName2 === void 0 ? void 0 : _variables$fullName2.value) || ((_variables$customerNa2 = variables.customerName) === null || _variables$customerNa2 === void 0 ? void 0 : _variables$customerNa2.value) || '',\n              dob: ((_variables$dob = variables.dob) === null || _variables$dob === void 0 ? void 0 : _variables$dob.value) || '',\n              mobile: ((_variables$mobile = variables.mobile) === null || _variables$mobile === void 0 ? void 0 : _variables$mobile.value) || '',\n              email: ((_variables$email = variables.email) === null || _variables$email === void 0 ? void 0 : _variables$email.value) || '',\n              occupation: ((_variables$occupation = variables.occupation) === null || _variables$occupation === void 0 ? void 0 : _variables$occupation.value) || '',\n              income_band: ((_variables$income_ban = variables.income_band) === null || _variables$income_ban === void 0 ? void 0 : _variables$income_ban.value) || '',\n              pep: ((_variables$pep = variables.pep) === null || _variables$pep === void 0 ? void 0 : _variables$pep.value) || false,\n              address: ((_variables$address = variables.address) === null || _variables$address === void 0 ? void 0 : _variables$address.value) || {},\n              product: ((_variables$product = variables.product) === null || _variables$product === void 0 ? void 0 : _variables$product.value) || {},\n              ids: ((_variables$ids = variables.ids) === null || _variables$ids === void 0 ? void 0 : _variables$ids.value) || {}\n            },\n            // Additional task metadata\n            completedSteps: calculateCompletedStepsFromVariables(variables),\n            submissionDate: (_variables$userInfo2 => {\n              // Try to get submission timestamp from userInfo first\n              const userInfo = ((_variables$userInfo2 = variables.userInfo) === null || _variables$userInfo2 === void 0 ? void 0 : _variables$userInfo2.value) || {};\n              if (userInfo.submissionTimestamp) {\n                return new Date(userInfo.submissionTimestamp).toISOString().split('T')[0];\n              }\n              // Fallback to task creation time\n              if (task.creationTime) {\n                return new Date(task.creationTime).toISOString().split('T')[0];\n              }\n              // Last fallback to current date\n              return new Date().toISOString().split('T')[0];\n            })(),\n            incomeBand: ((_variables$income_ban2 = variables.income_band) === null || _variables$income_ban2 === void 0 ? void 0 : _variables$income_ban2.value) || 'Not specified',\n            pep: ((_variables$pep2 = variables.pep) === null || _variables$pep2 === void 0 ? void 0 : _variables$pep2.value) || false\n          };\n        });\n        setOpenTasks(openTasksData);\n        console.log('Processed open tasks:', openTasksData);\n      } catch (error) {\n        console.error('Error loading open tasks from tasklist:', error);\n        addAlert('Error loading tasks from tasklist backend', 'error');\n        setOpenTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadOpenTasks();\n\n    // Set up polling to refresh tasks periodically\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get task status based on workflow and application status\n  const getTaskStatus = (workflowStatus, status) => {\n    if (workflowStatus === 'manual_review') return 'Manual Review';\n    if (status === 'pending_review') return 'Pending Review';\n    if (workflowStatus === 'in_progress') return 'In Progress';\n    if (status === 'submitted') return 'Submitted';\n    return 'Unknown';\n  };\n\n  // Calculate completed steps based on available data\n  const calculateCompletedSteps = app => {\n    var _app$customer, _app$customer2, _app$customer3, _app$address, _app$address2, _app$address3, _app$product;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_app$customer = app.customer) !== null && _app$customer !== void 0 && _app$customer.fullName && (_app$customer2 = app.customer) !== null && _app$customer2 !== void 0 && _app$customer2.email && (_app$customer3 = app.customer) !== null && _app$customer3 !== void 0 && _app$customer3.mobile) {\n      steps++;\n    }\n\n    // Check if address is complete\n    if ((_app$address = app.address) !== null && _app$address !== void 0 && _app$address.line1 && (_app$address2 = app.address) !== null && _app$address2 !== void 0 && _app$address2.city && (_app$address3 = app.address) !== null && _app$address3 !== void 0 && _app$address3.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    if (app.documents && app.documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    if ((_app$product = app.product) !== null && _app$product !== void 0 && _app$product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n\n  // Calculate completed steps from task variables\n  const calculateCompletedStepsFromVariables = variables => {\n    var _variables$fullName3, _variables$email2, _variables$mobile2, _variables$address2, _variables$documents, _variables$product2;\n    let steps = 0;\n\n    // Check if basic customer info is complete\n    if ((_variables$fullName3 = variables.fullName) !== null && _variables$fullName3 !== void 0 && _variables$fullName3.value && (_variables$email2 = variables.email) !== null && _variables$email2 !== void 0 && _variables$email2.value && (_variables$mobile2 = variables.mobile) !== null && _variables$mobile2 !== void 0 && _variables$mobile2.value) {\n      steps++;\n    }\n\n    // Check if address is complete\n    const address = ((_variables$address2 = variables.address) === null || _variables$address2 === void 0 ? void 0 : _variables$address2.value) || {};\n    if (address.line1 && address.city && address.state) {\n      steps++;\n    }\n\n    // Check if documents are uploaded\n    const documents = ((_variables$documents = variables.documents) === null || _variables$documents === void 0 ? void 0 : _variables$documents.value) || [];\n    if (documents && documents.length > 0) {\n      steps++;\n    }\n\n    // Check if product selection is complete\n    const product = ((_variables$product2 = variables.product) === null || _variables$product2 === void 0 ? void 0 : _variables$product2.value) || {};\n    if (product.desired_account) {\n      steps++;\n    }\n    return `${steps}/4`;\n  };\n  const addAlert = (message, type = 'info') => {\n    const alert = {\n      id: Date.now(),\n      message,\n      type\n    };\n    setAlerts(prev => [...prev, alert]);\n    setTimeout(() => {\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\n    }, 5000);\n  };\n\n  // Load task variables when a task is selected\n  const loadTaskVariables = async taskId => {\n    try {\n      console.log('Loading variables for task from backend port 5174:', taskId);\n      const variables = await tasklistApi.searchTaskVariables(taskId);\n      console.log('Task variables loaded from backend:', variables);\n      setTaskVariables(prev => ({\n        ...prev,\n        [taskId]: variables\n      }));\n\n      // Show success message when variables are loaded\n      addAlert('Task variables loaded successfully', 'success');\n    } catch (error) {\n      console.error('Error loading task variables from backend:', error);\n      addAlert('Failed to load task variables from backend', 'error');\n    }\n  };\n\n  // Handle task selection and load its variables\n  const handleTaskSelection = task => {\n    // Clear pending changes when switching tasks\n    if (selectedTask && selectedTask.id !== (task === null || task === void 0 ? void 0 : task.id)) {\n      const currentTaskChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n      if (currentTaskChanges.length > 0) {\n        console.log(`Clearing ${currentTaskChanges.length} pending changes for previous task`);\n        setPendingChanges(prev => {\n          const newChanges = {\n            ...prev\n          };\n          Object.keys(newChanges).forEach(key => {\n            if (newChanges[key].taskId === selectedTask.id) {\n              delete newChanges[key];\n            }\n          });\n          return newChanges;\n        });\n      }\n    }\n    setSelectedTask(task);\n    if (task) {\n      // Always load fresh variables from backend when task is selected\n      console.log('Task selected, loading variables from backend port 5174...');\n      loadTaskVariables(task.id);\n    }\n  };\n\n  // Get enhanced customer data combining task data and loaded variables\n  const getEnhancedCustomerData = task => {\n    var _variables$userInfo3, _variables$fullName4, _variables$customerNa3, _variables$dob2, _variables$email3, _variables$mobile3, _variables$occupation2, _variables$income_ban3, _variables$pep3, _variables$address3, _variables$address3$v, _task$customerData$ad, _variables$address4, _variables$address4$v, _task$customerData$ad2, _variables$address5, _variables$address5$v, _task$customerData$ad3, _variables$address6, _variables$address6$v, _task$customerData$ad4, _variables$address7, _variables$address7$v, _task$customerData$ad5, _variables$address8, _variables$address8$v, _task$customerData$ad6, _variables$product3, _variables$product3$v, _task$customerData$pr, _variables$product4, _variables$product4$v, _task$customerData$pr2, _variables$ids2, _variables$ids2$value, _task$customerData$id, _variables$ids3, _variables$ids3$value, _task$customerData$id2;\n    const variables = taskVariables[task.id] || {};\n\n    // Check if userInfo exists in variables\n    const userInfo = ((_variables$userInfo3 = variables.userInfo) === null || _variables$userInfo3 === void 0 ? void 0 : _variables$userInfo3.value) || {};\n    const customer = userInfo.customer || {};\n    const address = userInfo.address || {};\n    const ids = userInfo.ids || {};\n    const product = userInfo.product || {};\n    return {\n      // Customer basic info - prioritize userInfo data\n      fullName: customer.fullName || ((_variables$fullName4 = variables.fullName) === null || _variables$fullName4 === void 0 ? void 0 : _variables$fullName4.value) || ((_variables$customerNa3 = variables.customerName) === null || _variables$customerNa3 === void 0 ? void 0 : _variables$customerNa3.value) || task.customerData.fullName || '',\n      dob: customer.dob || ((_variables$dob2 = variables.dob) === null || _variables$dob2 === void 0 ? void 0 : _variables$dob2.value) || task.customerData.dob || '',\n      email: customer.email || ((_variables$email3 = variables.email) === null || _variables$email3 === void 0 ? void 0 : _variables$email3.value) || task.customerData.email || '',\n      mobile: customer.mobile || ((_variables$mobile3 = variables.mobile) === null || _variables$mobile3 === void 0 ? void 0 : _variables$mobile3.value) || task.customerData.mobile || '',\n      occupation: customer.occupation || ((_variables$occupation2 = variables.occupation) === null || _variables$occupation2 === void 0 ? void 0 : _variables$occupation2.value) || task.customerData.occupation || '',\n      income_band: customer.income_band || ((_variables$income_ban3 = variables.income_band) === null || _variables$income_ban3 === void 0 ? void 0 : _variables$income_ban3.value) || task.customerData.income_band || '',\n      pep: customer.pep !== undefined ? customer.pep : ((_variables$pep3 = variables.pep) === null || _variables$pep3 === void 0 ? void 0 : _variables$pep3.value) || task.customerData.pep || false,\n      // Address info - prioritize userInfo data\n      address: {\n        line1: address.line1 || ((_variables$address3 = variables.address) === null || _variables$address3 === void 0 ? void 0 : (_variables$address3$v = _variables$address3.value) === null || _variables$address3$v === void 0 ? void 0 : _variables$address3$v.line1) || ((_task$customerData$ad = task.customerData.address) === null || _task$customerData$ad === void 0 ? void 0 : _task$customerData$ad.line1) || '',\n        line2: address.line2 || ((_variables$address4 = variables.address) === null || _variables$address4 === void 0 ? void 0 : (_variables$address4$v = _variables$address4.value) === null || _variables$address4$v === void 0 ? void 0 : _variables$address4$v.line2) || ((_task$customerData$ad2 = task.customerData.address) === null || _task$customerData$ad2 === void 0 ? void 0 : _task$customerData$ad2.line2) || '',\n        city: address.city || ((_variables$address5 = variables.address) === null || _variables$address5 === void 0 ? void 0 : (_variables$address5$v = _variables$address5.value) === null || _variables$address5$v === void 0 ? void 0 : _variables$address5$v.city) || ((_task$customerData$ad3 = task.customerData.address) === null || _task$customerData$ad3 === void 0 ? void 0 : _task$customerData$ad3.city) || '',\n        state: address.state || ((_variables$address6 = variables.address) === null || _variables$address6 === void 0 ? void 0 : (_variables$address6$v = _variables$address6.value) === null || _variables$address6$v === void 0 ? void 0 : _variables$address6$v.state) || ((_task$customerData$ad4 = task.customerData.address) === null || _task$customerData$ad4 === void 0 ? void 0 : _task$customerData$ad4.state) || '',\n        pin: address.pin || ((_variables$address7 = variables.address) === null || _variables$address7 === void 0 ? void 0 : (_variables$address7$v = _variables$address7.value) === null || _variables$address7$v === void 0 ? void 0 : _variables$address7$v.pin) || ((_task$customerData$ad5 = task.customerData.address) === null || _task$customerData$ad5 === void 0 ? void 0 : _task$customerData$ad5.pin) || '',\n        country: address.country || ((_variables$address8 = variables.address) === null || _variables$address8 === void 0 ? void 0 : (_variables$address8$v = _variables$address8.value) === null || _variables$address8$v === void 0 ? void 0 : _variables$address8$v.country) || ((_task$customerData$ad6 = task.customerData.address) === null || _task$customerData$ad6 === void 0 ? void 0 : _task$customerData$ad6.country) || ''\n      },\n      // Product info - prioritize userInfo data\n      product: {\n        desired_account: product.desired_account || ((_variables$product3 = variables.product) === null || _variables$product3 === void 0 ? void 0 : (_variables$product3$v = _variables$product3.value) === null || _variables$product3$v === void 0 ? void 0 : _variables$product3$v.desired_account) || ((_task$customerData$pr = task.customerData.product) === null || _task$customerData$pr === void 0 ? void 0 : _task$customerData$pr.desired_account) || '',\n        expected_mab_range: product.expected_mab_range || ((_variables$product4 = variables.product) === null || _variables$product4 === void 0 ? void 0 : (_variables$product4$v = _variables$product4.value) === null || _variables$product4$v === void 0 ? void 0 : _variables$product4$v.expected_mab_range) || ((_task$customerData$pr2 = task.customerData.product) === null || _task$customerData$pr2 === void 0 ? void 0 : _task$customerData$pr2.expected_mab_range) || ''\n      },\n      // ID info - prioritize userInfo data\n      ids: {\n        idType: ids.idType || ((_variables$ids2 = variables.ids) === null || _variables$ids2 === void 0 ? void 0 : (_variables$ids2$value = _variables$ids2.value) === null || _variables$ids2$value === void 0 ? void 0 : _variables$ids2$value.idType) || ((_task$customerData$id = task.customerData.ids) === null || _task$customerData$id === void 0 ? void 0 : _task$customerData$id.idType) || '',\n        idNumber: ids.idNumber || ((_variables$ids3 = variables.ids) === null || _variables$ids3 === void 0 ? void 0 : (_variables$ids3$value = _variables$ids3.value) === null || _variables$ids3$value === void 0 ? void 0 : _variables$ids3$value.idNumber) || ((_task$customerData$id2 = task.customerData.ids) === null || _task$customerData$id2 === void 0 ? void 0 : _task$customerData$id2.idNumber) || ''\n      },\n      // Additional userInfo fields\n      submissionTimestamp: userInfo.submissionTimestamp || ''\n    };\n  };\n  const handleTaskAction = async action => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n\n    // No confirmation needed - proceed directly with the action\n\n    setLoading(true);\n    try {\n      console.log(`${action}ing task:`, selectedTask.id);\n      console.log('Selected task details:', selectedTask);\n\n      // Prepare variables to pass when completing the task\n      const variables = {\n        reviewDecision: action === 'approve' ? 'approved' : 'rejected',\n        reviewDate: new Date().toISOString(),\n        reviewer: 'Admin User',\n        reviewComments: `Task ${action}d via admin interface`\n      };\n\n      // Add any pending field changes to the variables\n      const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n      console.log('Pending changes for task:', taskPendingChanges);\n      if (taskPendingChanges.length > 0) {\n        taskPendingChanges.forEach(change => {\n          variables[change.fieldName] = change.newValue;\n        });\n        console.log(`Added ${taskPendingChanges.length} pending changes to variables`);\n      }\n      console.log('Final variables to send with task completion:', variables);\n      console.log('Expected request body format:', {\n        variables: variables,\n        action: \"complete\"\n      });\n\n      // Complete the task with the decision\n      addAlert(`${action === 'approve' ? 'Approving' : 'Rejecting'} task...`, 'info');\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\n      console.log('Task completion result:', completedTask);\n\n      // Update local state - remove the task from open tasks since it's now completed\n      setOpenTasks(prev => {\n        const updatedTasks = prev.filter(task => task.id !== selectedTask.id);\n        console.log(`Removed completed task from list. Remaining tasks: ${updatedTasks.length}`);\n        return updatedTasks;\n      });\n\n      // Clear pending changes for this task\n      setPendingChanges(prev => {\n        const newChanges = {\n          ...prev\n        };\n        Object.keys(newChanges).forEach(key => {\n          if (newChanges[key].taskId === selectedTask.id) {\n            delete newChanges[key];\n          }\n        });\n        return newChanges;\n      });\n      addAlert(`Task ${action === 'approve' ? 'approved' : 'rejected'} successfully! ${taskPendingChanges.length > 0 ? 'All field changes have been saved.' : ''}`, 'success');\n\n      // Clear selection since the task is no longer in the list\n      setSelectedTask(null);\n\n      // Refresh the task list to ensure we have the latest data\n      console.log('Refreshing task list after completion...');\n    } catch (error) {\n      console.error('Error processing task action:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        taskId: selectedTask.id,\n        action: action\n      });\n      let errorMessage = `Failed to ${action} task`;\n      if (error.message.includes('404')) {\n        errorMessage += ': Task not found or already completed';\n      } else if (error.message.includes('400')) {\n        errorMessage += ': Invalid request data';\n      } else if (error.message.includes('500')) {\n        errorMessage += ': Server error';\n      } else {\n        errorMessage += `: ${error.message}`;\n      }\n      addAlert(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show assign modal\n  const showAssignTaskModal = () => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    setAssigneeName('');\n    setShowAssignModal(true);\n  };\n\n  // Handle task assignment with assignee name\n  const handleTaskAssignment = async (action, assigneeName = null) => {\n    if (!selectedTask) {\n      addAlert('No task selected', 'error');\n      return;\n    }\n    if (action === 'assign' && !assigneeName) {\n      addAlert('Please enter assignee name', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      let updatedTask;\n      if (action === 'assign') {\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\n        console.log('Making API call to assign task...');\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\n        console.log('Assignment API call completed:', updatedTask);\n      } else {\n        console.log('Unassigning task:', selectedTask.id);\n        console.log('Making API call to unassign task...');\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\n        console.log('Unassignment API call completed:', updatedTask);\n      }\n      console.log('Task assignment result:', updatedTask);\n\n      // Update local state\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\n      setOpenTasks(prev => prev.map(task => task.id === selectedTask.id ? {\n        ...task,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      } : task));\n\n      // Update selected task\n      setSelectedTask(prev => ({\n        ...prev,\n        assignedTo: newAssignedTo,\n        isAssigned: !!newAssignedTo,\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\n      }));\n      addAlert(`Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, 'success');\n\n      // Close modal if it was open\n      setShowAssignModal(false);\n      setAssigneeName('');\n    } catch (error) {\n      console.error('Error processing task assignment:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack,\n        response: error.response\n      });\n      let errorMessage = `Failed to ${action} task`;\n      if (error.message) {\n        errorMessage += `: ${error.message}`;\n      }\n      addAlert(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle assign modal confirmation\n  const handleAssignConfirm = () => {\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\n    console.log('Assignee name:', assigneeName);\n    console.log('Assignee name trimmed:', assigneeName.trim());\n    console.log('Selected task:', selectedTask);\n    if (assigneeName.trim()) {\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\n      handleTaskAssignment('assign', assigneeName.trim());\n    } else {\n      console.log('No assignee name provided');\n      addAlert('Please enter assignee name', 'error');\n    }\n  };\n  const getStatusColor = status => {\n    // Using CSS variables for consistent theming\n    const root = document.documentElement;\n    const getVar = varName => getComputedStyle(root).getPropertyValue(varName).trim();\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'created':\n        return getVar('--color-info');\n      case 'assigned':\n        return getVar('--color-warning');\n      case 'unassigned':\n        return getVar('--color-warning-alt');\n      case 'completed':\n        return getVar('--color-success');\n      case 'canceled':\n        return getVar('--color-danger');\n      // Legacy statuses for backward compatibility\n      case 'submitted':\n        return getVar('--color-info');\n      case 'in_progress':\n        return getVar('--color-warning');\n      case 'pending_review':\n        return getVar('--color-warning-alt');\n      case 'manual_review':\n        return getVar('--color-danger');\n      default:\n        return getVar('--color-secondary');\n    }\n  };\n\n  // Handle field value change - store locally without saving\n  const handleFieldChange = (taskId, fieldName, newValue) => {\n    // Store the change in pending changes\n    const changeKey = `${taskId}_${fieldName}`;\n    setPendingChanges(prev => ({\n      ...prev,\n      [changeKey]: {\n        taskId,\n        fieldName,\n        newValue\n      }\n    }));\n\n    // Update the task variables immediately for UI responsiveness\n    setTaskVariables(prev => ({\n      ...prev,\n      [taskId]: prev[taskId].map(variable => variable.name === fieldName ? {\n        ...variable,\n        value: newValue\n      } : variable)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All open tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alert.type}`,\n      children: alert.message\n    }, alert.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-panel panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header flex-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All open tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort-icon\",\n            children: \"\\u21C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"\\u23F3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please wait while we fetch your open tasks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this) : openTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tasks empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-tasks-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No tasks found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no tasks matching your filter criteria.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this) : openTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `task-card ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === task.id ? 'selected' : ''}`,\n            onClick: () => handleTaskSelection(task),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: task.taskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Creation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.creationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-detail-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Task Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: task.taskStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-panel panel\",\n        children: selectedTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details-header flex-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Task Details: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-assignment-controls\",\n              children: selectedTask.isAssigned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"assigned-to\",\n                  children: [\"Assigned to: \", selectedTask.assignedTo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary unassign-btn btn-base\",\n                  onClick: () => handleTaskAssignment('unassign'),\n                  disabled: loading,\n                  children: loading ? 'Unassigning...' : 'Unassign'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary assign-btn btn-base\",\n                onClick: showAssignTaskModal,\n                disabled: loading,\n                children: loading ? 'Assigning...' : 'Assign Task'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-sections\",\n            children: [!taskVariables[selectedTask.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Loading Task Information...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-message\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Fetching task variables from backend...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this), taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [(() => {\n                const userInfoVariable = taskVariables[selectedTask.id].find(variable => variable.name === 'userInfo');\n                if (userInfoVariable) {\n                  try {\n                    const userInfo = JSON.parse(userInfoVariable.value);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details-section customer-information-section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        children: \"Customer Information\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 657,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"variables-grid\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"variable-group\",\n                          children: [userInfo.customer && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-subgroup\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Personal Details\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 663,\n                              columnNumber: 39\n                            }, this), Object.entries(userInfo.customer).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"variable-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-name\",\n                                children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 666,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-value\",\n                                children: key === 'dob' && value ? new Date(value).toLocaleDateString() : key === 'pep' ? value ? 'Yes' : 'No' : value || 'Not provided'\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 667,\n                                columnNumber: 43\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 665,\n                              columnNumber: 41\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 37\n                          }, this), userInfo.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-subgroup\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Address Details\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 680,\n                              columnNumber: 39\n                            }, this), Object.entries(userInfo.address).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"variable-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-name\",\n                                children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 684,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-value\",\n                                children: value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 685,\n                                columnNumber: 45\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 683,\n                              columnNumber: 43\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 679,\n                            columnNumber: 37\n                          }, this), userInfo.ids && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-subgroup\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Identity Details\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 695,\n                              columnNumber: 39\n                            }, this), Object.entries(userInfo.ids).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"variable-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-name\",\n                                children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 699,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-value\",\n                                children: key === 'idType' ? value.toUpperCase() : value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 700,\n                                columnNumber: 45\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 698,\n                              columnNumber: 43\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 694,\n                            columnNumber: 37\n                          }, this), userInfo.product && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-subgroup\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Product Details\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 710,\n                              columnNumber: 39\n                            }, this), Object.entries(userInfo.product).map(([key, value]) => value && /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"variable-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-name\",\n                                children: [key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 714,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-value\",\n                                children: value\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 715,\n                                columnNumber: 45\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 713,\n                              columnNumber: 43\n                            }, this))]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 709,\n                            columnNumber: 37\n                          }, this), userInfo.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"variable-subgroup\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Submission Details\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 725,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"variable-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-name\",\n                                children: \"Submission Timestamp:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 727,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"variable-value\",\n                                children: new Date(userInfo.submissionTimestamp).toLocaleString()\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 728,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 726,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 724,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 659,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 29\n                    }, this);\n                  } catch (e) {\n                    return null;\n                  }\n                }\n                return null;\n              })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Task Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-grid\",\n                  children: taskVariables[selectedTask.id].filter(variable => {\n                    // Filter out specific fields that should not be displayed and userInfo (already shown above)\n                    const fieldsToHide = ['pep', 'incomeBand', 'completedSteps', 'documentPath', 'currentStep', 'nextStep', 'pan', 'status', 'userInfo' // Hide userInfo since it's displayed in customer section\n                    ];\n                    return !fieldsToHide.includes(variable.name);\n                  }).map((variable, index) => {\n                    // Regular variables only (userInfo is handled above)\n                    let displayValue = variable.value;\n\n                    // Clean up JSON strings\n                    if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\n                      displayValue = displayValue.slice(1, -1);\n                    }\n\n                    // Parse arrays if they're JSON strings\n                    if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\n                      try {\n                        const steps = JSON.parse(displayValue);\n                        displayValue = steps.join(', ');\n                      } catch (e) {\n                        // Keep original value if parsing fails\n                      }\n                    }\n                    const fieldKey = `${selectedTask.id}_${variable.name}`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 786,\n                        columnNumber: 33\n                      }, this), \" \", displayValue || 'Not set']\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 785,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), (!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Customer Personal Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: (() => {\n                  const customerData = getEnhancedCustomerData(selectedTask);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [customerData.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Full Name:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 36\n                      }, this), \" \", customerData.fullName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 805,\n                      columnNumber: 31\n                    }, this), customerData.dob && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Date of Birth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 808,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.dob).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 808,\n                      columnNumber: 31\n                    }, this), customerData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 811,\n                        columnNumber: 36\n                      }, this), \" \", customerData.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 31\n                    }, this), customerData.mobile && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Mobile:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 36\n                      }, this), \" \", customerData.mobile]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 31\n                    }, this), customerData.occupation && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Occupation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 36\n                      }, this), \" \", customerData.occupation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 31\n                    }, this), customerData.income_band && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Income Band:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 36\n                      }, this), \" \", customerData.income_band]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 820,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"PEP Status:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 34\n                      }, this), \" \", customerData.pep ? 'Yes' : 'No']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 822,\n                      columnNumber: 29\n                    }, this), customerData.submissionTimestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Submission Date:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 824,\n                        columnNumber: 36\n                      }, this), \" \", new Date(customerData.submissionTimestamp).toLocaleString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 824,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 19\n            }, this), selectedTask.documents && selectedTask.documents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Documents (\", selectedTask.documents.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"documents-list\",\n                children: selectedTask.documents.map((doc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"document-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"doc-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-name\",\n                      children: doc.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"doc-type\",\n                      children: doc.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Current Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 859,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus)\n                    },\n                    children: (selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.creationDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 23\n                  }, this), \" \", selectedTask.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 21\n                }, this), selectedTask.processInstanceKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Instance:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processInstanceKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 23\n                }, this), selectedTask.taskDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Task Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.taskDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 23\n                }, this), selectedTask.processDefinitionId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Definition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processDefinitionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 23\n                }, this), selectedTask.processName && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 890,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.processName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 23\n                }, this), selectedTask.priority && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Priority:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 898,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.priority]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 23\n                }, this), selectedTask.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Due Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.dueDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 23\n                }, this), selectedTask.followUpDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Follow Up Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.followUpDate).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 23\n                }, this), selectedTask.formKey && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Form Key:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.formKey]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 23\n                }, this), selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Groups:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateGroups.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 23\n                }, this), selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Candidate Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 25\n                  }, this), \" \", selectedTask.candidateUsers.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 23\n                }, this), selectedTask.creationTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Creation Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.creationTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 23\n                }, this), selectedTask.completionTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Completion Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 25\n                  }, this), \" \", new Date(selectedTask.completionTime).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [(() => {\n                const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\n                return taskPendingChanges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pending-changes-summary\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pending-changes-text\",\n                    children: [\"\\uD83D\\uDCDD \", taskPendingChanges.length, \" unsaved change\", taskPendingChanges.length > 1 ? 's' : '', \" - will be saved when you approve or reject\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 23\n                }, this);\n              })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-approve\",\n                  onClick: () => handleTaskAction('approve'),\n                  disabled: loading,\n                  children: loading ? '⏳ Approving...' : '✓ Approve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-reject\",\n                  onClick: () => handleTaskAction('reject'),\n                  disabled: loading,\n                  children: loading ? '⏳ Rejecting...' : '✗ Reject'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 961,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a task from the list to view its details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), showAssignModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowAssignModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Assign Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAssignModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Assign task \\\"\", selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskName, \"\\\" to:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"assignee-input\",\n            placeholder: \"Enter assignee name\",\n            value: assigneeName,\n            onChange: e => setAssigneeName(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAssignConfirm();\n              }\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowAssignModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAssignConfirm,\n            disabled: !assigneeName.trim() || loading,\n            children: loading ? 'Assigning...' : 'Assign'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 547,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenTask, \"ei3fhjmY/sw6C9+plu4648siJqA=\");\n_c = OpenTask;\nexport default OpenTask;\nvar _c;\n$RefreshReg$(_c, \"OpenTask\");","map":{"version":3,"names":["React","useState","useEffect","tasklistApi","jsxDEV","_jsxDEV","Fragment","_Fragment","OpenTask","_s","openTasks","setOpenTasks","selectedTask","setSelectedTask","loading","setLoading","alerts","setAlerts","taskVariables","setTaskVariables","showAssignModal","setShowAssignModal","assigneeName","setAssigneeName","pendingChanges","setPendingChanges","loadOpenTasks","console","log","tasks","getOpenTasks","openTasksData","map","task","_variables$customerNa","_variables$fullName","_variables$fullName2","_variables$customerNa2","_variables$dob","_variables$mobile","_variables$email","_variables$occupation","_variables$income_ban","_variables$pep","_variables$address","_variables$product","_variables$ids","_variables$income_ban2","_variables$pep2","variables","id","taskName","name","taskDefinitionId","creationDate","_variables$userInfo","userInfo","value","submissionTimestamp","Date","toLocaleDateString","creationTime","completionTime","taskStatus","assignee","assignedTo","isAssigned","processInstanceKey","processDefinitionId","processName","state","taskState","priority","dueDate","followUpDate","formKey","candidateGroups","candidateUsers","sortValues","isFirst","customerName","fullName","customerData","dob","mobile","email","occupation","income_band","pep","address","product","ids","completedSteps","calculateCompletedStepsFromVariables","submissionDate","_variables$userInfo2","toISOString","split","incomeBand","error","addAlert","interval","setInterval","clearInterval","getTaskStatus","workflowStatus","status","calculateCompletedSteps","app","_app$customer","_app$customer2","_app$customer3","_app$address","_app$address2","_app$address3","_app$product","steps","customer","line1","city","documents","length","desired_account","_variables$fullName3","_variables$email2","_variables$mobile2","_variables$address2","_variables$documents","_variables$product2","message","type","alert","now","prev","setTimeout","filter","a","loadTaskVariables","taskId","searchTaskVariables","handleTaskSelection","currentTaskChanges","Object","values","change","newChanges","keys","forEach","key","getEnhancedCustomerData","_variables$userInfo3","_variables$fullName4","_variables$customerNa3","_variables$dob2","_variables$email3","_variables$mobile3","_variables$occupation2","_variables$income_ban3","_variables$pep3","_variables$address3","_variables$address3$v","_task$customerData$ad","_variables$address4","_variables$address4$v","_task$customerData$ad2","_variables$address5","_variables$address5$v","_task$customerData$ad3","_variables$address6","_variables$address6$v","_task$customerData$ad4","_variables$address7","_variables$address7$v","_task$customerData$ad5","_variables$address8","_variables$address8$v","_task$customerData$ad6","_variables$product3","_variables$product3$v","_task$customerData$pr","_variables$product4","_variables$product4$v","_task$customerData$pr2","_variables$ids2","_variables$ids2$value","_task$customerData$id","_variables$ids3","_variables$ids3$value","_task$customerData$id2","undefined","line2","pin","country","expected_mab_range","idType","idNumber","handleTaskAction","action","reviewDecision","reviewDate","reviewer","reviewComments","taskPendingChanges","fieldName","newValue","completedTask","completeTask","updatedTasks","stack","errorMessage","includes","showAssignTaskModal","handleTaskAssignment","updatedTask","assignTask","unassignTask","newAssignedTo","response","handleAssignConfirm","trim","getStatusColor","root","document","documentElement","getVar","varName","getComputedStyle","getPropertyValue","toLowerCase","handleFieldChange","changeKey","variable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","userInfoVariable","find","JSON","parse","entries","replace","str","toUpperCase","toLocaleString","e","fieldsToHide","index","displayValue","startsWith","endsWith","slice","join","fieldKey","doc","style","backgroundColor","stopPropagation","placeholder","onChange","target","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/sahilkushwaha/OneDrive - Nagarro/Sahil_Kushwaha_Workspace/customer-onboarding-ui/src/components/OpenTask/OpenTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './OpenTask.css';\r\nimport tasklistApi from '../../services/tasklistApi';\r\n\r\nconst OpenTask = () => {\r\n  const [openTasks, setOpenTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [taskVariables, setTaskVariables] = useState({});\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [assigneeName, setAssigneeName] = useState('');\r\n\r\n  const [pendingChanges, setPendingChanges] = useState({}); // Store pending field changes\r\n\r\n  // Load open tasks from tasklist backend\r\n  useEffect(() => {\r\n    const loadOpenTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log('Loading tasks from tasklist backend...');\r\n        \r\n        // Get open tasks from tasklist API\r\n        const tasks = await tasklistApi.getOpenTasks();\r\n        console.log('Tasks from tasklist API:', tasks);\r\n        \r\n        // Transform tasks to match the expected format\r\n        const openTasksData = tasks.map(task => {\r\n          // Get task variables for customer data\r\n          const variables = task.variables || {};\r\n          \r\n          return {\r\n            id: task.id,\r\n            taskName: task.name || task.taskDefinitionId || 'Manual Review',\r\n            creationDate: (() => {\r\n              // Try to get submission timestamp from userInfo first\r\n              const userInfo = variables.userInfo?.value || {};\r\n              if (userInfo.submissionTimestamp) {\r\n                return new Date(userInfo.submissionTimestamp).toLocaleDateString();\r\n              }\r\n              // Fallback to task creation time\r\n              if (task.creationTime) {\r\n                return new Date(task.creationTime).toLocaleDateString();\r\n              }\r\n              // Last fallback to current date\r\n              return new Date().toLocaleDateString();\r\n            })(),\r\n            creationTime: task.creationTime,\r\n            completionTime: task.completionTime,\r\n            taskStatus: task.assignee ? 'assigned' : 'unassigned',\r\n            assignedTo: task.assignee || null,\r\n            isAssigned: !!task.assignee,\r\n            processInstanceKey: task.processInstanceKey,\r\n            processDefinitionId: task.processDefinitionId,\r\n            processName: task.processName,\r\n            taskDefinitionId: task.taskDefinitionId,\r\n            state: task.state || task.taskState,\r\n            priority: task.priority,\r\n            dueDate: task.dueDate,\r\n            followUpDate: task.followUpDate,\r\n            formKey: task.formKey,\r\n            candidateGroups: task.candidateGroups || [],\r\n            candidateUsers: task.candidateUsers || [],\r\n            sortValues: task.sortValues,\r\n            isFirst: task.isFirst,\r\n            // Customer data from task variables\r\n            customerName: variables.customerName?.value || \r\n                         variables.fullName?.value || \r\n                         'Unknown Customer',\r\n            customerData: {\r\n              fullName: variables.fullName?.value || variables.customerName?.value || '',\r\n              dob: variables.dob?.value || '',\r\n              mobile: variables.mobile?.value || '',\r\n              email: variables.email?.value || '',\r\n              occupation: variables.occupation?.value || '',\r\n              income_band: variables.income_band?.value || '',\r\n              pep: variables.pep?.value || false,\r\n              address: variables.address?.value || {},\r\n              product: variables.product?.value || {},\r\n              ids: variables.ids?.value || {}\r\n            },\r\n            // Additional task metadata\r\n            completedSteps: calculateCompletedStepsFromVariables(variables),\r\n            submissionDate: (() => {\r\n              // Try to get submission timestamp from userInfo first\r\n              const userInfo = variables.userInfo?.value || {};\r\n              if (userInfo.submissionTimestamp) {\r\n                return new Date(userInfo.submissionTimestamp).toISOString().split('T')[0];\r\n              }\r\n              // Fallback to task creation time\r\n              if (task.creationTime) {\r\n                return new Date(task.creationTime).toISOString().split('T')[0];\r\n              }\r\n              // Last fallback to current date\r\n              return new Date().toISOString().split('T')[0];\r\n            })(),\r\n            incomeBand: variables.income_band?.value || 'Not specified',\r\n            pep: variables.pep?.value || false\r\n          };\r\n        });\r\n        \r\n        setOpenTasks(openTasksData);\r\n        console.log('Processed open tasks:', openTasksData);\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading open tasks from tasklist:', error);\r\n        addAlert('Error loading tasks from tasklist backend', 'error');\r\n        setOpenTasks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadOpenTasks();\r\n    \r\n    // Set up polling to refresh tasks periodically\r\n    const interval = setInterval(loadOpenTasks, 30000); // Refresh every 30 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Get task status based on workflow and application status\r\n  const getTaskStatus = (workflowStatus, status) => {\r\n    if (workflowStatus === 'manual_review') return 'Manual Review';\r\n    if (status === 'pending_review') return 'Pending Review';\r\n    if (workflowStatus === 'in_progress') return 'In Progress';\r\n    if (status === 'submitted') return 'Submitted';\r\n    return 'Unknown';\r\n  };\r\n\r\n  // Calculate completed steps based on available data\r\n  const calculateCompletedSteps = (app) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (app.customer?.fullName && app.customer?.email && app.customer?.mobile) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    if (app.address?.line1 && app.address?.city && app.address?.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    if (app.documents && app.documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    if (app.product?.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  // Calculate completed steps from task variables\r\n  const calculateCompletedStepsFromVariables = (variables) => {\r\n    let steps = 0;\r\n    \r\n    // Check if basic customer info is complete\r\n    if (variables.fullName?.value && variables.email?.value && variables.mobile?.value) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if address is complete\r\n    const address = variables.address?.value || {};\r\n    if (address.line1 && address.city && address.state) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if documents are uploaded\r\n    const documents = variables.documents?.value || [];\r\n    if (documents && documents.length > 0) {\r\n      steps++;\r\n    }\r\n    \r\n    // Check if product selection is complete\r\n    const product = variables.product?.value || {};\r\n    if (product.desired_account) {\r\n      steps++;\r\n    }\r\n    \r\n    return `${steps}/4`;\r\n  };\r\n\r\n  const addAlert = (message, type = 'info') => {\r\n    const alert = { id: Date.now(), message, type };\r\n    setAlerts(prev => [...prev, alert]);\r\n    setTimeout(() => {\r\n      setAlerts(prev => prev.filter(a => a.id !== alert.id));\r\n    }, 5000);\r\n  };\r\n\r\n  // Load task variables when a task is selected\r\n  const loadTaskVariables = async (taskId) => {\r\n    try {\r\n      console.log('Loading variables for task from backend port 5174:', taskId);\r\n      const variables = await tasklistApi.searchTaskVariables(taskId);\r\n      console.log('Task variables loaded from backend:', variables);\r\n      setTaskVariables(prev => ({\r\n        ...prev,\r\n        [taskId]: variables\r\n      }));\r\n      \r\n      // Show success message when variables are loaded\r\n      addAlert('Task variables loaded successfully', 'success');\r\n    } catch (error) {\r\n      console.error('Error loading task variables from backend:', error);\r\n      addAlert('Failed to load task variables from backend', 'error');\r\n    }\r\n  };\r\n\r\n  // Handle task selection and load its variables\r\n  const handleTaskSelection = (task) => {\r\n    // Clear pending changes when switching tasks\r\n    if (selectedTask && selectedTask.id !== task?.id) {\r\n      const currentTaskChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n      if (currentTaskChanges.length > 0) {\r\n        console.log(`Clearing ${currentTaskChanges.length} pending changes for previous task`);\r\n        setPendingChanges(prev => {\r\n          const newChanges = { ...prev };\r\n          Object.keys(newChanges).forEach(key => {\r\n            if (newChanges[key].taskId === selectedTask.id) {\r\n              delete newChanges[key];\r\n            }\r\n          });\r\n          return newChanges;\r\n        });\r\n      }\r\n    }\r\n    \r\n    setSelectedTask(task);\r\n    if (task) {\r\n      // Always load fresh variables from backend when task is selected\r\n      console.log('Task selected, loading variables from backend port 5174...');\r\n      loadTaskVariables(task.id);\r\n    }\r\n  };\r\n\r\n  // Get enhanced customer data combining task data and loaded variables\r\n  const getEnhancedCustomerData = (task) => {\r\n    const variables = taskVariables[task.id] || {};\r\n    \r\n    // Check if userInfo exists in variables\r\n    const userInfo = variables.userInfo?.value || {};\r\n    const customer = userInfo.customer || {};\r\n    const address = userInfo.address || {};\r\n    const ids = userInfo.ids || {};\r\n    const product = userInfo.product || {};\r\n    \r\n    return {\r\n      // Customer basic info - prioritize userInfo data\r\n      fullName: customer.fullName || variables.fullName?.value || variables.customerName?.value || task.customerData.fullName || '',\r\n      dob: customer.dob || variables.dob?.value || task.customerData.dob || '',\r\n      email: customer.email || variables.email?.value || task.customerData.email || '',\r\n      mobile: customer.mobile || variables.mobile?.value || task.customerData.mobile || '',\r\n      occupation: customer.occupation || variables.occupation?.value || task.customerData.occupation || '',\r\n      income_band: customer.income_band || variables.income_band?.value || task.customerData.income_band || '',\r\n      pep: customer.pep !== undefined ? customer.pep : (variables.pep?.value || task.customerData.pep || false),\r\n      \r\n      // Address info - prioritize userInfo data\r\n      address: {\r\n        line1: address.line1 || variables.address?.value?.line1 || task.customerData.address?.line1 || '',\r\n        line2: address.line2 || variables.address?.value?.line2 || task.customerData.address?.line2 || '',\r\n        city: address.city || variables.address?.value?.city || task.customerData.address?.city || '',\r\n        state: address.state || variables.address?.value?.state || task.customerData.address?.state || '',\r\n        pin: address.pin || variables.address?.value?.pin || task.customerData.address?.pin || '',\r\n        country: address.country || variables.address?.value?.country || task.customerData.address?.country || ''\r\n      },\r\n      \r\n      // Product info - prioritize userInfo data\r\n      product: {\r\n        desired_account: product.desired_account || variables.product?.value?.desired_account || task.customerData.product?.desired_account || '',\r\n        expected_mab_range: product.expected_mab_range || variables.product?.value?.expected_mab_range || task.customerData.product?.expected_mab_range || ''\r\n      },\r\n      \r\n      // ID info - prioritize userInfo data\r\n      ids: {\r\n        idType: ids.idType || variables.ids?.value?.idType || task.customerData.ids?.idType || '',\r\n        idNumber: ids.idNumber || variables.ids?.value?.idNumber || task.customerData.ids?.idNumber || ''\r\n      },\r\n      \r\n      // Additional userInfo fields\r\n      submissionTimestamp: userInfo.submissionTimestamp || ''\r\n    };\r\n  };\r\n\r\n  const handleTaskAction = async (action) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    // No confirmation needed - proceed directly with the action\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log(`${action}ing task:`, selectedTask.id);\r\n      console.log('Selected task details:', selectedTask);\r\n\r\n      // Prepare variables to pass when completing the task\r\n      const variables = {\r\n        reviewDecision: action === 'approve' ? 'approved' : 'rejected',\r\n        reviewDate: new Date().toISOString(),\r\n        reviewer: 'Admin User',\r\n        reviewComments: `Task ${action}d via admin interface`\r\n      };\r\n\r\n      // Add any pending field changes to the variables\r\n      const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n      console.log('Pending changes for task:', taskPendingChanges);\r\n      \r\n      if (taskPendingChanges.length > 0) {\r\n        taskPendingChanges.forEach(change => {\r\n          variables[change.fieldName] = change.newValue;\r\n        });\r\n        console.log(`Added ${taskPendingChanges.length} pending changes to variables`);\r\n      }\r\n\r\n      console.log('Final variables to send with task completion:', variables);\r\n      console.log('Expected request body format:', {\r\n        variables: variables,\r\n        action: \"complete\"\r\n      });\r\n\r\n      // Complete the task with the decision\r\n      addAlert(`${action === 'approve' ? 'Approving' : 'Rejecting'} task...`, 'info');\r\n      \r\n      const completedTask = await tasklistApi.completeTask(selectedTask.id, variables);\r\n      console.log('Task completion result:', completedTask);\r\n\r\n      // Update local state - remove the task from open tasks since it's now completed\r\n      setOpenTasks(prev => {\r\n        const updatedTasks = prev.filter(task => task.id !== selectedTask.id);\r\n        console.log(`Removed completed task from list. Remaining tasks: ${updatedTasks.length}`);\r\n        return updatedTasks;\r\n      });\r\n      \r\n      // Clear pending changes for this task\r\n      setPendingChanges(prev => {\r\n        const newChanges = { ...prev };\r\n        Object.keys(newChanges).forEach(key => {\r\n          if (newChanges[key].taskId === selectedTask.id) {\r\n            delete newChanges[key];\r\n          }\r\n        });\r\n        return newChanges;\r\n      });\r\n      \r\n      addAlert(\r\n        `Task ${action === 'approve' ? 'approved' : 'rejected'} successfully! ${taskPendingChanges.length > 0 ? 'All field changes have been saved.' : ''}`, \r\n        'success'\r\n      );\r\n\r\n      // Clear selection since the task is no longer in the list\r\n      setSelectedTask(null);\r\n\r\n      // Refresh the task list to ensure we have the latest data\r\n      console.log('Refreshing task list after completion...');\r\n      \r\n    } catch (error) {\r\n      console.error('Error processing task action:', error);\r\n      console.error('Error details:', {\r\n        message: error.message,\r\n        stack: error.stack,\r\n        taskId: selectedTask.id,\r\n        action: action\r\n      });\r\n      \r\n      let errorMessage = `Failed to ${action} task`;\r\n      if (error.message.includes('404')) {\r\n        errorMessage += ': Task not found or already completed';\r\n      } else if (error.message.includes('400')) {\r\n        errorMessage += ': Invalid request data';\r\n      } else if (error.message.includes('500')) {\r\n        errorMessage += ': Server error';\r\n      } else {\r\n        errorMessage += `: ${error.message}`;\r\n      }\r\n      \r\n      addAlert(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Show assign modal\r\n  const showAssignTaskModal = () => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n    setAssigneeName('');\r\n    setShowAssignModal(true);\r\n  };\r\n\r\n  // Handle task assignment with assignee name\r\n  const handleTaskAssignment = async (action, assigneeName = null) => {\r\n    if (!selectedTask) {\r\n      addAlert('No task selected', 'error');\r\n      return;\r\n    }\r\n\r\n    if (action === 'assign' && !assigneeName) {\r\n      addAlert('Please enter assignee name', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      let updatedTask;\r\n\r\n      if (action === 'assign') {\r\n        console.log('Assigning task:', selectedTask.id, 'to:', assigneeName);\r\n        console.log('Making API call to assign task...');\r\n        updatedTask = await tasklistApi.assignTask(selectedTask.id, assigneeName);\r\n        console.log('Assignment API call completed:', updatedTask);\r\n      } else {\r\n        console.log('Unassigning task:', selectedTask.id);\r\n        console.log('Making API call to unassign task...');\r\n        updatedTask = await tasklistApi.unassignTask(selectedTask.id);\r\n        console.log('Unassignment API call completed:', updatedTask);\r\n      }\r\n\r\n      console.log('Task assignment result:', updatedTask);\r\n\r\n      // Update local state\r\n      const newAssignedTo = action === 'assign' ? assigneeName : null;\r\n      setOpenTasks(prev => prev.map(task => \r\n        task.id === selectedTask.id \r\n          ? { \r\n              ...task, \r\n              assignedTo: newAssignedTo,\r\n              isAssigned: !!newAssignedTo,\r\n              taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n            }\r\n          : task\r\n      ));\r\n\r\n      // Update selected task\r\n      setSelectedTask(prev => ({\r\n        ...prev,\r\n        assignedTo: newAssignedTo,\r\n        isAssigned: !!newAssignedTo,\r\n        taskStatus: newAssignedTo ? 'assigned' : 'unassigned'\r\n      }));\r\n      \r\n      addAlert(\r\n        `Task ${action === 'assign' ? 'assigned to ' + assigneeName : 'unassigned'} successfully`, \r\n        'success'\r\n      );\r\n\r\n      // Close modal if it was open\r\n      setShowAssignModal(false);\r\n      setAssigneeName('');\r\n\r\n    } catch (error) {\r\n      console.error('Error processing task assignment:', error);\r\n      console.error('Error details:', {\r\n        message: error.message,\r\n        stack: error.stack,\r\n        response: error.response\r\n      });\r\n      \r\n      let errorMessage = `Failed to ${action} task`;\r\n      if (error.message) {\r\n        errorMessage += `: ${error.message}`;\r\n      }\r\n      \r\n      addAlert(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle assign modal confirmation\r\n  const handleAssignConfirm = () => {\r\n    console.log('=== ASSIGN CONFIRM DEBUG ===');\r\n    console.log('Assignee name:', assigneeName);\r\n    console.log('Assignee name trimmed:', assigneeName.trim());\r\n    console.log('Selected task:', selectedTask);\r\n    \r\n    if (assigneeName.trim()) {\r\n      console.log('Calling handleTaskAssignment with:', 'assign', assigneeName.trim());\r\n      handleTaskAssignment('assign', assigneeName.trim());\r\n    } else {\r\n      console.log('No assignee name provided');\r\n      addAlert('Please enter assignee name', 'error');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getStatusColor = (status) => {\r\n    // Using CSS variables for consistent theming\r\n    const root = document.documentElement;\r\n    const getVar = (varName) => getComputedStyle(root).getPropertyValue(varName).trim();\r\n    \r\n    switch (status?.toLowerCase()) {\r\n      case 'created': return getVar('--color-info');\r\n      case 'assigned': return getVar('--color-warning');\r\n      case 'unassigned': return getVar('--color-warning-alt');\r\n      case 'completed': return getVar('--color-success');\r\n      case 'canceled': return getVar('--color-danger');\r\n      // Legacy statuses for backward compatibility\r\n      case 'submitted': return getVar('--color-info');\r\n      case 'in_progress': return getVar('--color-warning');\r\n      case 'pending_review': return getVar('--color-warning-alt');\r\n      case 'manual_review': return getVar('--color-danger');\r\n      default: return getVar('--color-secondary');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Handle field value change - store locally without saving\r\n  const handleFieldChange = (taskId, fieldName, newValue) => {\r\n    // Store the change in pending changes\r\n    const changeKey = `${taskId}_${fieldName}`;\r\n    setPendingChanges(prev => ({\r\n      ...prev,\r\n      [changeKey]: { taskId, fieldName, newValue }\r\n    }));\r\n\r\n    // Update the task variables immediately for UI responsiveness\r\n    setTaskVariables(prev => ({\r\n      ...prev,\r\n      [taskId]: prev[taskId].map(variable => \r\n        variable.name === fieldName \r\n          ? { ...variable, value: newValue }\r\n          : variable\r\n      )\r\n    }));\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"open-task-container\">\r\n      <h1 className=\"page-title\">All open tasks</h1>\r\n\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"task-layout\">\r\n        {/* Tasks List */}\r\n        <div className=\"tasks-panel panel\">\r\n          <div className=\"tasks-header flex-header\">\r\n            <h2>All open tasks</h2>\r\n            <div className=\"sort-icon\">⇅</div>\r\n          </div>\r\n          \r\n          <div className=\"tasks-list\">\r\n            {loading ? (\r\n              <div className=\"loading-tasks empty-state\">\r\n                <div className=\"loading-spinner\">⏳</div>\r\n                <h3>Loading tasks...</h3>\r\n                <p>Please wait while we fetch your open tasks.</p>\r\n              </div>\r\n            ) : openTasks.length === 0 ? (\r\n              <div className=\"no-tasks empty-state\">\r\n                <div className=\"no-tasks-icon\">🔍</div>\r\n                <h3>No tasks found</h3>\r\n                <p>There are no tasks matching your filter criteria.</p>\r\n              </div>\r\n            ) : (\r\n              openTasks.map(task => (\r\n                <div \r\n                  key={task.id} \r\n                  className={`task-card ${selectedTask?.id === task.id ? 'selected' : ''}`}\r\n                  onClick={() => handleTaskSelection(task)}\r\n                >\r\n                  <div className=\"task-header\">\r\n                    <h3>{task.taskName}</h3>\r\n                  </div>\r\n                  <div className=\"task-details\">\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Creation Date:</span>\r\n                      <span className=\"detail-value\">{task.creationDate}</span>\r\n                    </div>\r\n                    <div className=\"task-detail-row\">\r\n                      <span className=\"detail-label\">Task Status:</span>\r\n                      <span className=\"detail-value\">{task.taskStatus}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task Details Panel */}\r\n        <div className=\"task-details-panel panel\">\r\n          {selectedTask ? (\r\n            <>\r\n              <div className=\"task-details-header flex-header\">\r\n                <h2>Task Details: </h2>\r\n\r\n                {/* <h2>Task Details: {selectedTask.customerName}</h2> */}\r\n                <div className=\"task-assignment-controls\">\r\n                  {selectedTask.isAssigned ? (\r\n                    <>\r\n                      <span className=\"assigned-to\">Assigned to: {selectedTask.assignedTo}</span>\r\n                      <button \r\n                        className=\"btn btn-secondary unassign-btn btn-base\"\r\n                        onClick={() => handleTaskAssignment('unassign')}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Unassigning...' : 'Unassign'}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button \r\n                      className=\"btn btn-primary assign-btn btn-base\"\r\n                      onClick={showAssignTaskModal}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Assigning...' : 'Assign Task'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"details-sections\">\r\n                {/* Loading message while variables are being fetched */}\r\n                {!taskVariables[selectedTask.id] && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Loading Task Information...</h3>\r\n                    <div className=\"loading-message\">\r\n                      <p>Fetching task variables from backend...</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Customer Information Section - Show First */}\r\n                {taskVariables[selectedTask.id] && taskVariables[selectedTask.id].length > 0 && (\r\n                  <>\r\n                    {/* Extract and display customer information first */}\r\n                    {(() => {\r\n                      const userInfoVariable = taskVariables[selectedTask.id].find(variable => variable.name === 'userInfo');\r\n                      if (userInfoVariable) {\r\n                        try {\r\n                          const userInfo = JSON.parse(userInfoVariable.value);\r\n                          return (\r\n                            <div className=\"details-section customer-information-section\">\r\n                              <h3>Customer Information</h3>\r\n                              <div className=\"variables-grid\">\r\n                                <div className=\"variable-group\">\r\n                                  {/* Customer Details */}\r\n                                  {userInfo.customer && (\r\n                                    <div className=\"variable-subgroup\">\r\n                                      <h5>Personal Details</h5>\r\n                                      {Object.entries(userInfo.customer).map(([key, value]) => (\r\n                                        <div key={key} className=\"variable-item\">\r\n                                          <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                          <span className=\"variable-value\">\r\n                                            {key === 'dob' && value ? new Date(value).toLocaleDateString() : \r\n                                             key === 'pep' ? (value ? 'Yes' : 'No') :\r\n                                             value || 'Not provided'}\r\n                                          </span>\r\n                                        </div>\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n\r\n                                  {/* Address Details */}\r\n                                  {userInfo.address && (\r\n                                    <div className=\"variable-subgroup\">\r\n                                      <h5>Address Details</h5>\r\n                                      {Object.entries(userInfo.address).map(([key, value]) => (\r\n                                        value && (\r\n                                          <div key={key} className=\"variable-item\">\r\n                                            <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                            <span className=\"variable-value\">{value}</span>\r\n                                          </div>\r\n                                        )\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n\r\n                                  {/* Identity Details */}\r\n                                  {userInfo.ids && (\r\n                                    <div className=\"variable-subgroup\">\r\n                                      <h5>Identity Details</h5>\r\n                                      {Object.entries(userInfo.ids).map(([key, value]) => (\r\n                                        value && (\r\n                                          <div key={key} className=\"variable-item\">\r\n                                            <span className=\"variable-name\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                            <span className=\"variable-value\">{key === 'idType' ? value.toUpperCase() : value}</span>\r\n                                          </div>\r\n                                        )\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n\r\n                                  {/* Product Details */}\r\n                                  {userInfo.product && (\r\n                                    <div className=\"variable-subgroup\">\r\n                                      <h5>Product Details</h5>\r\n                                      {Object.entries(userInfo.product).map(([key, value]) => (\r\n                                        value && (\r\n                                          <div key={key} className=\"variable-item\">\r\n                                            <span className=\"variable-name\">{key.replace(/([A-Z_])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</span>\r\n                                            <span className=\"variable-value\">{value}</span>\r\n                                          </div>\r\n                                        )\r\n                                      ))}\r\n                                    </div>\r\n                                  )}\r\n\r\n                                  {/* Submission Timestamp */}\r\n                                  {userInfo.submissionTimestamp && (\r\n                                    <div className=\"variable-subgroup\">\r\n                                      <h5>Submission Details</h5>\r\n                                      <div className=\"variable-item\">\r\n                                        <span className=\"variable-name\">Submission Timestamp:</span>\r\n                                        <span className=\"variable-value\">{new Date(userInfo.submissionTimestamp).toLocaleString()}</span>\r\n                                      </div>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        } catch (e) {\r\n                          return null;\r\n                        }\r\n                      }\r\n                      return null;\r\n                    })()}\r\n\r\n                    {/* Task Information Section - Show Second */}\r\n                    <div className=\"details-section\">\r\n                      <h3>Task Information</h3>\r\n                      <div className=\"info-grid\">\r\n                        {taskVariables[selectedTask.id]\r\n                          .filter(variable => {\r\n                            // Filter out specific fields that should not be displayed and userInfo (already shown above)\r\n                            const fieldsToHide = [\r\n                              'pep',\r\n                              'incomeBand',\r\n                              'completedSteps',\r\n                              'documentPath',\r\n                              'currentStep',\r\n                              'nextStep',\r\n                              'pan',\r\n                              'status',\r\n                              'userInfo' // Hide userInfo since it's displayed in customer section\r\n                            ];\r\n                            return !fieldsToHide.includes(variable.name);\r\n                          })\r\n                          .map((variable, index) => {\r\n                            // Regular variables only (userInfo is handled above)\r\n                            let displayValue = variable.value;\r\n                            \r\n                            // Clean up JSON strings\r\n                            if (typeof displayValue === 'string' && displayValue.startsWith('\"') && displayValue.endsWith('\"')) {\r\n                              displayValue = displayValue.slice(1, -1);\r\n                            }\r\n                            \r\n                            // Parse arrays if they're JSON strings\r\n                            if (variable.name === 'completedSteps' && typeof displayValue === 'string' && displayValue.startsWith('[')) {\r\n                              try {\r\n                                const steps = JSON.parse(displayValue);\r\n                                displayValue = steps.join(', ');\r\n                              } catch (e) {\r\n                                // Keep original value if parsing fails\r\n                              }\r\n                            }\r\n                            \r\n                            const fieldKey = `${selectedTask.id}_${variable.name}`;\r\n                            \r\n                            return (\r\n                              <div key={index}>\r\n                                <strong>{variable.name.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</strong> {displayValue || 'Not set'}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                {/* Customer Personal Information - Fallback if no variables loaded */}\r\n                {(!taskVariables[selectedTask.id] || taskVariables[selectedTask.id].length === 0) && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Customer Personal Information</h3>\r\n                    <div className=\"info-grid\">\r\n                      {(() => {\r\n                        const customerData = getEnhancedCustomerData(selectedTask);\r\n                        return (\r\n                          <>\r\n                            {customerData.fullName && (\r\n                              <div><strong>Full Name:</strong> {customerData.fullName}</div>\r\n                            )}\r\n                            {customerData.dob && (\r\n                              <div><strong>Date of Birth:</strong> {new Date(customerData.dob).toLocaleDateString()}</div>\r\n                            )}\r\n                            {customerData.email && (\r\n                              <div><strong>Email:</strong> {customerData.email}</div>\r\n                            )}\r\n                            {customerData.mobile && (\r\n                              <div><strong>Mobile:</strong> {customerData.mobile}</div>\r\n                            )}\r\n                            {customerData.occupation && (\r\n                              <div><strong>Occupation:</strong> {customerData.occupation}</div>\r\n                            )}\r\n                            {customerData.income_band && (\r\n                              <div><strong>Income Band:</strong> {customerData.income_band}</div>\r\n                            )}\r\n                            <div><strong>PEP Status:</strong> {customerData.pep ? 'Yes' : 'No'}</div>\r\n                            {customerData.submissionTimestamp && (\r\n                              <div><strong>Submission Date:</strong> {new Date(customerData.submissionTimestamp).toLocaleString()}</div>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      })()}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n                {/* Documents */}\r\n                {selectedTask.documents && selectedTask.documents.length > 0 && (\r\n                  <div className=\"details-section\">\r\n                    <h3>Documents ({selectedTask.documents.length})</h3>\r\n                    <div className=\"documents-list\">\r\n                      {selectedTask.documents.map((doc, index) => (\r\n                        <div key={index} className=\"document-item\">\r\n                          <div className=\"doc-info\">\r\n                            <div className=\"doc-name\">{doc.name}</div>\r\n                            <div className=\"doc-type\">{doc.type}</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Task Status */}\r\n                <div className=\"details-section\">\r\n                  <h3>Task Status</h3>\r\n                  <div className=\"info-grid\">\r\n                    <div>\r\n                      <strong>Current Status:</strong>\r\n                      <span \r\n                        className=\"status-badge\" \r\n                        style={{ backgroundColor: getStatusColor(selectedTask.state || selectedTask.taskStatus) }}\r\n                      >\r\n                        {(selectedTask.state || selectedTask.taskStatus || 'Unknown').replace('_', ' ').toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <strong>Creation Date:</strong> {selectedTask.creationDate}\r\n                    </div>\r\n                    <div>\r\n                      <strong>Task ID:</strong> {selectedTask.id}\r\n                    </div>\r\n                    {selectedTask.processInstanceKey && (\r\n                      <div>\r\n                        <strong>Process Instance:</strong> {selectedTask.processInstanceKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.taskDefinitionId && (\r\n                      <div>\r\n                        <strong>Task Definition:</strong> {selectedTask.taskDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processDefinitionId && (\r\n                      <div>\r\n                        <strong>Process Definition:</strong> {selectedTask.processDefinitionId}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.processName && (\r\n                      <div>\r\n                        <strong>Process Name:</strong> {selectedTask.processName}\r\n                      </div>\r\n                    )}\r\n                    {/* <div>\r\n                      <strong>Completed Steps:</strong> {selectedTask.completedSteps}\r\n                    </div> */}\r\n                    {selectedTask.priority && (\r\n                      <div>\r\n                        <strong>Priority:</strong> {selectedTask.priority}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.dueDate && (\r\n                      <div>\r\n                        <strong>Due Date:</strong> {new Date(selectedTask.dueDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.followUpDate && (\r\n                      <div>\r\n                        <strong>Follow Up Date:</strong> {new Date(selectedTask.followUpDate).toLocaleDateString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.formKey && (\r\n                      <div>\r\n                        <strong>Form Key:</strong> {selectedTask.formKey}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateGroups && selectedTask.candidateGroups.length > 0 && (\r\n                      <div>\r\n                        <strong>Candidate Groups:</strong> {selectedTask.candidateGroups.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.candidateUsers && selectedTask.candidateUsers.length > 0 && (\r\n                      <div>\r\n                        <strong>Candidate Users:</strong> {selectedTask.candidateUsers.join(', ')}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.creationTime && (\r\n                      <div>\r\n                        <strong>Creation Time:</strong> {new Date(selectedTask.creationTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                    {selectedTask.completionTime && (\r\n                      <div>\r\n                        <strong>Completion Time:</strong> {new Date(selectedTask.completionTime).toLocaleString()}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* Task Actions */}\r\n                <div className=\"task-actions\">\r\n                  {(() => {\r\n                    const taskPendingChanges = Object.values(pendingChanges).filter(change => change.taskId === selectedTask.id);\r\n                    return taskPendingChanges.length > 0 && (\r\n                      <div className=\"pending-changes-summary\">\r\n                        <span className=\"pending-changes-text\">\r\n                          📝 {taskPendingChanges.length} unsaved change{taskPendingChanges.length > 1 ? 's' : ''} - will be saved when you approve or reject\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                  <div className=\"action-buttons\">\r\n                    <button \r\n                      className=\"btn btn-approve\"\r\n                      onClick={() => handleTaskAction('approve')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '⏳ Approving...' : '✓ Approve'}\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-reject\"\r\n                      onClick={() => handleTaskAction('reject')}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '⏳ Rejecting...' : '✗ Reject'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-selection empty-state\">\r\n              <h2>Select a Task</h2>\r\n              <p>Choose a task from the list to view its details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assignment Modal */}\r\n      {showAssignModal && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowAssignModal(false)}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h3>Assign Task</h3>\r\n              <button \r\n                className=\"modal-close\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Assign task \"{selectedTask?.taskName}\" to:</p>\r\n              <input\r\n                type=\"text\"\r\n                className=\"assignee-input\"\r\n                placeholder=\"Enter assignee name\"\r\n                value={assigneeName}\r\n                onChange={(e) => setAssigneeName(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    handleAssignConfirm();\r\n                  }\r\n                }}\r\n                autoFocus\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => setShowAssignModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={handleAssignConfirm}\r\n                disabled={!assigneeName.trim() || loading}\r\n              >\r\n                {loading ? 'Assigning...' : 'Assign'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}